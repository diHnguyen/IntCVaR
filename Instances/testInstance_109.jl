edge = [1 3; 1 6; 1 13; 2 4; 2 5; 2 6; 2 8; 2 9; 2 10; 3 4; 3 11; 3 12; 3 13; 3 14; 4 6; 4 7; 4 10; 4 15; 5 4; 5 10; 5 12; 5 14; 6 2; 6 8; 6 9; 6 11; 6 15; 7 3; 7 6; 7 11; 7 13; 8 3; 8 7; 8 9; 8 12; 8 14; 9 4; 9 6; 9 14; 10 5; 10 6; 10 8; 10 14; 10 15; 11 2; 11 4; 11 10; 11 12; 12 4; 12 6; 12 7; 12 9; 12 10; 12 14; 13 2; 13 7; 13 12; 13 15; 14 2; 14 3; 14 4; 14 6; 14 12]
cL_orig = [6.0, 208.0, 519.0, 22.0, 2.0, 12.0, 237.0, 119.0, 394.0, 13.0, 264.0, 219.0, 322.0, 228.0, 54.0, 20.0, 9.0, 125.0, 15.0, 4.0, 102.0, 351.0, 37.0, 17.0, 7.0, 138.0, 72.0, 124.0, 1.0, 48.0, 32.0, 208.0, 13.0, 46.0, 91.0, 51.0, 180.0, 148.0, 148.0, 3.0, 11.0, 21.0, 31.0, 165.0, 9.0, 120.0, 20.0, 14.0, 141.0, 250.0, 109.0, 90.0, 77.0, 17.0, 473.0, 114.0, 17.0, 31.0, 144.0, 338.0, 82.0, 46.0, 5.0]
cU_orig = [6.0, 208.0, 519.0, 22.0, 2.0, 12.0, 237.0, 251.0, 394.0, 31.0, 264.0, 219.0, 372.0, 228.0, 54.0, 32.0, 9.0, 629.0, 15.0, 72.0, 102.0, 351.0, 37.0, 115.0, 7.0, 188.0, 72.0, 262.0, 63.0, 48.0, 32.0, 208.0, 13.0, 46.0, 117.0, 51.0, 180.0, 148.0, 148.0, 33.0, 131.0, 101.0, 31.0, 167.0, 221.0, 120.0, 20.0, 14.0, 587.0, 250.0, 109.0, 90.0, 77.0, 81.0, 473.0, 378.0, 17.0, 133.0, 144.0, 338.0, 372.0, 46.0, 5.0]
d = [11.0, 19.0, 11.0, 47.0, 24.0, 6.0, 35.0, 23.0, 22.0, 24.0, 11.0, 20.0, 43.0, 9.0, 21.0, 26.0, 28.0, 8.0, 7.0, 29.0, 29.0, 46.0, 24.0, 22.0, 47.0, 23.0, 30.0, 6.0, 17.0, 32.0, 20.0, 41.0, 22.0, 18.0, 50.0, 29.0, 19.0, 29.0, 41.0, 42.0, 5.0, 40.0, 23.0, 11.0, 34.0, 29.0, 27.0, 6.0, 40.0, 17.0, 31.0, 23.0, 19.0, 28.0, 9.0, 11.0, 37.0, 17.0, 3.0, 3.0, 26.0, 48.0, 18.0]
Len = length(d)

yy = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
