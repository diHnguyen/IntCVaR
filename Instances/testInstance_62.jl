edge = [1 3; 1 8; 1 11; 1 14; 1 15; 2 5; 2 6; 2 7; 2 8; 2 9; 2 11; 2 12; 2 13; 3 5; 3 11; 3 12; 3 14; 4 2; 4 9; 4 10; 5 2; 5 3; 5 4; 5 6; 5 10; 5 11; 5 15; 6 3; 6 4; 6 12; 6 14; 7 2; 7 3; 7 11; 9 3; 9 4; 9 6; 9 7; 9 8; 9 10; 9 13; 9 15; 10 5; 10 9; 10 15; 11 2; 11 5; 11 13; 11 15; 12 3; 12 4; 12 7; 12 10; 12 13; 13 5; 13 8; 13 12; 13 15; 14 3; 14 4; 14 5; 14 9; 14 12; 14 15]
cL_orig = [50.0, 90.0, 132.0, 442.0, 569.0, 128.0, 18.0, 206.0, 103.0, 249.0, 291.0, 47.0, 356.0, 44.0, 95.0, 99.0, 184.0, 38.0, 165.0, 173.0, 58.0, 89.0, 47.0, 7.0, 200.0, 97.0, 398.0, 3.0, 54.0, 2.0, 173.0, 129.0, 10.0, 173.0, 119.0, 3.0, 37.0, 70.0, 3.0, 16.0, 41.0, 46.0, 249.0, 49.0, 131.0, 294.0, 26.0, 77.0, 10.0, 130.0, 338.0, 54.0, 49.0, 1.0, 212.0, 41.0, 46.0, 42.0, 92.0, 432.0, 178.0, 7.0, 92.0, 40.0]
cU_orig = [50.0, 90.0, 132.0, 500.0, 569.0, 128.0, 154.0, 206.0, 103.0, 249.0, 291.0, 335.0, 356.0, 44.0, 621.0, 99.0, 184.0, 38.0, 307.0, 173.0, 60.0, 89.0, 47.0, 7.0, 200.0, 97.0, 398.0, 3.0, 126.0, 2.0, 173.0, 129.0, 10.0, 173.0, 119.0, 5.0, 37.0, 70.0, 3.0, 16.0, 121.0, 386.0, 249.0, 49.0, 131.0, 294.0, 30.0, 77.0, 112.0, 130.0, 338.0, 54.0, 103.0, 1.0, 460.0, 41.0, 46.0, 42.0, 92.0, 432.0, 178.0, 7.0, 92.0, 40.0]
d = [4.0, 18.0, 47.0, 50.0, 1.0, 39.0, 46.0, 33.0, 39.0, 8.0, 36.0, 31.0, 22.0, 2.0, 47.0, 16.0, 24.0, 16.0, 34.0, 24.0, 6.0, 44.0, 18.0, 29.0, 22.0, 25.0, 26.0, 35.0, 48.0, 39.0, 36.0, 19.0, 7.0, 1.0, 44.0, 33.0, 1.0, 49.0, 14.0, 6.0, 39.0, 11.0, 23.0, 14.0, 36.0, 25.0, 2.0, 5.0, 35.0, 4.0, 50.0, 11.0, 12.0, 47.0, 5.0, 45.0, 3.0, 28.0, 49.0, 45.0, 6.0, 16.0, 8.0, 8.0]
Len = length(d)

yy = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
