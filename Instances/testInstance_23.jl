edge = [1 3; 1 5; 1 8; 1 10; 1 13; 2 5; 2 7; 3 5; 3 6; 3 9; 3 15; 4 6; 4 8; 4 11; 4 13; 4 15; 5 6; 5 9; 6 2; 6 3; 6 10; 6 13; 6 14; 7 5; 7 10; 7 11; 7 13; 7 14; 8 6; 8 9; 8 13; 8 14; 9 3; 9 5; 9 6; 9 8; 9 11; 9 12; 9 14; 9 15; 10 5; 10 8; 10 12; 11 4; 11 13; 11 14; 12 2; 12 5; 12 6; 12 10; 12 11; 13 4; 13 5; 13 11; 13 14; 13 15; 14 4; 14 6; 14 7; 14 9; 14 10; 14 13; 14 15]
cL_orig = [84.0, 98.0, 97.0, 112.0, 151.0, 43.0, 215.0, 20.0, 70.0, 94.0, 374.0, 10.0, 151.0, 125.0, 326.0, 205.0, 25.0, 82.0, 9.0, 142.0, 195.0, 185.0, 143.0, 25.0, 123.0, 17.0, 107.0, 276.0, 97.0, 21.0, 67.0, 200.0, 121.0, 112.0, 28.0, 42.0, 0.0, 93.0, 113.0, 148.0, 6.0, 19.0, 32.0, 28.0, 8.0, 137.0, 244.0, 86.0, 53.0, 14.0, 13.0, 114.0, 381.0, 87.0, 34.0, 20.0, 191.0, 116.0, 19.0, 16.0, 6.0, 11.0, 43.0]
cU_orig = [84.0, 98.0, 97.0, 112.0, 151.0, 139.0, 215.0, 32.0, 70.0, 94.0, 670.0, 10.0, 151.0, 125.0, 326.0, 205.0, 37.0, 82.0, 9.0, 142.0, 195.0, 185.0, 439.0, 25.0, 123.0, 17.0, 107.0, 276.0, 97.0, 21.0, 67.0, 200.0, 121.0, 112.0, 28.0, 42.0, 28.0, 93.0, 113.0, 148.0, 6.0, 19.0, 32.0, 28.0, 8.0, 137.0, 244.0, 86.0, 53.0, 84.0, 13.0, 114.0, 381.0, 87.0, 34.0, 114.0, 541.0, 116.0, 19.0, 16.0, 6.0, 11.0, 43.0]
d = [10.0, 15.0, 3.0, 32.0, 8.0, 20.0, 28.0, 28.0, 7.0, 2.0, 18.0, 17.0, 3.0, 4.0, 15.0, 37.0, 3.0, 2.0, 20.0, 49.0, 9.0, 14.0, 27.0, 7.0, 39.0, 16.0, 11.0, 37.0, 35.0, 7.0, 49.0, 18.0, 11.0, 29.0, 39.0, 27.0, 11.0, 13.0, 8.0, 7.0, 13.0, 48.0, 48.0, 29.0, 20.0, 17.0, 21.0, 41.0, 21.0, 27.0, 32.0, 32.0, 42.0, 12.0, 14.0, 5.0, 31.0, 12.0, 20.0, 37.0, 49.0, 42.0, 22.0]
Len = length(d)

yy = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
