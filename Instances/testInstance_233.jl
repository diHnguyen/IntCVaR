edge = [1 4; 1 6; 1 7; 1 10; 1 12; 2 4; 2 5; 2 6; 2 8; 2 9; 2 13; 3 7; 3 8; 3 10; 3 12; 3 14; 4 2; 4 7; 4 9; 4 11; 4 13; 4 14; 5 2; 5 7; 5 15; 6 13; 6 14; 7 5; 7 6; 7 9; 7 12; 7 15; 8 2; 8 3; 8 6; 8 7; 8 11; 8 14; 8 15; 9 2; 9 3; 9 5; 9 13; 9 14; 10 3; 10 6; 10 7; 10 12; 11 3; 11 6; 11 7; 12 3; 12 7; 12 13; 12 15; 13 2; 13 7; 13 9; 13 12; 14 6; 14 8; 14 9; 14 12; 14 15]
cL_orig = [81.0, 143.0, 76.0, 233.0, 446.0, 89.0, 73.0, 66.0, 33.0, 213.0, 76.0, 37.0, 53.0, 75.0, 98.0, 71.0, 25.0, 78.0, 171.0, 223.0, 72.0, 239.0, 118.0, 13.0, 408.0, 325.0, 28.0, 48.0, 12.0, 49.0, 147.0, 374.0, 145.0, 108.0, 11.0, 5.0, 94.0, 2.0, 6.0, 234.0, 14.0, 50.0, 56.0, 151.0, 122.0, 83.0, 20.0, 63.0, 17.0, 162.0, 61.0, 42.0, 67.0, 33.0, 67.0, 144.0, 199.0, 110.0, 22.0, 282.0, 299.0, 10.0, 4.0, 8.0]
cU_orig = [81.0, 143.0, 76.0, 233.0, 446.0, 89.0, 73.0, 66.0, 239.0, 475.0, 76.0, 37.0, 53.0, 75.0, 160.0, 71.0, 25.0, 78.0, 171.0, 223.0, 346.0, 239.0, 118.0, 39.0, 408.0, 325.0, 28.0, 48.0, 60.0, 49.0, 147.0, 374.0, 367.0, 108.0, 11.0, 5.0, 94.0, 2.0, 6.0, 234.0, 14.0, 250.0, 56.0, 151.0, 122.0, 83.0, 20.0, 63.0, 343.0, 248.0, 61.0, 98.0, 67.0, 33.0, 67.0, 264.0, 199.0, 110.0, 22.0, 344.0, 299.0, 10.0, 4.0, 8.0]
d = [27.0, 43.0, 23.0, 31.0, 50.0, 28.0, 36.0, 14.0, 9.0, 22.0, 27.0, 32.0, 48.0, 31.0, 15.0, 9.0, 31.0, 26.0, 33.0, 2.0, 38.0, 49.0, 11.0, 14.0, 32.0, 4.0, 29.0, 37.0, 44.0, 14.0, 29.0, 49.0, 23.0, 8.0, 26.0, 8.0, 38.0, 27.0, 22.0, 15.0, 47.0, 6.0, 6.0, 37.0, 14.0, 27.0, 48.0, 35.0, 46.0, 23.0, 31.0, 1.0, 42.0, 50.0, 5.0, 48.0, 13.0, 36.0, 3.0, 16.0, 12.0, 37.0, 42.0, 47.0]
Len = length(d)

yy = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
