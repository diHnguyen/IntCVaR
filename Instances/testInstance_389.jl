edge = [1 2; 1 3; 1 5; 1 9; 1 11; 1 15; 2 3; 2 8; 2 10; 2 12; 2 14; 2 15; 3 8; 3 9; 3 10; 3 12; 4 2; 4 3; 4 6; 4 7; 4 8; 4 11; 4 13; 4 14; 5 6; 5 11; 5 15; 6 9; 6 10; 6 14; 7 4; 7 5; 7 9; 7 11; 7 13; 8 3; 8 9; 8 14; 9 5; 9 13; 9 14; 10 3; 10 11; 10 13; 10 14; 10 15; 11 8; 11 13; 11 14; 11 15; 12 4; 12 6; 12 8; 12 9; 12 13; 13 4; 13 5; 13 11; 14 2; 14 4; 14 7; 14 11; 14 15]
cL_orig = [49.0, 1.0, 76.0, 2.0, 235.0, 117.0, 33.0, 208.0, 90.0, 73.0, 225.0, 439.0, 74.0, 54.0, 100.0, 248.0, 68.0, 37.0, 92.0, 43.0, 61.0, 207.0, 209.0, 211.0, 24.0, 36.0, 395.0, 1.0, 101.0, 145.0, 135.0, 54.0, 22.0, 9.0, 68.0, 121.0, 27.0, 57.0, 54.0, 60.0, 114.0, 59.0, 33.0, 62.0, 157.0, 242.0, 46.0, 24.0, 132.0, 127.0, 108.0, 137.0, 156.0, 141.0, 2.0, 101.0, 342.0, 16.0, 25.0, 76.0, 145.0, 25.0, 41.0]
cU_orig = [49.0, 13.0, 76.0, 42.0, 235.0, 117.0, 33.0, 208.0, 90.0, 73.0, 225.0, 439.0, 74.0, 54.0, 100.0, 248.0, 68.0, 37.0, 92.0, 43.0, 61.0, 229.0, 209.0, 211.0, 24.0, 90.0, 395.0, 1.0, 199.0, 145.0, 135.0, 54.0, 28.0, 9.0, 206.0, 121.0, 27.0, 57.0, 56.0, 60.0, 114.0, 79.0, 33.0, 62.0, 157.0, 242.0, 46.0, 60.0, 148.0, 127.0, 108.0, 137.0, 172.0, 141.0, 26.0, 391.0, 342.0, 16.0, 25.0, 76.0, 145.0, 169.0, 41.0]
d = [27.0, 41.0, 30.0, 25.0, 37.0, 3.0, 4.0, 39.0, 29.0, 49.0, 30.0, 40.0, 38.0, 38.0, 49.0, 8.0, 14.0, 31.0, 49.0, 15.0, 6.0, 32.0, 34.0, 44.0, 7.0, 47.0, 23.0, 11.0, 6.0, 30.0, 4.0, 3.0, 28.0, 22.0, 26.0, 38.0, 46.0, 42.0, 9.0, 45.0, 48.0, 29.0, 29.0, 8.0, 35.0, 49.0, 12.0, 32.0, 26.0, 8.0, 10.0, 2.0, 12.0, 5.0, 37.0, 10.0, 18.0, 12.0, 22.0, 16.0, 2.0, 28.0, 50.0]
Len = length(d)

yy = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
