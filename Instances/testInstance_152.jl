edge = [1 3; 1 4; 1 13; 2 7; 2 12; 2 13; 3 7; 3 12; 3 14; 3 15; 4 2; 4 5; 4 6; 4 11; 4 14; 5 2; 5 7; 5 8; 5 11; 6 3; 6 5; 6 7; 6 8; 6 12; 6 13; 7 2; 7 8; 8 3; 8 4; 8 9; 8 10; 8 12; 8 14; 9 3; 9 7; 9 15; 10 2; 10 3; 10 5; 10 8; 10 11; 10 14; 11 2; 11 3; 11 4; 11 5; 11 6; 11 13; 12 2; 12 3; 12 5; 12 7; 12 8; 12 9; 12 10; 12 15; 13 9; 14 3; 14 7; 14 9; 14 11; 14 13; 14 15]
cL_orig = [32.0, 58.0, 178.0, 107.0, 247.0, 94.0, 123.0, 446.0, 52.0, 584.0, 40.0, 0.0, 23.0, 259.0, 479.0, 13.0, 79.0, 32.0, 101.0, 52.0, 2.0, 16.0, 12.0, 9.0, 213.0, 219.0, 13.0, 11.0, 48.0, 48.0, 20.0, 32.0, 298.0, 27.0, 39.0, 254.0, 392.0, 264.0, 42.0, 76.0, 16.0, 14.0, 254.0, 290.0, 160.0, 271.0, 59.0, 19.0, 214.0, 270.0, 293.0, 6.0, 160.0, 0.0, 38.0, 144.0, 8.0, 179.0, 313.0, 239.0, 123.0, 45.0, 4.0]
cU_orig = [32.0, 58.0, 958.0, 107.0, 247.0, 118.0, 123.0, 446.0, 974.0, 584.0, 40.0, 68.0, 23.0, 259.0, 479.0, 71.0, 79.0, 32.0, 101.0, 52.0, 20.0, 16.0, 126.0, 49.0, 213.0, 219.0, 13.0, 11.0, 48.0, 48.0, 20.0, 68.0, 298.0, 55.0, 39.0, 254.0, 392.0, 264.0, 42.0, 76.0, 16.0, 26.0, 254.0, 290.0, 258.0, 271.0, 189.0, 93.0, 214.0, 270.0, 293.0, 6.0, 160.0, 40.0, 106.0, 144.0, 8.0, 179.0, 313.0, 239.0, 141.0, 45.0, 8.0]
d = [47.0, 37.0, 26.0, 44.0, 12.0, 46.0, 35.0, 22.0, 49.0, 27.0, 27.0, 40.0, 34.0, 48.0, 46.0, 34.0, 9.0, 49.0, 21.0, 21.0, 43.0, 7.0, 37.0, 43.0, 42.0, 2.0, 25.0, 41.0, 43.0, 41.0, 29.0, 27.0, 1.0, 28.0, 12.0, 3.0, 21.0, 17.0, 21.0, 4.0, 12.0, 22.0, 16.0, 41.0, 15.0, 35.0, 15.0, 30.0, 23.0, 34.0, 15.0, 44.0, 20.0, 31.0, 15.0, 18.0, 37.0, 8.0, 26.0, 8.0, 3.0, 22.0, 20.0]
Len = length(d)

yy = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
