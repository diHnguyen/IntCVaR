edge = [1 5; 1 6; 1 8; 1 13; 1 14; 1 15; 2 3; 2 6; 2 7; 2 8; 2 11; 2 13; 2 14; 3 8; 3 11; 4 5; 4 10; 4 13; 5 12; 5 13; 5 14; 6 2; 6 3; 6 8; 7 3; 7 6; 7 8; 7 12; 7 13; 8 9; 8 11; 8 14; 9 2; 9 3; 9 7; 9 8; 9 15; 10 3; 10 4; 10 5; 10 8; 10 9; 10 11; 10 15; 11 3; 11 5; 11 6; 11 8; 11 9; 11 15; 12 8; 12 10; 12 11; 13 3; 13 4; 13 7; 13 10; 13 11; 13 12; 13 14; 13 15; 14 3; 14 6; 14 7; 14 9; 14 12; 14 13]
cL_orig = [183.0, 34.0, 341.0, 32.0, 486.0, 601.0, 33.0, 120.0, 78.0, 91.0, 7.0, 52.0, 169.0, 68.0, 289.0, 9.0, 161.0, 87.0, 178.0, 12.0, 173.0, 139.0, 116.0, 42.0, 2.0, 47.0, 39.0, 190.0, 72.0, 22.0, 62.0, 282.0, 10.0, 187.0, 47.0, 6.0, 219.0, 8.0, 158.0, 169.0, 6.0, 9.0, 17.0, 153.0, 67.0, 42.0, 83.0, 51.0, 53.0, 147.0, 144.0, 69.0, 17.0, 445.0, 82.0, 215.0, 112.0, 20.0, 12.0, 18.0, 40.0, 402.0, 173.0, 39.0, 207.0, 97.0, 43.0]
cU_orig = [183.0, 222.0, 341.0, 32.0, 486.0, 601.0, 33.0, 120.0, 78.0, 91.0, 7.0, 382.0, 169.0, 180.0, 289.0, 13.0, 161.0, 87.0, 178.0, 222.0, 173.0, 139.0, 116.0, 42.0, 6.0, 47.0, 39.0, 190.0, 372.0, 24.0, 62.0, 282.0, 10.0, 187.0, 47.0, 38.0, 245.0, 148.0, 158.0, 169.0, 6.0, 9.0, 17.0, 153.0, 241.0, 94.0, 83.0, 51.0, 53.0, 183.0, 144.0, 69.0, 17.0, 445.0, 168.0, 215.0, 112.0, 20.0, 12.0, 18.0, 40.0, 402.0, 409.0, 39.0, 271.0, 97.0, 43.0]
d = [19.0, 6.0, 38.0, 6.0, 12.0, 18.0, 45.0, 26.0, 33.0, 41.0, 8.0, 24.0, 37.0, 41.0, 26.0, 2.0, 36.0, 21.0, 25.0, 36.0, 36.0, 45.0, 1.0, 44.0, 2.0, 3.0, 46.0, 31.0, 5.0, 27.0, 21.0, 47.0, 31.0, 5.0, 1.0, 37.0, 18.0, 28.0, 48.0, 35.0, 9.0, 4.0, 6.0, 42.0, 10.0, 31.0, 7.0, 19.0, 39.0, 47.0, 29.0, 44.0, 6.0, 33.0, 46.0, 42.0, 7.0, 12.0, 43.0, 37.0, 27.0, 29.0, 44.0, 11.0, 9.0, 37.0, 46.0]
Len = length(d)

yy = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
