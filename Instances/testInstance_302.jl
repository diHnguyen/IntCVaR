edge = [1 2; 1 4; 1 6; 1 10; 2 4; 2 6; 2 9; 2 10; 2 14; 3 2; 3 9; 3 11; 3 14; 3 15; 4 2; 4 5; 4 6; 4 7; 4 9; 4 13; 5 6; 5 9; 5 10; 5 12; 5 14; 6 2; 6 4; 6 10; 6 11; 6 12; 6 15; 7 4; 7 5; 7 9; 7 14; 8 4; 8 5; 8 10; 8 12; 8 15; 9 5; 9 10; 9 12; 10 3; 10 4; 10 11; 10 12; 10 13; 10 15; 11 2; 11 7; 11 10; 11 13; 12 9; 12 11; 13 3; 13 4; 13 7; 13 9; 13 11; 14 2; 14 3; 14 5; 14 8]
cL_orig = [8.0, 40.0, 95.0, 133.0, 49.0, 49.0, 22.0, 121.0, 112.0, 13.0, 149.0, 92.0, 295.0, 259.0, 93.0, 42.0, 75.0, 1.0, 52.0, 349.0, 9.0, 100.0, 97.0, 0.0, 96.0, 189.0, 2.0, 52.0, 119.0, 82.0, 214.0, 51.0, 28.0, 19.0, 268.0, 35.0, 1.0, 38.0, 31.0, 37.0, 39.0, 34.0, 6.0, 198.0, 174.0, 15.0, 20.0, 101.0, 214.0, 445.0, 34.0, 23.0, 42.0, 80.0, 13.0, 341.0, 161.0, 195.0, 109.0, 79.0, 64.0, 227.0, 318.0, 0.0]
cU_orig = [8.0, 40.0, 189.0, 133.0, 49.0, 49.0, 22.0, 121.0, 592.0, 13.0, 149.0, 92.0, 395.0, 599.0, 93.0, 42.0, 75.0, 27.0, 52.0, 349.0, 9.0, 100.0, 97.0, 4.0, 96.0, 189.0, 2.0, 104.0, 237.0, 82.0, 214.0, 101.0, 28.0, 19.0, 344.0, 131.0, 1.0, 118.0, 109.0, 65.0, 39.0, 40.0, 64.0, 198.0, 174.0, 59.0, 50.0, 101.0, 214.0, 445.0, 34.0, 23.0, 42.0, 80.0, 13.0, 341.0, 161.0, 195.0, 141.0, 79.0, 64.0, 227.0, 318.0, 8.0]
d = [30.0, 4.0, 5.0, 32.0, 5.0, 7.0, 47.0, 20.0, 38.0, 35.0, 31.0, 44.0, 24.0, 23.0, 2.0, 39.0, 3.0, 28.0, 44.0, 15.0, 44.0, 21.0, 7.0, 25.0, 49.0, 9.0, 11.0, 37.0, 48.0, 12.0, 40.0, 37.0, 23.0, 10.0, 29.0, 38.0, 1.0, 27.0, 27.0, 42.0, 49.0, 49.0, 26.0, 34.0, 23.0, 28.0, 2.0, 36.0, 9.0, 20.0, 24.0, 28.0, 15.0, 41.0, 48.0, 33.0, 39.0, 27.0, 3.0, 38.0, 43.0, 41.0, 47.0, 17.0]
Len = length(d)

yy = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
