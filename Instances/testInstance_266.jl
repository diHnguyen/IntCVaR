edge = [1 2; 1 4; 1 5; 1 11; 1 13; 2 5; 2 15; 3 5; 3 13; 4 2; 4 5; 4 6; 4 8; 4 9; 5 2; 5 12; 5 13; 6 3; 6 5; 6 8; 6 14; 7 8; 8 3; 8 6; 8 7; 8 9; 8 14; 9 7; 9 11; 9 12; 9 13; 10 2; 10 4; 10 9; 10 11; 10 12; 10 13; 10 14; 10 15; 11 13; 12 2; 12 4; 12 7; 12 8; 12 9; 12 15; 13 2; 13 3; 13 4; 13 5; 13 7; 13 9; 13 10; 13 11; 13 12; 13 14; 14 2; 14 3; 14 5; 14 7; 14 12; 14 13]
cL_orig = [11.0, 37.0, 92.0, 228.0, 434.0, 61.0, 336.0, 50.0, 227.0, 82.0, 1.0, 80.0, 87.0, 92.0, 118.0, 18.0, 279.0, 37.0, 29.0, 89.0, 394.0, 2.0, 12.0, 98.0, 6.0, 16.0, 130.0, 2.0, 1.0, 96.0, 139.0, 76.0, 219.0, 21.0, 3.0, 80.0, 140.0, 43.0, 121.0, 7.0, 92.0, 146.0, 179.0, 7.0, 103.0, 132.0, 412.0, 163.0, 57.0, 303.0, 13.0, 12.0, 90.0, 5.0, 14.0, 33.0, 512.0, 514.0, 107.0, 236.0, 93.0, 18.0]
cU_orig = [11.0, 45.0, 92.0, 228.0, 594.0, 61.0, 336.0, 50.0, 227.0, 82.0, 1.0, 80.0, 87.0, 92.0, 168.0, 18.0, 279.0, 209.0, 51.0, 89.0, 394.0, 2.0, 50.0, 98.0, 6.0, 16.0, 130.0, 110.0, 1.0, 96.0, 139.0, 76.0, 219.0, 21.0, 67.0, 80.0, 140.0, 43.0, 121.0, 7.0, 92.0, 146.0, 179.0, 51.0, 103.0, 132.0, 412.0, 199.0, 277.0, 303.0, 13.0, 238.0, 90.0, 5.0, 14.0, 33.0, 512.0, 514.0, 527.0, 236.0, 93.0, 18.0]
d = [20.0, 28.0, 13.0, 25.0, 11.0, 32.0, 4.0, 13.0, 4.0, 23.0, 1.0, 42.0, 26.0, 4.0, 21.0, 21.0, 26.0, 10.0, 36.0, 50.0, 32.0, 31.0, 1.0, 40.0, 14.0, 5.0, 50.0, 33.0, 35.0, 42.0, 24.0, 11.0, 25.0, 19.0, 34.0, 38.0, 16.0, 50.0, 1.0, 47.0, 38.0, 14.0, 14.0, 50.0, 12.0, 4.0, 38.0, 19.0, 32.0, 34.0, 34.0, 2.0, 30.0, 46.0, 32.0, 41.0, 37.0, 22.0, 35.0, 8.0, 30.0, 3.0]
Len = length(d)

yy = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
