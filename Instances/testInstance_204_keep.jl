edge = [1 2; 1 6; 1 11; 1 12; 2 6; 2 9; 2 10; 2 11; 2 12; 2 13; 2 14; 2 15; 3 2; 3 5; 3 8; 3 13; 4 7; 4 10; 4 14; 5 7; 5 13; 5 14; 6 2; 6 3; 6 4; 6 5; 6 8; 6 9; 6 10; 6 15; 7 2; 7 5; 7 9; 8 3; 8 4; 8 10; 8 13; 9 4; 9 12; 9 15; 10 3; 10 4; 10 9; 10 12; 10 13; 10 15; 11 3; 11 6; 11 12; 11 13; 11 15; 12 3; 12 6; 12 14; 13 2; 13 4; 13 9; 14 2; 14 10; 14 11; 14 15]
cL_orig = [10.0, 9.0, 345.0, 352.0, 147.0, 298.0, 29.0, 253.0, 241.0, 182.0, 200.0, 62.0, 35.0, 46.0, 129.0, 201.0, 17.0, 280.0, 22.0, 19.0, 165.0, 342.0, 133.0, 64.0, 45.0, 3.0, 1.0, 58.0, 5.0, 144.0, 125.0, 23.0, 88.0, 131.0, 33.0, 44.0, 6.0, 98.0, 24.0, 92.0, 39.0, 9.0, 7.0, 84.0, 16.0, 111.0, 366.0, 11.0, 16.0, 46.0, 104.0, 37.0, 233.0, 54.0, 384.0, 410.0, 7.0, 594.0, 107.0, 19.0, 22.0]
cU_orig = [10.0, 83.0, 345.0, 352.0, 249.0, 298.0, 283.0, 253.0, 241.0, 182.0, 200.0, 62.0, 43.0, 46.0, 129.0, 201.0, 17.0, 280.0, 452.0, 73.0, 165.0, 342.0, 133.0, 64.0, 45.0, 5.0, 45.0, 58.0, 11.0, 144.0, 125.0, 23.0, 88.0, 131.0, 85.0, 44.0, 88.0, 208.0, 184.0, 114.0, 39.0, 9.0, 63.0, 84.0, 16.0, 195.0, 366.0, 433.0, 16.0, 52.0, 138.0, 795.0, 233.0, 54.0, 426.0, 410.0, 7.0, 594.0, 107.0, 19.0, 30.0]
d = [1.0, 24.0, 19.0, 38.0, 42.0, 44.0, 9.0, 8.0, 25.0, 32.0, 38.0, 42.0, 25.0, 17.0, 48.0, 29.0, 16.0, 7.0, 4.0, 25.0, 31.0, 48.0, 29.0, 19.0, 12.0, 17.0, 12.0, 19.0, 28.0, 19.0, 18.0, 18.0, 44.0, 3.0, 9.0, 36.0, 45.0, 29.0, 26.0, 39.0, 36.0, 48.0, 25.0, 19.0, 22.0, 23.0, 5.0, 28.0, 42.0, 40.0, 11.0, 4.0, 38.0, 48.0, 34.0, 20.0, 27.0, 33.0, 23.0, 20.0, 25.0]
Len = length(d)

yy = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
