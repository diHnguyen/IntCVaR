edge = [1 2; 1 4; 1 5; 1 6; 1 9; 1 12; 1 13; 1 14; 2 4; 2 8; 2 9; 2 10; 2 11; 2 15; 3 2; 3 6; 3 9; 3 12; 3 14; 4 2; 4 8; 4 13; 5 7; 5 10; 5 11; 5 13; 5 15; 6 5; 6 9; 6 12; 6 14; 7 3; 7 6; 7 8; 7 13; 8 5; 8 9; 9 6; 9 12; 9 13; 10 4; 10 8; 10 11; 10 12; 10 14; 11 9; 11 10; 12 4; 12 7; 12 9; 12 11; 13 3; 13 6; 13 10; 13 11; 14 2; 14 4; 14 5; 14 8; 14 12; 14 13; 14 15]
cL_orig = [7.0, 25.0, 159.0, 226.0, 26.0, 278.0, 340.0, 546.0, 29.0, 60.0, 220.0, 6.0, 317.0, 116.0, 11.0, 6.0, 61.0, 20.0, 527.0, 7.0, 73.0, 416.0, 35.0, 248.0, 136.0, 61.0, 398.0, 8.0, 62.0, 51.0, 167.0, 173.0, 19.0, 36.0, 230.0, 63.0, 27.0, 57.0, 136.0, 19.0, 43.0, 18.0, 17.0, 77.0, 50.0, 22.0, 9.0, 151.0, 89.0, 35.0, 41.0, 322.0, 262.0, 42.0, 19.0, 206.0, 366.0, 92.0, 34.0, 27.0, 32.0, 4.0]
cU_orig = [7.0, 25.0, 159.0, 226.0, 26.0, 364.0, 528.0, 546.0, 29.0, 60.0, 220.0, 52.0, 317.0, 116.0, 11.0, 54.0, 61.0, 20.0, 527.0, 7.0, 73.0, 416.0, 35.0, 248.0, 136.0, 61.0, 398.0, 8.0, 62.0, 51.0, 167.0, 173.0, 21.0, 36.0, 230.0, 63.0, 73.0, 183.0, 136.0, 45.0, 279.0, 40.0, 17.0, 77.0, 50.0, 38.0, 21.0, 171.0, 89.0, 35.0, 41.0, 322.0, 262.0, 42.0, 19.0, 206.0, 422.0, 92.0, 34.0, 27.0, 32.0, 4.0]
d = [26.0, 30.0, 10.0, 1.0, 50.0, 42.0, 41.0, 33.0, 6.0, 30.0, 9.0, 26.0, 33.0, 32.0, 35.0, 48.0, 42.0, 33.0, 26.0, 10.0, 11.0, 50.0, 36.0, 32.0, 13.0, 23.0, 25.0, 33.0, 3.0, 40.0, 22.0, 42.0, 14.0, 23.0, 40.0, 2.0, 26.0, 30.0, 33.0, 12.0, 8.0, 29.0, 13.0, 32.0, 42.0, 43.0, 33.0, 42.0, 16.0, 6.0, 31.0, 7.0, 1.0, 10.0, 16.0, 16.0, 24.0, 20.0, 35.0, 34.0, 18.0, 11.0]
Len = length(d)

yy = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
