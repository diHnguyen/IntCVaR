edge = [1 3; 1 5; 1 6; 1 7; 1 8; 1 10; 2 5; 2 9; 2 12; 3 2; 3 5; 3 9; 3 12; 3 14; 4 2; 4 5; 4 14; 5 4; 5 6; 5 8; 5 9; 5 15; 6 3; 6 4; 6 5; 6 7; 7 3; 7 8; 7 11; 7 13; 7 14; 8 3; 8 6; 8 10; 9 3; 9 4; 9 10; 9 12; 10 2; 10 3; 10 4; 10 6; 10 7; 10 12; 10 14; 10 15; 11 4; 11 8; 11 9; 12 4; 12 7; 12 13; 13 6; 13 7; 13 9; 13 10; 13 14; 14 3; 14 4; 14 8; 14 12; 14 13]
cL_orig = [68.0, 11.0, 106.0, 119.0, 204.0, 129.0, 115.0, 128.0, 378.0, 2.0, 8.0, 108.0, 62.0, 369.0, 14.0, 12.0, 105.0, 13.0, 2.0, 56.0, 19.0, 389.0, 83.0, 82.0, 7.0, 36.0, 26.0, 6.0, 36.0, 265.0, 208.0, 16.0, 61.0, 8.0, 53.0, 25.0, 12.0, 72.0, 66.0, 145.0, 123.0, 17.0, 46.0, 99.0, 139.0, 172.0, 137.0, 60.0, 63.0, 289.0, 34.0, 1.0, 150.0, 14.0, 26.0, 103.0, 13.0, 15.0, 204.0, 180.0, 16.0, 49.0]
cU_orig = [68.0, 11.0, 106.0, 119.0, 204.0, 129.0, 115.0, 222.0, 378.0, 2.0, 8.0, 382.0, 62.0, 369.0, 50.0, 12.0, 105.0, 13.0, 2.0, 56.0, 19.0, 389.0, 83.0, 102.0, 7.0, 50.0, 26.0, 6.0, 54.0, 265.0, 208.0, 16.0, 107.0, 46.0, 423.0, 25.0, 12.0, 72.0, 102.0, 459.0, 211.0, 55.0, 46.0, 99.0, 139.0, 172.0, 459.0, 130.0, 79.0, 501.0, 34.0, 1.0, 150.0, 14.0, 26.0, 103.0, 13.0, 15.0, 204.0, 334.0, 16.0, 49.0]
d = [48.0, 25.0, 42.0, 37.0, 42.0, 26.0, 15.0, 48.0, 39.0, 5.0, 44.0, 11.0, 3.0, 28.0, 12.0, 21.0, 27.0, 25.0, 9.0, 2.0, 4.0, 16.0, 19.0, 13.0, 18.0, 47.0, 45.0, 34.0, 40.0, 18.0, 38.0, 28.0, 22.0, 35.0, 46.0, 50.0, 36.0, 5.0, 42.0, 21.0, 25.0, 39.0, 24.0, 47.0, 36.0, 37.0, 50.0, 9.0, 1.0, 6.0, 46.0, 7.0, 27.0, 38.0, 22.0, 33.0, 50.0, 21.0, 28.0, 26.0, 1.0, 32.0]
Len = length(d)

yy = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
