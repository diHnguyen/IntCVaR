edge = [1 3; 1 5; 1 9; 1 11; 1 15; 2 9; 2 10; 2 14; 2 15; 3 4; 3 8; 3 9; 3 10; 3 12; 3 15; 4 10; 4 11; 4 12; 5 6; 5 7; 5 8; 5 11; 5 13; 5 15; 6 4; 6 10; 7 2; 7 3; 7 8; 7 10; 7 12; 7 13; 8 6; 8 7; 8 12; 8 14; 8 15; 9 3; 9 4; 9 6; 9 7; 9 10; 10 2; 10 3; 10 4; 10 14; 10 15; 11 2; 11 8; 11 10; 11 12; 11 15; 12 4; 12 6; 12 8; 12 13; 13 2; 13 4; 13 5; 13 7; 13 9; 14 2; 14 7; 14 10; 14 13]
cL_orig = [78.0, 150.0, 19.0, 207.0, 578.0, 32.0, 39.0, 521.0, 105.0, 3.0, 107.0, 198.0, 312.0, 404.0, 270.0, 72.0, 23.0, 74.0, 5.0, 65.0, 66.0, 184.0, 130.0, 49.0, 12.0, 198.0, 23.0, 88.0, 42.0, 87.0, 94.0, 42.0, 63.0, 32.0, 192.0, 286.0, 219.0, 59.0, 53.0, 3.0, 55.0, 34.0, 242.0, 199.0, 34.0, 37.0, 11.0, 392.0, 129.0, 30.0, 30.0, 156.0, 239.0, 165.0, 70.0, 47.0, 411.0, 120.0, 200.0, 5.0, 102.0, 43.0, 70.0, 171.0, 23.0]
cU_orig = [78.0, 150.0, 49.0, 207.0, 578.0, 156.0, 611.0, 521.0, 105.0, 45.0, 107.0, 356.0, 312.0, 404.0, 270.0, 196.0, 23.0, 410.0, 5.0, 65.0, 66.0, 184.0, 130.0, 49.0, 182.0, 198.0, 33.0, 152.0, 42.0, 87.0, 94.0, 120.0, 67.0, 32.0, 192.0, 286.0, 219.0, 59.0, 53.0, 3.0, 55.0, 34.0, 338.0, 199.0, 34.0, 217.0, 17.0, 392.0, 129.0, 66.0, 30.0, 156.0, 239.0, 177.0, 70.0, 47.0, 411.0, 120.0, 200.0, 231.0, 102.0, 43.0, 70.0, 171.0, 23.0]
d = [2.0, 35.0, 15.0, 35.0, 38.0, 18.0, 47.0, 49.0, 42.0, 33.0, 28.0, 21.0, 12.0, 16.0, 34.0, 46.0, 50.0, 26.0, 21.0, 9.0, 39.0, 36.0, 17.0, 25.0, 17.0, 5.0, 27.0, 40.0, 49.0, 43.0, 37.0, 35.0, 46.0, 48.0, 2.0, 27.0, 4.0, 15.0, 3.0, 10.0, 36.0, 15.0, 25.0, 5.0, 20.0, 38.0, 3.0, 19.0, 32.0, 42.0, 42.0, 12.0, 10.0, 46.0, 7.0, 15.0, 18.0, 42.0, 5.0, 20.0, 49.0, 1.0, 26.0, 17.0, 10.0]
Len = length(d)

yy = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
