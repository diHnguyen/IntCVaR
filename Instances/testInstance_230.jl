edge = [1 5; 1 7; 1 9; 1 10; 1 15; 2 3; 2 10; 2 15; 3 2; 3 4; 3 9; 3 15; 4 3; 4 6; 4 9; 4 13; 5 2; 5 6; 5 7; 5 10; 5 13; 6 8; 6 9; 6 14; 7 2; 7 4; 7 6; 7 8; 7 12; 7 15; 8 3; 8 5; 8 14; 9 2; 9 3; 9 4; 9 8; 9 13; 10 3; 10 9; 10 12; 10 14; 11 3; 11 4; 11 5; 11 6; 11 8; 11 9; 12 3; 12 4; 12 5; 12 11; 12 13; 12 14; 12 15; 13 2; 13 3; 13 7; 13 9; 13 15; 14 5; 14 8; 14 12]
cL_orig = [101.0, 46.0, 66.0, 39.0, 477.0, 15.0, 192.0, 131.0, 4.0, 23.0, 152.0, 306.0, 44.0, 19.0, 89.0, 27.0, 147.0, 9.0, 35.0, 200.0, 355.0, 62.0, 108.0, 18.0, 69.0, 115.0, 7.0, 0.0, 158.0, 224.0, 234.0, 3.0, 79.0, 341.0, 148.0, 15.0, 32.0, 30.0, 216.0, 8.0, 25.0, 90.0, 282.0, 350.0, 57.0, 202.0, 65.0, 8.0, 437.0, 108.0, 4.0, 24.0, 9.0, 20.0, 139.0, 263.0, 313.0, 23.0, 134.0, 10.0, 248.0, 0.0, 2.0]
cU_orig = [273.0, 46.0, 66.0, 39.0, 477.0, 15.0, 192.0, 443.0, 4.0, 33.0, 152.0, 306.0, 44.0, 19.0, 89.0, 51.0, 147.0, 9.0, 35.0, 200.0, 355.0, 62.0, 108.0, 136.0, 69.0, 115.0, 7.0, 10.0, 158.0, 224.0, 234.0, 3.0, 79.0, 341.0, 148.0, 187.0, 48.0, 36.0, 216.0, 8.0, 25.0, 90.0, 282.0, 350.0, 57.0, 202.0, 65.0, 8.0, 437.0, 650.0, 30.0, 24.0, 9.0, 20.0, 139.0, 263.0, 381.0, 71.0, 134.0, 10.0, 248.0, 12.0, 44.0]
d = [47.0, 31.0, 16.0, 38.0, 33.0, 3.0, 47.0, 32.0, 27.0, 24.0, 14.0, 2.0, 39.0, 3.0, 28.0, 48.0, 22.0, 37.0, 15.0, 17.0, 27.0, 4.0, 23.0, 8.0, 2.0, 17.0, 42.0, 2.0, 47.0, 20.0, 11.0, 15.0, 1.0, 49.0, 19.0, 5.0, 37.0, 18.0, 48.0, 38.0, 33.0, 38.0, 18.0, 34.0, 4.0, 2.0, 24.0, 31.0, 29.0, 17.0, 5.0, 19.0, 1.0, 28.0, 19.0, 36.0, 7.0, 4.0, 28.0, 18.0, 6.0, 11.0, 10.0]
Len = length(d)

yy = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
