edge = [1 3; 1 4; 1 5; 1 8; 1 11; 1 12; 1 15; 2 4; 2 7; 2 8; 2 10; 2 13; 2 15; 3 4; 3 7; 3 9; 3 13; 4 2; 4 5; 4 6; 4 7; 4 10; 4 15; 5 3; 5 10; 6 2; 6 4; 6 5; 6 10; 6 11; 6 14; 7 4; 7 12; 7 14; 8 5; 8 6; 8 11; 8 12; 9 3; 9 5; 9 7; 9 11; 10 3; 10 5; 10 6; 10 7; 10 12; 10 13; 10 15; 11 8; 11 15; 12 3; 12 6; 12 7; 12 15; 13 6; 13 9; 13 10; 13 12; 14 4; 14 5; 14 10; 14 11; 14 15]
cL_orig = [7.0, 43.0, 87.0, 30.0, 206.0, 298.0, 64.0, 17.0, 46.0, 145.0, 172.0, 96.0, 15.0, 43.0, 48.0, 137.0, 248.0, 23.0, 13.0, 11.0, 147.0, 5.0, 104.0, 23.0, 23.0, 180.0, 64.0, 7.0, 84.0, 140.0, 310.0, 16.0, 38.0, 124.0, 7.0, 6.0, 83.0, 172.0, 2.0, 112.0, 14.0, 48.0, 145.0, 92.0, 140.0, 131.0, 21.0, 19.0, 82.0, 14.0, 28.0, 72.0, 100.0, 125.0, 6.0, 303.0, 199.0, 54.0, 0.0, 172.0, 150.0, 44.0, 55.0, 9.0]
cU_orig = [7.0, 43.0, 101.0, 30.0, 206.0, 298.0, 1112.0, 25.0, 46.0, 145.0, 300.0, 390.0, 39.0, 43.0, 48.0, 137.0, 640.0, 23.0, 47.0, 11.0, 147.0, 343.0, 104.0, 23.0, 95.0, 180.0, 64.0, 7.0, 84.0, 140.0, 416.0, 16.0, 162.0, 124.0, 7.0, 28.0, 83.0, 172.0, 290.0, 112.0, 14.0, 96.0, 263.0, 92.0, 140.0, 131.0, 21.0, 33.0, 82.0, 14.0, 266.0, 160.0, 100.0, 125.0, 6.0, 303.0, 199.0, 54.0, 4.0, 172.0, 150.0, 44.0, 55.0, 9.0]
d = [38.0, 39.0, 34.0, 33.0, 35.0, 30.0, 18.0, 39.0, 13.0, 6.0, 5.0, 31.0, 42.0, 14.0, 27.0, 35.0, 23.0, 20.0, 29.0, 1.0, 39.0, 40.0, 21.0, 50.0, 30.0, 24.0, 22.0, 44.0, 10.0, 33.0, 10.0, 3.0, 37.0, 16.0, 41.0, 9.0, 24.0, 38.0, 10.0, 15.0, 20.0, 40.0, 45.0, 37.0, 4.0, 50.0, 24.0, 9.0, 33.0, 39.0, 28.0, 13.0, 34.0, 31.0, 38.0, 44.0, 26.0, 15.0, 12.0, 35.0, 39.0, 4.0, 23.0, 27.0]
Len = length(d)

yy = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
