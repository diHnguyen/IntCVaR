edge = [1 2; 1 3; 1 4; 1 7; 1 8; 1 11; 1 12; 1 14; 2 3; 2 5; 2 7; 2 9; 2 13; 3 2; 3 6; 3 10; 3 12; 4 2; 4 6; 4 9; 4 14; 5 8; 5 10; 5 13; 5 15; 6 2; 6 4; 6 7; 6 8; 6 15; 7 2; 7 3; 7 9; 7 14; 8 2; 8 4; 8 6; 8 9; 8 10; 9 2; 9 4; 9 10; 9 12; 9 14; 9 15; 10 3; 10 6; 10 9; 10 11; 11 2; 11 6; 11 10; 12 2; 12 6; 12 7; 12 10; 12 13; 12 15; 13 3; 13 7; 13 8; 13 12; 14 4; 14 5; 14 6]
cL_orig = [49.0, 60.0, 44.0, 67.0, 348.0, 10.0, 492.0, 129.0, 0.0, 41.0, 20.0, 16.0, 517.0, 9.0, 20.0, 98.0, 386.0, 18.0, 62.0, 22.0, 204.0, 39.0, 52.0, 251.0, 40.0, 29.0, 36.0, 11.0, 49.0, 33.0, 12.0, 60.0, 79.0, 176.0, 194.0, 72.0, 85.0, 7.0, 43.0, 195.0, 10.0, 2.0, 107.0, 125.0, 162.0, 55.0, 58.0, 24.0, 36.0, 84.0, 115.0, 10.0, 384.0, 48.0, 69.0, 97.0, 8.0, 82.0, 408.0, 73.0, 39.0, 9.0, 200.0, 158.0, 271.0]
cU_orig = [49.0, 86.0, 44.0, 493.0, 348.0, 22.0, 492.0, 129.0, 18.0, 191.0, 20.0, 16.0, 517.0, 91.0, 20.0, 98.0, 386.0, 18.0, 62.0, 22.0, 204.0, 39.0, 52.0, 251.0, 40.0, 29.0, 36.0, 11.0, 49.0, 33.0, 94.0, 60.0, 85.0, 176.0, 194.0, 72.0, 85.0, 9.0, 43.0, 195.0, 10.0, 92.0, 107.0, 125.0, 162.0, 287.0, 58.0, 24.0, 36.0, 414.0, 115.0, 36.0, 384.0, 94.0, 69.0, 97.0, 12.0, 82.0, 408.0, 73.0, 39.0, 9.0, 200.0, 428.0, 271.0]
d = [29.0, 3.0, 46.0, 30.0, 32.0, 22.0, 17.0, 40.0, 9.0, 24.0, 43.0, 20.0, 15.0, 20.0, 11.0, 7.0, 4.0, 36.0, 43.0, 50.0, 25.0, 27.0, 20.0, 10.0, 4.0, 48.0, 5.0, 27.0, 37.0, 2.0, 44.0, 27.0, 6.0, 17.0, 43.0, 29.0, 37.0, 29.0, 25.0, 26.0, 28.0, 27.0, 11.0, 39.0, 15.0, 13.0, 48.0, 41.0, 30.0, 26.0, 49.0, 8.0, 3.0, 6.0, 1.0, 34.0, 40.0, 42.0, 23.0, 36.0, 2.0, 38.0, 40.0, 12.0, 38.0]
Len = length(d)

yy = [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
