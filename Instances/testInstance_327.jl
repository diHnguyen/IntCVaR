edge = [1 5; 1 6; 1 8; 1 9; 1 12; 1 14; 2 5; 2 6; 2 8; 2 14; 2 15; 3 2; 3 9; 3 10; 4 5; 4 7; 4 9; 4 10; 4 12; 4 13; 4 15; 5 2; 5 6; 5 9; 5 10; 5 13; 5 14; 5 15; 6 3; 6 5; 6 7; 6 8; 6 9; 6 12; 7 2; 7 3; 7 6; 7 10; 7 15; 8 3; 8 10; 8 14; 9 3; 9 4; 9 14; 10 3; 10 7; 10 8; 11 3; 11 8; 11 12; 11 13; 11 14; 12 4; 12 5; 12 7; 12 8; 13 5; 13 7; 13 10; 13 11; 13 12; 13 14; 14 5; 14 10; 14 12; 14 13]
cL_orig = [153.0, 28.0, 259.0, 279.0, 299.0, 66.0, 33.0, 107.0, 212.0, 377.0, 470.0, 5.0, 75.0, 317.0, 12.0, 18.0, 95.0, 290.0, 123.0, 55.0, 389.0, 77.0, 21.0, 40.0, 200.0, 14.0, 419.0, 461.0, 40.0, 11.0, 14.0, 3.0, 84.0, 199.0, 247.0, 95.0, 14.0, 60.0, 54.0, 101.0, 17.0, 7.0, 19.0, 118.0, 143.0, 31.0, 12.0, 51.0, 191.0, 133.0, 40.0, 3.0, 85.0, 358.0, 127.0, 31.0, 3.0, 73.0, 118.0, 104.0, 77.0, 7.0, 3.0, 320.0, 43.0, 81.0, 33.0]
cU_orig = [153.0, 28.0, 259.0, 279.0, 665.0, 66.0, 33.0, 107.0, 212.0, 377.0, 470.0, 7.0, 75.0, 317.0, 12.0, 18.0, 95.0, 290.0, 123.0, 237.0, 389.0, 77.0, 69.0, 40.0, 200.0, 16.0, 419.0, 461.0, 40.0, 11.0, 14.0, 3.0, 84.0, 199.0, 247.0, 95.0, 14.0, 60.0, 148.0, 101.0, 17.0, 7.0, 19.0, 118.0, 143.0, 31.0, 12.0, 51.0, 191.0, 133.0, 40.0, 5.0, 85.0, 358.0, 127.0, 31.0, 31.0, 73.0, 118.0, 104.0, 77.0, 7.0, 3.0, 320.0, 43.0, 81.0, 33.0]
d = [28.0, 24.0, 14.0, 27.0, 41.0, 39.0, 43.0, 20.0, 12.0, 28.0, 16.0, 35.0, 31.0, 21.0, 32.0, 20.0, 4.0, 25.0, 5.0, 25.0, 21.0, 9.0, 2.0, 34.0, 18.0, 47.0, 29.0, 4.0, 15.0, 10.0, 11.0, 13.0, 19.0, 40.0, 34.0, 12.0, 11.0, 50.0, 4.0, 23.0, 1.0, 15.0, 28.0, 24.0, 14.0, 45.0, 49.0, 42.0, 5.0, 2.0, 18.0, 47.0, 34.0, 14.0, 17.0, 19.0, 15.0, 13.0, 50.0, 30.0, 48.0, 46.0, 33.0, 48.0, 16.0, 9.0, 44.0]
Len = length(d)

yy = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
