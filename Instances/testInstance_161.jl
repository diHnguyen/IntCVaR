edge = [1 4; 1 6; 1 7; 1 12; 1 13; 1 14; 1 15; 2 4; 2 6; 2 7; 2 13; 2 15; 3 4; 3 5; 3 8; 3 9; 3 10; 4 5; 4 7; 4 8; 4 12; 4 13; 4 15; 5 2; 5 7; 5 9; 5 12; 5 15; 6 2; 6 3; 6 5; 6 12; 7 5; 7 9; 7 14; 8 2; 8 6; 8 11; 9 2; 9 3; 9 4; 9 5; 9 7; 9 8; 9 11; 9 14; 9 15; 11 2; 11 6; 11 7; 11 8; 11 12; 12 2; 12 7; 12 11; 13 2; 13 4; 13 5; 13 6; 13 7; 13 12; 14 6; 14 10; 14 11; 14 15]
cL_orig = [93.0, 239.0, 0.0, 169.0, 542.0, 199.0, 185.0, 64.0, 43.0, 14.0, 416.0, 553.0, 10.0, 41.0, 56.0, 208.0, 41.0, 46.0, 115.0, 140.0, 35.0, 230.0, 429.0, 2.0, 11.0, 75.0, 72.0, 301.0, 4.0, 43.0, 47.0, 128.0, 75.0, 57.0, 124.0, 13.0, 40.0, 47.0, 111.0, 209.0, 245.0, 38.0, 22.0, 16.0, 25.0, 19.0, 103.0, 38.0, 198.0, 16.0, 20.0, 4.0, 76.0, 74.0, 23.0, 209.0, 32.0, 366.0, 92.0, 156.0, 46.0, 192.0, 81.0, 68.0, 38.0]
cU_orig = [93.0, 239.0, 278.0, 169.0, 542.0, 199.0, 617.0, 64.0, 195.0, 456.0, 416.0, 553.0, 10.0, 95.0, 56.0, 208.0, 41.0, 46.0, 115.0, 140.0, 35.0, 230.0, 429.0, 2.0, 79.0, 75.0, 72.0, 301.0, 6.0, 43.0, 47.0, 134.0, 75.0, 129.0, 160.0, 13.0, 40.0, 47.0, 395.0, 209.0, 245.0, 354.0, 22.0, 16.0, 25.0, 19.0, 103.0, 38.0, 198.0, 158.0, 22.0, 4.0, 76.0, 74.0, 23.0, 777.0, 316.0, 366.0, 92.0, 156.0, 46.0, 192.0, 81.0, 68.0, 38.0]
d = [34.0, 36.0, 14.0, 7.0, 6.0, 1.0, 43.0, 48.0, 47.0, 2.0, 42.0, 1.0, 29.0, 8.0, 22.0, 13.0, 46.0, 31.0, 2.0, 18.0, 10.0, 35.0, 18.0, 45.0, 26.0, 30.0, 45.0, 33.0, 37.0, 36.0, 18.0, 27.0, 7.0, 25.0, 28.0, 26.0, 43.0, 3.0, 21.0, 37.0, 49.0, 38.0, 11.0, 26.0, 17.0, 49.0, 38.0, 14.0, 48.0, 47.0, 27.0, 50.0, 3.0, 29.0, 5.0, 25.0, 21.0, 39.0, 7.0, 6.0, 9.0, 11.0, 46.0, 28.0, 33.0]
Len = length(d)

yy = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
