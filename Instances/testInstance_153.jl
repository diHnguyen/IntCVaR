edge = [1 4; 1 5; 1 6; 1 7; 1 11; 1 13; 1 15; 2 3; 2 8; 2 13; 2 14; 2 15; 3 4; 3 10; 3 11; 3 15; 4 2; 4 8; 4 10; 4 13; 4 14; 5 4; 5 9; 6 4; 6 12; 7 4; 7 8; 7 9; 7 12; 7 13; 7 14; 8 5; 8 14; 9 3; 9 4; 9 10; 9 14; 9 15; 10 2; 10 4; 10 6; 10 7; 10 12; 10 13; 10 14; 10 15; 11 10; 11 14; 12 6; 12 13; 13 2; 13 4; 13 5; 13 7; 13 9; 13 14; 14 4; 14 6; 14 7; 14 8]
cL_orig = [26.0, 138.0, 76.0, 73.0, 430.0, 0.0, 669.0, 13.0, 236.0, 69.0, 177.0, 271.0, 1.0, 151.0, 187.0, 439.0, 15.0, 118.0, 271.0, 143.0, 42.0, 27.0, 66.0, 79.0, 161.0, 67.0, 28.0, 59.0, 34.0, 23.0, 238.0, 139.0, 35.0, 59.0, 222.0, 32.0, 88.0, 185.0, 354.0, 286.0, 185.0, 41.0, 52.0, 120.0, 61.0, 239.0, 26.0, 45.0, 226.0, 45.0, 324.0, 426.0, 330.0, 4.0, 31.0, 4.0, 466.0, 308.0, 184.0, 95.0]
cU_orig = [26.0, 236.0, 76.0, 125.0, 430.0, 364.0, 669.0, 63.0, 236.0, 503.0, 177.0, 271.0, 1.0, 151.0, 187.0, 439.0, 25.0, 244.0, 271.0, 709.0, 332.0, 67.0, 112.0, 79.0, 161.0, 67.0, 28.0, 59.0, 270.0, 23.0, 238.0, 139.0, 119.0, 59.0, 222.0, 32.0, 88.0, 185.0, 354.0, 286.0, 185.0, 41.0, 52.0, 120.0, 83.0, 239.0, 26.0, 45.0, 226.0, 45.0, 324.0, 426.0, 330.0, 28.0, 31.0, 4.0, 466.0, 308.0, 476.0, 101.0]
d = [47.0, 1.0, 12.0, 5.0, 22.0, 5.0, 26.0, 28.0, 20.0, 6.0, 23.0, 10.0, 20.0, 6.0, 20.0, 16.0, 15.0, 14.0, 36.0, 36.0, 32.0, 3.0, 36.0, 6.0, 44.0, 46.0, 20.0, 39.0, 44.0, 11.0, 33.0, 12.0, 18.0, 38.0, 6.0, 49.0, 23.0, 13.0, 50.0, 30.0, 41.0, 30.0, 9.0, 49.0, 47.0, 11.0, 10.0, 16.0, 3.0, 21.0, 35.0, 43.0, 21.0, 13.0, 33.0, 36.0, 45.0, 13.0, 43.0, 11.0]
Len = length(d)

yy = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
