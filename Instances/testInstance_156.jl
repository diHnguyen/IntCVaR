edge = [1 5; 1 8; 1 9; 1 12; 1 14; 1 15; 2 4; 2 7; 2 9; 2 11; 2 15; 3 2; 3 7; 3 8; 3 10; 4 2; 5 2; 5 3; 5 7; 5 8; 5 14; 6 8; 6 10; 6 13; 6 14; 7 10; 7 11; 7 14; 7 15; 8 3; 8 6; 8 7; 8 13; 9 2; 9 4; 9 8; 9 11; 9 12; 9 14; 10 2; 10 4; 10 11; 10 12; 10 14; 11 6; 11 14; 11 15; 12 2; 12 5; 12 11; 12 14; 13 3; 13 6; 13 8; 13 9; 13 11; 13 15; 14 3; 14 4; 14 8; 14 11; 14 12; 14 13; 14 15]
cL_orig = [19.0, 171.0, 272.0, 279.0, 164.0, 108.0, 67.0, 33.0, 266.0, 288.0, 139.0, 33.0, 141.0, 162.0, 97.0, 1.0, 4.0, 56.0, 52.0, 112.0, 437.0, 54.0, 155.0, 311.0, 170.0, 41.0, 179.0, 187.0, 2.0, 168.0, 90.0, 3.0, 96.0, 335.0, 8.0, 8.0, 54.0, 62.0, 181.0, 269.0, 266.0, 0.0, 8.0, 56.0, 7.0, 41.0, 67.0, 268.0, 98.0, 25.0, 3.0, 116.0, 58.0, 84.0, 76.0, 29.0, 42.0, 30.0, 370.0, 282.0, 105.0, 27.0, 35.0, 2.0]
cU_orig = [19.0, 171.0, 272.0, 279.0, 1116.0, 108.0, 67.0, 33.0, 266.0, 288.0, 139.0, 33.0, 141.0, 162.0, 195.0, 137.0, 4.0, 114.0, 52.0, 112.0, 437.0, 70.0, 155.0, 311.0, 170.0, 87.0, 179.0, 187.0, 196.0, 192.0, 90.0, 47.0, 96.0, 335.0, 8.0, 34.0, 54.0, 62.0, 181.0, 447.0, 266.0, 4.0, 40.0, 114.0, 487.0, 41.0, 67.0, 268.0, 98.0, 25.0, 3.0, 116.0, 58.0, 310.0, 198.0, 29.0, 54.0, 42.0, 370.0, 282.0, 105.0, 27.0, 35.0, 2.0]
d = [26.0, 4.0, 9.0, 6.0, 10.0, 10.0, 24.0, 25.0, 49.0, 19.0, 39.0, 46.0, 15.0, 36.0, 25.0, 1.0, 20.0, 20.0, 2.0, 5.0, 27.0, 27.0, 33.0, 22.0, 11.0, 17.0, 32.0, 11.0, 40.0, 25.0, 17.0, 45.0, 40.0, 46.0, 10.0, 47.0, 26.0, 32.0, 30.0, 33.0, 9.0, 30.0, 34.0, 18.0, 22.0, 6.0, 37.0, 45.0, 26.0, 8.0, 29.0, 44.0, 13.0, 43.0, 34.0, 13.0, 35.0, 2.0, 36.0, 48.0, 16.0, 15.0, 29.0, 30.0]
Len = length(d)

yy = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
