edge = [1 4; 1 6; 1 7; 1 8; 1 9; 1 12; 1 15; 2 3; 2 4; 2 7; 2 12; 2 13; 3 9; 3 11; 4 7; 4 12; 4 15; 5 2; 5 3; 5 7; 5 10; 5 11; 5 13; 6 5; 6 9; 6 10; 6 11; 6 12; 6 13; 6 14; 6 15; 7 3; 7 4; 7 5; 7 13; 8 2; 8 3; 8 6; 8 9; 9 3; 9 4; 9 6; 9 10; 9 14; 9 15; 10 3; 10 5; 10 6; 10 8; 10 15; 11 2; 11 5; 11 6; 11 8; 11 14; 12 9; 12 11; 12 13; 13 7; 13 8; 13 12; 13 15; 14 3; 14 12]
cL_orig = [90.0, 242.0, 4.0, 61.0, 90.0, 244.0, 392.0, 15.0, 4.0, 111.0, 296.0, 139.0, 244.0, 181.0, 67.0, 31.0, 323.0, 10.0, 33.0, 83.0, 9.0, 170.0, 381.0, 30.0, 17.0, 150.0, 237.0, 48.0, 258.0, 387.0, 244.0, 30.0, 73.0, 13.0, 157.0, 125.0, 29.0, 88.0, 16.0, 147.0, 127.0, 100.0, 15.0, 35.0, 10.0, 196.0, 249.0, 120.0, 55.0, 148.0, 19.0, 155.0, 35.0, 108.0, 126.0, 59.0, 49.0, 41.0, 52.0, 20.0, 4.0, 78.0, 2.0, 39.0]
cU_orig = [90.0, 242.0, 146.0, 61.0, 90.0, 244.0, 392.0, 15.0, 82.0, 111.0, 624.0, 139.0, 244.0, 181.0, 67.0, 31.0, 323.0, 10.0, 33.0, 83.0, 31.0, 170.0, 381.0, 30.0, 53.0, 150.0, 237.0, 48.0, 258.0, 387.0, 244.0, 30.0, 73.0, 13.0, 157.0, 125.0, 289.0, 88.0, 16.0, 147.0, 127.0, 100.0, 15.0, 57.0, 10.0, 196.0, 249.0, 120.0, 55.0, 194.0, 19.0, 155.0, 95.0, 108.0, 126.0, 59.0, 49.0, 41.0, 152.0, 20.0, 4.0, 78.0, 2.0, 39.0]
d = [25.0, 6.0, 29.0, 38.0, 14.0, 11.0, 50.0, 21.0, 50.0, 2.0, 8.0, 24.0, 15.0, 49.0, 21.0, 12.0, 47.0, 15.0, 4.0, 44.0, 8.0, 9.0, 49.0, 16.0, 25.0, 48.0, 19.0, 11.0, 38.0, 20.0, 13.0, 32.0, 37.0, 32.0, 14.0, 17.0, 32.0, 41.0, 2.0, 41.0, 17.0, 33.0, 26.0, 44.0, 16.0, 48.0, 20.0, 3.0, 43.0, 8.0, 41.0, 1.0, 35.0, 43.0, 1.0, 39.0, 39.0, 20.0, 4.0, 1.0, 35.0, 42.0, 26.0, 27.0]
Len = length(d)

yy = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
