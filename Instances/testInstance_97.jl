edge = [1 7; 1 8; 1 10; 1 11; 1 13; 2 4; 2 6; 2 8; 2 10; 2 12; 2 14; 3 4; 3 14; 3 15; 4 6; 4 8; 4 9; 4 11; 4 12; 4 13; 4 15; 5 2; 5 3; 5 6; 5 7; 5 10; 5 13; 5 14; 6 3; 6 5; 6 8; 6 10; 6 12; 6 13; 7 4; 8 9; 8 15; 9 3; 9 4; 9 5; 9 8; 9 14; 10 7; 11 2; 11 6; 11 7; 12 3; 12 10; 12 11; 12 15; 13 3; 13 5; 13 7; 13 9; 13 11; 13 12; 14 6; 14 8; 14 10; 14 12]
cL_orig = [159.0, 260.0, 218.0, 286.0, 353.0, 42.0, 106.0, 120.0, 58.0, 336.0, 83.0, 0.0, 9.0, 260.0, 8.0, 29.0, 166.0, 269.0, 85.0, 29.0, 266.0, 144.0, 50.0, 18.0, 86.0, 40.0, 393.0, 283.0, 12.0, 4.0, 59.0, 124.0, 181.0, 268.0, 131.0, 29.0, 334.0, 124.0, 6.0, 14.0, 29.0, 127.0, 22.0, 31.0, 41.0, 40.0, 47.0, 15.0, 12.0, 85.0, 194.0, 31.0, 10.0, 117.0, 79.0, 21.0, 16.0, 184.0, 68.0, 17.0]
cU_orig = [159.0, 404.0, 218.0, 286.0, 353.0, 42.0, 106.0, 330.0, 300.0, 336.0, 83.0, 6.0, 9.0, 260.0, 144.0, 29.0, 166.0, 269.0, 307.0, 771.0, 266.0, 144.0, 50.0, 18.0, 86.0, 40.0, 393.0, 283.0, 12.0, 12.0, 59.0, 124.0, 397.0, 268.0, 131.0, 29.0, 334.0, 258.0, 6.0, 14.0, 29.0, 227.0, 114.0, 31.0, 57.0, 40.0, 47.0, 15.0, 22.0, 85.0, 194.0, 205.0, 10.0, 117.0, 79.0, 21.0, 16.0, 184.0, 68.0, 155.0]
d = [47.0, 31.0, 4.0, 3.0, 2.0, 21.0, 29.0, 10.0, 10.0, 10.0, 39.0, 12.0, 3.0, 26.0, 39.0, 42.0, 30.0, 33.0, 33.0, 19.0, 26.0, 15.0, 26.0, 4.0, 23.0, 44.0, 8.0, 15.0, 12.0, 12.0, 18.0, 22.0, 38.0, 25.0, 43.0, 41.0, 1.0, 29.0, 17.0, 27.0, 21.0, 36.0, 1.0, 18.0, 49.0, 15.0, 13.0, 36.0, 7.0, 8.0, 10.0, 37.0, 15.0, 33.0, 12.0, 26.0, 19.0, 41.0, 13.0, 47.0]
Len = length(d)

yy = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
