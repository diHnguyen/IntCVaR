edge = [1 2; 1 4; 1 6; 1 7; 1 8; 1 10; 1 11; 1 14; 2 4; 2 6; 2 9; 2 10; 2 12; 2 13; 2 14; 2 15; 3 2; 3 5; 3 8; 3 15; 4 5; 4 9; 4 13; 5 4; 5 7; 6 2; 6 5; 6 13; 6 14; 6 15; 7 3; 7 8; 7 10; 7 14; 8 4; 8 5; 8 6; 8 11; 8 13; 9 2; 9 3; 9 4; 9 11; 9 13; 9 15; 10 2; 10 3; 10 5; 10 7; 10 8; 10 12; 10 15; 11 12; 12 3; 12 8; 12 10; 13 4; 13 12; 13 14; 14 4; 14 7; 14 8; 14 10; 14 13]
cL_orig = [17.0, 22.0, 78.0, 96.0, 70.0, 3.0, 187.0, 96.0, 97.0, 108.0, 340.0, 172.0, 2.0, 258.0, 408.0, 379.0, 6.0, 4.0, 102.0, 357.0, 48.0, 196.0, 349.0, 32.0, 35.0, 165.0, 21.0, 87.0, 23.0, 339.0, 60.0, 47.0, 136.0, 189.0, 188.0, 3.0, 15.0, 79.0, 157.0, 5.0, 243.0, 108.0, 1.0, 75.0, 110.0, 75.0, 251.0, 28.0, 12.0, 9.0, 48.0, 125.0, 12.0, 222.0, 40.0, 45.0, 293.0, 19.0, 15.0, 74.0, 145.0, 248.0, 114.0, 30.0]
cU_orig = [17.0, 60.0, 78.0, 96.0, 76.0, 337.0, 187.0, 770.0, 97.0, 108.0, 340.0, 172.0, 6.0, 258.0, 408.0, 379.0, 30.0, 32.0, 102.0, 445.0, 48.0, 196.0, 349.0, 32.0, 45.0, 165.0, 59.0, 213.0, 107.0, 339.0, 70.0, 47.0, 136.0, 189.0, 188.0, 3.0, 15.0, 125.0, 157.0, 241.0, 243.0, 108.0, 3.0, 75.0, 110.0, 75.0, 251.0, 28.0, 192.0, 13.0, 48.0, 217.0, 22.0, 354.0, 62.0, 45.0, 463.0, 37.0, 15.0, 108.0, 199.0, 248.0, 114.0, 42.0]
d = [43.0, 21.0, 2.0, 25.0, 35.0, 22.0, 38.0, 4.0, 30.0, 22.0, 34.0, 30.0, 35.0, 41.0, 15.0, 21.0, 21.0, 49.0, 50.0, 1.0, 45.0, 3.0, 23.0, 16.0, 12.0, 23.0, 11.0, 40.0, 6.0, 9.0, 12.0, 42.0, 33.0, 47.0, 40.0, 29.0, 29.0, 14.0, 44.0, 28.0, 39.0, 8.0, 22.0, 43.0, 38.0, 47.0, 43.0, 17.0, 35.0, 8.0, 46.0, 26.0, 43.0, 3.0, 26.0, 44.0, 44.0, 34.0, 39.0, 13.0, 47.0, 7.0, 45.0, 4.0]
Len = length(d)

yy = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
