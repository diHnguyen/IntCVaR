edge = [1 2; 1 9; 1 10; 1 13; 1 14; 1 15; 2 5; 2 6; 2 11; 2 13; 2 15; 3 5; 3 6; 3 9; 3 11; 3 14; 3 15; 4 2; 4 9; 4 12; 4 15; 5 3; 5 9; 5 10; 5 12; 5 13; 5 15; 6 5; 6 10; 6 11; 6 12; 6 15; 7 11; 8 3; 8 4; 8 5; 8 7; 8 10; 8 13; 9 2; 9 3; 9 7; 10 3; 10 12; 10 13; 10 15; 11 3; 11 4; 11 13; 11 15; 12 9; 12 10; 12 11; 12 13; 12 15; 13 4; 13 6; 13 10; 14 2; 14 3; 14 4; 14 6; 14 10; 14 11]
cL_orig = [8.0, 150.0, 231.0, 304.0, 640.0, 82.0, 150.0, 187.0, 167.0, 74.0, 479.0, 11.0, 2.0, 56.0, 227.0, 120.0, 583.0, 17.0, 22.0, 214.0, 24.0, 1.0, 196.0, 68.0, 281.0, 265.0, 16.0, 13.0, 159.0, 175.0, 174.0, 345.0, 82.0, 21.0, 59.0, 90.0, 39.0, 17.0, 76.0, 171.0, 198.0, 0.0, 333.0, 87.0, 37.0, 57.0, 49.0, 195.0, 56.0, 103.0, 104.0, 20.0, 31.0, 6.0, 25.0, 435.0, 174.0, 146.0, 178.0, 510.0, 124.0, 236.0, 0.0, 63.0]
cU_orig = [8.0, 454.0, 231.0, 304.0, 640.0, 82.0, 150.0, 187.0, 167.0, 74.0, 479.0, 11.0, 4.0, 56.0, 227.0, 382.0, 583.0, 53.0, 22.0, 214.0, 24.0, 69.0, 196.0, 68.0, 281.0, 265.0, 16.0, 13.0, 159.0, 175.0, 174.0, 345.0, 82.0, 21.0, 59.0, 90.0, 39.0, 43.0, 76.0, 171.0, 198.0, 22.0, 333.0, 87.0, 37.0, 57.0, 49.0, 349.0, 82.0, 103.0, 104.0, 20.0, 35.0, 8.0, 25.0, 435.0, 200.0, 146.0, 178.0, 510.0, 124.0, 236.0, 34.0, 209.0]
d = [29.0, 30.0, 42.0, 2.0, 7.0, 15.0, 28.0, 49.0, 37.0, 13.0, 6.0, 25.0, 12.0, 12.0, 3.0, 39.0, 7.0, 44.0, 38.0, 32.0, 24.0, 21.0, 43.0, 19.0, 15.0, 13.0, 27.0, 31.0, 30.0, 9.0, 33.0, 16.0, 31.0, 21.0, 46.0, 38.0, 26.0, 33.0, 13.0, 50.0, 44.0, 49.0, 8.0, 16.0, 29.0, 32.0, 10.0, 23.0, 15.0, 11.0, 33.0, 37.0, 47.0, 6.0, 1.0, 41.0, 35.0, 1.0, 9.0, 50.0, 16.0, 35.0, 39.0, 2.0]
Len = length(d)

yy = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
