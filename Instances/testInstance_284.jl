edge = [1 8; 1 9; 1 11; 1 15; 2 3; 2 7; 2 9; 2 11; 2 13; 2 15; 3 2; 3 4; 3 6; 3 10; 3 14; 3 15; 4 2; 4 8; 4 10; 4 11; 4 12; 5 8; 5 11; 5 13; 5 15; 6 2; 6 8; 6 9; 6 10; 6 14; 7 4; 7 8; 7 14; 7 15; 8 4; 8 9; 8 10; 8 11; 8 15; 9 2; 9 11; 9 14; 10 4; 10 5; 10 6; 11 7; 11 13; 11 14; 11 15; 12 2; 12 4; 12 6; 12 8; 12 14; 13 4; 13 8; 13 11; 13 14; 14 2; 14 4; 14 5; 14 10; 14 11]
cL_orig = [70.0, 68.0, 233.0, 218.0, 50.0, 240.0, 264.0, 86.0, 6.0, 165.0, 36.0, 19.0, 10.0, 130.0, 526.0, 38.0, 81.0, 16.0, 144.0, 248.0, 77.0, 3.0, 278.0, 133.0, 79.0, 102.0, 33.0, 124.0, 79.0, 230.0, 72.0, 25.0, 228.0, 171.0, 99.0, 14.0, 12.0, 75.0, 208.0, 153.0, 93.0, 48.0, 22.0, 161.0, 25.0, 75.0, 49.0, 58.0, 16.0, 121.0, 124.0, 260.0, 105.0, 57.0, 211.0, 106.0, 86.0, 43.0, 159.0, 85.0, 238.0, 163.0, 115.0]
cU_orig = [124.0, 68.0, 233.0, 512.0, 50.0, 240.0, 286.0, 86.0, 6.0, 417.0, 36.0, 19.0, 202.0, 130.0, 526.0, 74.0, 81.0, 16.0, 144.0, 248.0, 77.0, 191.0, 278.0, 133.0, 79.0, 102.0, 33.0, 124.0, 79.0, 230.0, 72.0, 25.0, 228.0, 171.0, 99.0, 14.0, 36.0, 75.0, 208.0, 157.0, 93.0, 48.0, 22.0, 161.0, 337.0, 217.0, 49.0, 58.0, 16.0, 629.0, 298.0, 260.0, 105.0, 57.0, 497.0, 106.0, 86.0, 43.0, 159.0, 85.0, 238.0, 163.0, 115.0]
d = [19.0, 33.0, 43.0, 13.0, 43.0, 37.0, 8.0, 28.0, 46.0, 2.0, 37.0, 40.0, 26.0, 7.0, 39.0, 7.0, 15.0, 2.0, 6.0, 42.0, 44.0, 47.0, 21.0, 48.0, 5.0, 42.0, 25.0, 20.0, 27.0, 34.0, 24.0, 43.0, 50.0, 5.0, 7.0, 46.0, 24.0, 28.0, 21.0, 9.0, 49.0, 39.0, 15.0, 17.0, 31.0, 19.0, 4.0, 33.0, 46.0, 45.0, 32.0, 19.0, 5.0, 7.0, 42.0, 38.0, 7.0, 6.0, 24.0, 17.0, 20.0, 32.0, 13.0]
Len = length(d)

yy = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
