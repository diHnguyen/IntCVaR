edge = [1 10; 1 13; 2 6; 2 9; 2 10; 3 4; 3 6; 3 8; 3 10; 3 11; 3 14; 4 7; 4 8; 4 12; 4 14; 5 2; 5 3; 5 7; 5 10; 5 12; 5 14; 5 15; 6 3; 6 10; 6 15; 7 5; 7 10; 7 11; 7 13; 7 15; 8 5; 8 9; 8 10; 8 13; 9 2; 9 4; 9 7; 9 15; 10 3; 10 4; 10 6; 10 8; 10 9; 11 4; 11 10; 11 13; 11 14; 12 2; 12 3; 12 9; 12 11; 13 4; 13 7; 13 8; 13 9; 13 10; 14 2; 14 4; 14 5; 14 9; 14 10; 14 11; 14 12; 14 13]
cL_orig = [215.0, 248.0, 94.0, 317.0, 2.0, 2.0, 150.0, 214.0, 237.0, 334.0, 201.0, 91.0, 4.0, 36.0, 43.0, 145.0, 2.0, 29.0, 78.0, 53.0, 61.0, 34.0, 24.0, 177.0, 158.0, 63.0, 44.0, 72.0, 285.0, 189.0, 83.0, 22.0, 5.0, 160.0, 50.0, 60.0, 56.0, 63.0, 36.0, 65.0, 96.0, 19.0, 1.0, 125.0, 47.0, 35.0, 60.0, 60.0, 293.0, 0.0, 2.0, 140.0, 27.0, 171.0, 195.0, 42.0, 131.0, 137.0, 14.0, 2.0, 64.0, 43.0, 48.0, 45.0]
cU_orig = [215.0, 248.0, 94.0, 317.0, 456.0, 2.0, 150.0, 214.0, 237.0, 334.0, 201.0, 91.0, 10.0, 36.0, 43.0, 145.0, 168.0, 49.0, 78.0, 293.0, 61.0, 578.0, 78.0, 177.0, 158.0, 63.0, 44.0, 72.0, 285.0, 265.0, 83.0, 22.0, 15.0, 186.0, 50.0, 60.0, 56.0, 513.0, 36.0, 65.0, 108.0, 35.0, 1.0, 125.0, 47.0, 35.0, 60.0, 60.0, 509.0, 222.0, 2.0, 140.0, 203.0, 171.0, 195.0, 216.0, 131.0, 199.0, 40.0, 2.0, 64.0, 199.0, 48.0, 45.0]
d = [10.0, 25.0, 11.0, 45.0, 36.0, 34.0, 25.0, 4.0, 14.0, 21.0, 40.0, 28.0, 43.0, 4.0, 17.0, 18.0, 49.0, 36.0, 36.0, 3.0, 20.0, 15.0, 27.0, 1.0, 25.0, 2.0, 28.0, 41.0, 12.0, 17.0, 20.0, 34.0, 44.0, 24.0, 36.0, 36.0, 17.0, 7.0, 25.0, 16.0, 46.0, 37.0, 16.0, 10.0, 44.0, 43.0, 12.0, 2.0, 46.0, 29.0, 20.0, 39.0, 48.0, 38.0, 40.0, 3.0, 49.0, 40.0, 40.0, 20.0, 19.0, 1.0, 48.0, 30.0]
Len = length(d)

yy = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
