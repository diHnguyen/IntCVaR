edge = [1 7; 1 11; 1 12; 1 14; 1 15; 2 4; 2 8; 3 2; 3 5; 3 7; 3 12; 3 14; 4 6; 4 9; 4 11; 4 12; 4 13; 5 2; 5 3; 5 4; 5 6; 5 8; 5 10; 5 14; 6 2; 6 5; 6 12; 7 4; 7 5; 7 9; 7 12; 7 15; 8 3; 8 5; 8 9; 8 10; 8 13; 8 15; 9 2; 9 3; 9 7; 9 8; 9 11; 9 12; 9 13; 10 7; 10 13; 11 2; 11 6; 11 7; 11 8; 11 10; 11 15; 12 4; 12 6; 12 7; 12 8; 12 13; 13 7; 13 8; 13 11; 13 12; 14 6; 14 8; 14 10; 14 11]
cL_orig = [37.0, 369.0, 0.0, 631.0, 437.0, 53.0, 0.0, 19.0, 15.0, 178.0, 34.0, 326.0, 100.0, 93.0, 140.0, 269.0, 22.0, 112.0, 14.0, 1.0, 28.0, 56.0, 7.0, 371.0, 2.0, 28.0, 221.0, 84.0, 75.0, 34.0, 177.0, 379.0, 34.0, 23.0, 22.0, 27.0, 13.0, 123.0, 37.0, 65.0, 80.0, 1.0, 18.0, 2.0, 47.0, 32.0, 91.0, 23.0, 212.0, 103.0, 30.0, 18.0, 128.0, 320.0, 104.0, 228.0, 175.0, 12.0, 221.0, 201.0, 19.0, 50.0, 93.0, 113.0, 10.0, 89.0]
cU_orig = [37.0, 369.0, 842.0, 631.0, 437.0, 65.0, 4.0, 19.0, 15.0, 178.0, 34.0, 326.0, 100.0, 93.0, 140.0, 269.0, 610.0, 112.0, 14.0, 1.0, 28.0, 56.0, 7.0, 371.0, 2.0, 28.0, 375.0, 84.0, 75.0, 34.0, 177.0, 379.0, 52.0, 23.0, 22.0, 155.0, 33.0, 123.0, 37.0, 65.0, 80.0, 43.0, 20.0, 2.0, 161.0, 56.0, 91.0, 23.0, 212.0, 179.0, 266.0, 18.0, 128.0, 320.0, 104.0, 228.0, 175.0, 12.0, 221.0, 201.0, 19.0, 50.0, 701.0, 113.0, 10.0, 89.0]
d = [35.0, 8.0, 25.0, 10.0, 33.0, 19.0, 17.0, 10.0, 18.0, 30.0, 40.0, 45.0, 44.0, 43.0, 1.0, 10.0, 32.0, 21.0, 25.0, 30.0, 29.0, 21.0, 37.0, 41.0, 38.0, 37.0, 24.0, 35.0, 18.0, 33.0, 16.0, 41.0, 3.0, 23.0, 10.0, 7.0, 24.0, 25.0, 32.0, 18.0, 44.0, 26.0, 12.0, 46.0, 8.0, 7.0, 50.0, 36.0, 43.0, 14.0, 40.0, 25.0, 7.0, 25.0, 28.0, 44.0, 49.0, 12.0, 33.0, 6.0, 50.0, 46.0, 46.0, 22.0, 7.0, 17.0]
Len = length(d)

yy = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
