edge = [1 3; 1 8; 1 9; 1 11; 1 13; 1 15; 2 5; 2 6; 2 7; 2 8; 2 11; 2 14; 3 2; 3 6; 3 8; 3 9; 3 10; 3 12; 3 14; 4 2; 4 5; 4 6; 4 9; 4 13; 4 14; 5 15; 6 2; 6 3; 6 12; 6 14; 7 9; 7 12; 7 13; 8 3; 8 10; 9 3; 9 5; 9 6; 9 8; 9 11; 9 13; 9 15; 10 7; 10 9; 10 14; 10 15; 11 2; 11 6; 11 7; 11 10; 11 15; 12 5; 12 10; 12 14; 13 2; 13 6; 13 8; 13 10; 13 11; 13 12; 14 4; 14 8; 14 13]
cL_orig = [8.0, 70.0, 378.0, 164.0, 455.0, 180.0, 94.0, 5.0, 224.0, 250.0, 262.0, 120.0, 0.0, 34.0, 0.0, 21.0, 22.0, 382.0, 86.0, 54.0, 2.0, 19.0, 190.0, 280.0, 443.0, 78.0, 175.0, 20.0, 228.0, 249.0, 96.0, 19.0, 191.0, 64.0, 26.0, 258.0, 132.0, 129.0, 4.0, 10.0, 3.0, 32.0, 54.0, 12.0, 103.0, 192.0, 285.0, 1.0, 28.0, 30.0, 34.0, 158.0, 43.0, 26.0, 12.0, 67.0, 12.0, 5.0, 97.0, 3.0, 29.0, 11.0, 35.0]
cU_orig = [8.0, 70.0, 378.0, 164.0, 455.0, 180.0, 94.0, 5.0, 224.0, 250.0, 262.0, 138.0, 48.0, 34.0, 2.0, 91.0, 68.0, 382.0, 86.0, 54.0, 4.0, 19.0, 190.0, 280.0, 443.0, 78.0, 175.0, 20.0, 228.0, 249.0, 96.0, 19.0, 191.0, 64.0, 26.0, 258.0, 132.0, 129.0, 4.0, 10.0, 3.0, 32.0, 54.0, 12.0, 103.0, 192.0, 533.0, 1.0, 140.0, 30.0, 34.0, 158.0, 43.0, 26.0, 174.0, 67.0, 72.0, 21.0, 97.0, 3.0, 29.0, 11.0, 35.0]
d = [5.0, 49.0, 47.0, 15.0, 6.0, 12.0, 27.0, 22.0, 40.0, 24.0, 6.0, 17.0, 17.0, 33.0, 28.0, 12.0, 18.0, 35.0, 4.0, 46.0, 9.0, 27.0, 7.0, 46.0, 6.0, 42.0, 7.0, 4.0, 17.0, 5.0, 49.0, 25.0, 17.0, 8.0, 48.0, 44.0, 34.0, 4.0, 23.0, 12.0, 25.0, 44.0, 17.0, 7.0, 42.0, 31.0, 27.0, 21.0, 20.0, 20.0, 9.0, 47.0, 39.0, 36.0, 45.0, 46.0, 12.0, 41.0, 3.0, 39.0, 22.0, 19.0, 46.0]
Len = length(d)

yy = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
