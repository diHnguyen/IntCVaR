edge = [1 2; 1 3; 1 4; 1 9; 1 10; 1 12; 2 3; 2 4; 2 6; 2 11; 3 4; 3 6; 3 8; 3 9; 3 10; 3 13; 3 14; 3 15; 4 6; 4 12; 5 12; 5 13; 5 15; 6 4; 6 5; 6 8; 6 9; 6 11; 6 12; 6 14; 6 15; 7 2; 7 3; 7 6; 7 10; 7 11; 7 12; 8 3; 8 5; 8 11; 9 2; 9 6; 10 5; 10 7; 10 8; 10 13; 11 4; 11 5; 11 9; 11 10; 11 12; 11 15; 12 2; 12 4; 12 9; 12 10; 13 11; 13 14; 13 15; 14 2; 14 3; 14 5; 14 10; 14 15]
cL_orig = [1.0, 85.0, 1.0, 8.0, 174.0, 245.0, 4.0, 39.0, 107.0, 291.0, 3.0, 50.0, 232.0, 113.0, 20.0, 232.0, 254.0, 600.0, 36.0, 20.0, 101.0, 290.0, 365.0, 4.0, 2.0, 48.0, 96.0, 175.0, 135.0, 76.0, 249.0, 4.0, 134.0, 45.0, 135.0, 122.0, 185.0, 66.0, 67.0, 112.0, 163.0, 97.0, 159.0, 143.0, 9.0, 11.0, 81.0, 212.0, 19.0, 2.0, 34.0, 0.0, 430.0, 49.0, 104.0, 35.0, 30.0, 26.0, 45.0, 50.0, 23.0, 49.0, 71.0, 38.0]
cU_orig = [19.0, 99.0, 5.0, 98.0, 174.0, 245.0, 24.0, 39.0, 107.0, 291.0, 3.0, 84.0, 232.0, 113.0, 20.0, 232.0, 254.0, 600.0, 36.0, 44.0, 101.0, 290.0, 365.0, 4.0, 2.0, 48.0, 96.0, 203.0, 397.0, 76.0, 249.0, 96.0, 134.0, 45.0, 165.0, 122.0, 185.0, 66.0, 67.0, 112.0, 163.0, 97.0, 159.0, 143.0, 9.0, 11.0, 81.0, 212.0, 73.0, 80.0, 34.0, 16.0, 430.0, 53.0, 104.0, 35.0, 114.0, 26.0, 45.0, 50.0, 23.0, 157.0, 71.0, 38.0]
d = [2.0, 17.0, 27.0, 31.0, 45.0, 5.0, 10.0, 13.0, 17.0, 1.0, 12.0, 27.0, 25.0, 25.0, 1.0, 20.0, 28.0, 38.0, 28.0, 39.0, 7.0, 15.0, 38.0, 31.0, 37.0, 37.0, 14.0, 18.0, 37.0, 19.0, 45.0, 18.0, 3.0, 34.0, 13.0, 43.0, 10.0, 34.0, 16.0, 37.0, 35.0, 7.0, 18.0, 7.0, 32.0, 45.0, 2.0, 39.0, 8.0, 6.0, 37.0, 24.0, 44.0, 42.0, 36.0, 28.0, 7.0, 39.0, 40.0, 32.0, 46.0, 32.0, 44.0, 33.0]
Len = length(d)

yy = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
