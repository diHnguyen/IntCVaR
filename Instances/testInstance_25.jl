edge = [1 4; 1 6; 1 7; 1 13; 1 14; 2 4; 2 6; 2 8; 2 9; 2 10; 2 15; 3 2; 3 5; 3 8; 3 10; 3 12; 3 13; 3 14; 3 15; 4 3; 4 5; 4 11; 4 15; 5 3; 5 4; 5 7; 5 14; 6 7; 6 8; 6 11; 6 15; 7 4; 7 6; 7 12; 8 2; 8 4; 8 6; 8 9; 9 3; 9 12; 9 14; 10 8; 10 14; 11 7; 11 15; 12 3; 12 7; 12 8; 12 10; 12 13; 12 14; 12 15; 13 2; 13 6; 13 7; 13 8; 13 9; 13 14; 14 2; 14 6; 14 7; 14 8; 14 9; 14 11; 14 13]
cL_orig = [146.0, 17.0, 30.0, 542.0, 137.0, 72.0, 105.0, 242.0, 8.0, 17.0, 643.0, 19.0, 28.0, 210.0, 116.0, 362.0, 391.0, 462.0, 349.0, 16.0, 23.0, 18.0, 495.0, 82.0, 16.0, 37.0, 132.0, 4.0, 19.0, 76.0, 131.0, 17.0, 0.0, 94.0, 188.0, 9.0, 53.0, 11.0, 232.0, 141.0, 134.0, 62.0, 82.0, 32.0, 136.0, 32.0, 46.0, 153.0, 76.0, 38.0, 5.0, 3.0, 345.0, 98.0, 64.0, 75.0, 186.0, 8.0, 332.0, 203.0, 116.0, 53.0, 230.0, 47.0, 36.0]
cU_orig = [146.0, 141.0, 54.0, 542.0, 137.0, 72.0, 105.0, 242.0, 8.0, 133.0, 643.0, 19.0, 28.0, 210.0, 116.0, 362.0, 391.0, 462.0, 373.0, 16.0, 23.0, 18.0, 495.0, 82.0, 44.0, 37.0, 132.0, 4.0, 89.0, 76.0, 189.0, 223.0, 2.0, 94.0, 188.0, 9.0, 53.0, 79.0, 232.0, 141.0, 134.0, 62.0, 82.0, 32.0, 136.0, 32.0, 46.0, 153.0, 76.0, 38.0, 15.0, 3.0, 345.0, 98.0, 64.0, 401.0, 186.0, 8.0, 332.0, 203.0, 116.0, 505.0, 230.0, 71.0, 36.0]
d = [45.0, 12.0, 15.0, 48.0, 7.0, 13.0, 49.0, 49.0, 13.0, 4.0, 41.0, 28.0, 4.0, 19.0, 8.0, 50.0, 3.0, 46.0, 8.0, 41.0, 5.0, 4.0, 31.0, 4.0, 40.0, 44.0, 42.0, 32.0, 26.0, 20.0, 13.0, 34.0, 49.0, 50.0, 34.0, 16.0, 25.0, 19.0, 2.0, 15.0, 11.0, 13.0, 41.0, 15.0, 4.0, 8.0, 42.0, 24.0, 35.0, 25.0, 16.0, 32.0, 25.0, 10.0, 45.0, 32.0, 35.0, 40.0, 4.0, 10.0, 16.0, 33.0, 2.0, 40.0, 35.0]
Len = length(d)

yy = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
