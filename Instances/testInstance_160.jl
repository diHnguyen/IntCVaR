edge = [1 6; 1 12; 1 13; 1 14; 1 15; 2 5; 2 6; 2 8; 2 13; 3 5; 3 8; 3 9; 3 13; 3 15; 4 3; 4 9; 4 10; 4 12; 5 2; 5 4; 5 15; 6 2; 6 8; 6 9; 6 11; 6 14; 6 15; 7 8; 7 9; 7 14; 8 2; 8 5; 8 6; 8 9; 8 11; 8 12; 9 3; 9 4; 9 7; 9 10; 9 14; 9 15; 10 2; 10 5; 10 11; 10 13; 11 2; 11 3; 11 6; 11 8; 11 15; 12 3; 12 4; 12 5; 12 8; 12 11; 12 14; 13 2; 13 4; 13 5; 13 8; 13 14; 14 3]
cL_orig = [153.0, 53.0, 200.0, 112.0, 337.0, 86.0, 115.0, 263.0, 521.0, 38.0, 40.0, 12.0, 81.0, 9.0, 2.0, 24.0, 134.0, 27.0, 1.0, 35.0, 295.0, 27.0, 32.0, 104.0, 99.0, 309.0, 131.0, 32.0, 97.0, 81.0, 288.0, 99.0, 37.0, 13.0, 123.0, 7.0, 136.0, 7.0, 100.0, 6.0, 147.0, 96.0, 90.0, 230.0, 4.0, 109.0, 105.0, 35.0, 182.0, 136.0, 43.0, 108.0, 203.0, 285.0, 40.0, 30.0, 68.0, 268.0, 359.0, 382.0, 143.0, 5.0, 114.0]
cU_orig = [153.0, 681.0, 200.0, 528.0, 337.0, 86.0, 115.0, 263.0, 521.0, 38.0, 46.0, 12.0, 81.0, 9.0, 2.0, 24.0, 134.0, 561.0, 1.0, 35.0, 295.0, 27.0, 32.0, 104.0, 99.0, 309.0, 131.0, 32.0, 97.0, 185.0, 288.0, 99.0, 37.0, 13.0, 123.0, 11.0, 190.0, 457.0, 100.0, 22.0, 147.0, 96.0, 112.0, 230.0, 4.0, 109.0, 105.0, 35.0, 182.0, 136.0, 43.0, 108.0, 203.0, 285.0, 118.0, 30.0, 68.0, 298.0, 359.0, 382.0, 143.0, 5.0, 606.0]
d = [42.0, 9.0, 17.0, 29.0, 1.0, 9.0, 15.0, 28.0, 34.0, 22.0, 5.0, 47.0, 35.0, 5.0, 7.0, 5.0, 26.0, 50.0, 43.0, 18.0, 23.0, 39.0, 12.0, 17.0, 7.0, 35.0, 24.0, 20.0, 28.0, 28.0, 3.0, 44.0, 42.0, 41.0, 2.0, 34.0, 45.0, 11.0, 32.0, 4.0, 38.0, 18.0, 38.0, 22.0, 43.0, 6.0, 39.0, 43.0, 8.0, 32.0, 25.0, 33.0, 45.0, 41.0, 23.0, 41.0, 41.0, 40.0, 27.0, 42.0, 8.0, 46.0, 18.0]
Len = length(d)

yy = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
