edge = [1 4; 1 6; 1 14; 2 8; 2 10; 2 12; 2 15; 3 9; 3 12; 4 5; 4 8; 4 10; 4 12; 4 14; 5 4; 5 6; 5 9; 5 12; 5 13; 5 14; 5 15; 6 9; 6 11; 7 3; 7 11; 7 12; 7 15; 8 2; 8 3; 8 6; 8 7; 8 11; 8 14; 9 3; 9 6; 9 7; 9 11; 9 14; 10 2; 10 3; 10 9; 10 13; 10 14; 11 2; 11 6; 11 7; 11 9; 11 12; 11 13; 11 14; 12 3; 12 5; 12 8; 12 9; 12 10; 12 14; 12 15; 13 2; 13 4; 13 5; 13 6; 13 7; 13 8; 13 15]
cL_orig = [149.0, 24.0, 622.0, 1.0, 7.0, 420.0, 296.0, 259.0, 427.0, 2.0, 51.0, 64.0, 8.0, 149.0, 20.0, 7.0, 160.0, 86.0, 347.0, 302.0, 408.0, 32.0, 7.0, 33.0, 129.0, 239.0, 293.0, 77.0, 40.0, 10.0, 36.0, 62.0, 176.0, 277.0, 146.0, 91.0, 58.0, 180.0, 328.0, 17.0, 26.0, 145.0, 61.0, 131.0, 2.0, 105.0, 48.0, 18.0, 8.0, 102.0, 175.0, 229.0, 23.0, 125.0, 13.0, 87.0, 9.0, 311.0, 214.0, 203.0, 9.0, 1.0, 124.0, 15.0]
cU_orig = [149.0, 50.0, 622.0, 331.0, 21.0, 420.0, 296.0, 259.0, 427.0, 84.0, 51.0, 478.0, 20.0, 605.0, 20.0, 7.0, 160.0, 86.0, 347.0, 442.0, 408.0, 32.0, 19.0, 129.0, 129.0, 239.0, 293.0, 77.0, 40.0, 10.0, 36.0, 62.0, 176.0, 277.0, 146.0, 91.0, 58.0, 180.0, 336.0, 17.0, 26.0, 145.0, 103.0, 131.0, 4.0, 105.0, 48.0, 18.0, 84.0, 102.0, 175.0, 229.0, 251.0, 125.0, 13.0, 87.0, 9.0, 311.0, 598.0, 203.0, 9.0, 27.0, 124.0, 97.0]
d = [38.0, 36.0, 3.0, 1.0, 16.0, 40.0, 31.0, 43.0, 36.0, 34.0, 3.0, 48.0, 48.0, 15.0, 38.0, 36.0, 18.0, 5.0, 36.0, 24.0, 11.0, 15.0, 5.0, 22.0, 16.0, 40.0, 29.0, 17.0, 42.0, 38.0, 24.0, 16.0, 20.0, 47.0, 21.0, 35.0, 38.0, 6.0, 33.0, 22.0, 10.0, 11.0, 33.0, 19.0, 4.0, 20.0, 13.0, 43.0, 49.0, 41.0, 30.0, 48.0, 4.0, 17.0, 50.0, 22.0, 40.0, 10.0, 38.0, 18.0, 24.0, 40.0, 2.0, 17.0]
Len = length(d)

yy = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
