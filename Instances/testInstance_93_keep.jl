edge = [1 11; 2 5; 2 7; 2 13; 2 14; 3 2; 3 4; 3 9; 3 11; 3 13; 4 2; 4 9; 4 10; 4 12; 4 14; 4 15; 5 6; 5 7; 5 12; 5 14; 6 11; 6 14; 7 2; 7 3; 7 4; 7 6; 7 8; 7 10; 7 12; 7 14; 8 4; 8 6; 8 11; 8 12; 8 13; 8 15; 9 4; 9 7; 9 13; 10 5; 10 6; 10 8; 10 9; 10 11; 10 13; 10 15; 11 6; 11 8; 11 9; 11 12; 12 7; 12 11; 12 15; 13 2; 13 4; 13 6; 13 8; 13 10; 13 15; 14 3; 14 8; 14 13]
cL_orig = [411.0, 31.0, 101.0, 65.0, 207.0, 15.0, 36.0, 37.0, 267.0, 193.0, 30.0, 122.0, 143.0, 271.0, 422.0, 509.0, 14.0, 38.0, 308.0, 62.0, 164.0, 396.0, 17.0, 53.0, 66.0, 12.0, 19.0, 21.0, 35.0, 123.0, 134.0, 14.0, 64.0, 111.0, 9.0, 32.0, 45.0, 5.0, 42.0, 221.0, 16.0, 19.0, 47.0, 15.0, 26.0, 65.0, 219.0, 136.0, 31.0, 12.0, 49.0, 43.0, 102.0, 339.0, 427.0, 212.0, 147.0, 117.0, 32.0, 541.0, 110.0, 37.0]
cU_orig = [411.0, 31.0, 285.0, 197.0, 207.0, 15.0, 36.0, 37.0, 267.0, 225.0, 30.0, 122.0, 311.0, 271.0, 422.0, 509.0, 14.0, 38.0, 308.0, 62.0, 164.0, 396.0, 17.0, 53.0, 214.0, 42.0, 19.0, 21.0, 35.0, 123.0, 134.0, 30.0, 64.0, 111.0, 9.0, 32.0, 269.0, 91.0, 246.0, 221.0, 88.0, 19.0, 47.0, 15.0, 26.0, 65.0, 219.0, 136.0, 69.0, 12.0, 97.0, 43.0, 198.0, 339.0, 427.0, 212.0, 147.0, 117.0, 32.0, 541.0, 110.0, 37.0]
d = [3.0, 22.0, 45.0, 41.0, 13.0, 50.0, 50.0, 31.0, 16.0, 5.0, 39.0, 34.0, 1.0, 6.0, 19.0, 18.0, 33.0, 29.0, 45.0, 46.0, 32.0, 45.0, 9.0, 31.0, 39.0, 38.0, 23.0, 39.0, 28.0, 20.0, 32.0, 4.0, 44.0, 44.0, 13.0, 46.0, 19.0, 13.0, 29.0, 17.0, 23.0, 2.0, 26.0, 21.0, 46.0, 26.0, 27.0, 23.0, 5.0, 46.0, 11.0, 50.0, 24.0, 7.0, 5.0, 46.0, 28.0, 5.0, 47.0, 3.0, 43.0, 9.0]
Len = length(d)

yy = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
