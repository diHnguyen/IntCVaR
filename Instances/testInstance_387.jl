edge = [1 5; 1 6; 1 7; 1 12; 1 14; 1 15; 2 6; 2 8; 2 12; 2 13; 2 15; 3 2; 3 6; 3 11; 3 12; 3 14; 3 15; 4 2; 4 3; 4 9; 4 10; 5 8; 5 12; 6 3; 6 5; 6 10; 7 2; 7 3; 7 4; 8 13; 8 15; 9 4; 9 7; 9 11; 9 15; 10 5; 10 6; 10 8; 10 13; 10 15; 11 4; 11 8; 11 9; 11 10; 11 14; 12 5; 12 6; 12 8; 12 9; 12 10; 12 11; 12 13; 12 14; 13 2; 13 3; 13 5; 13 6; 13 7; 13 10; 14 2; 14 3; 14 4; 14 9; 14 12]
cL_orig = [36.0, 153.0, 175.0, 504.0, 112.0, 236.0, 188.0, 49.0, 390.0, 434.0, 648.0, 1.0, 149.0, 55.0, 429.0, 248.0, 109.0, 6.0, 40.0, 137.0, 2.0, 64.0, 23.0, 41.0, 4.0, 58.0, 138.0, 6.0, 0.0, 58.0, 69.0, 92.0, 70.0, 34.0, 256.0, 198.0, 24.0, 21.0, 2.0, 40.0, 205.0, 127.0, 81.0, 45.0, 44.0, 309.0, 62.0, 14.0, 4.0, 44.0, 16.0, 4.0, 15.0, 272.0, 65.0, 320.0, 56.0, 299.0, 129.0, 267.0, 226.0, 447.0, 76.0, 25.0]
cU_orig = [36.0, 153.0, 175.0, 504.0, 112.0, 236.0, 188.0, 49.0, 390.0, 434.0, 648.0, 29.0, 149.0, 55.0, 429.0, 248.0, 241.0, 6.0, 56.0, 137.0, 164.0, 64.0, 23.0, 217.0, 4.0, 58.0, 138.0, 184.0, 8.0, 224.0, 537.0, 92.0, 70.0, 112.0, 302.0, 198.0, 24.0, 27.0, 2.0, 286.0, 205.0, 127.0, 81.0, 45.0, 44.0, 309.0, 62.0, 14.0, 12.0, 100.0, 16.0, 82.0, 15.0, 272.0, 65.0, 320.0, 56.0, 299.0, 129.0, 267.0, 226.0, 447.0, 76.0, 25.0]
d = [37.0, 26.0, 25.0, 50.0, 13.0, 11.0, 25.0, 34.0, 23.0, 5.0, 23.0, 15.0, 6.0, 13.0, 30.0, 49.0, 3.0, 47.0, 44.0, 6.0, 31.0, 35.0, 8.0, 16.0, 31.0, 49.0, 45.0, 13.0, 37.0, 24.0, 12.0, 27.0, 48.0, 34.0, 42.0, 39.0, 7.0, 46.0, 14.0, 7.0, 15.0, 28.0, 14.0, 41.0, 23.0, 12.0, 2.0, 38.0, 4.0, 9.0, 47.0, 33.0, 9.0, 30.0, 41.0, 37.0, 48.0, 35.0, 14.0, 10.0, 48.0, 18.0, 20.0, 8.0]
Len = length(d)

yy = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
