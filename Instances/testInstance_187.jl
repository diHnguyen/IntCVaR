edge = [1 2; 1 4; 1 8; 1 15; 2 8; 2 9; 2 11; 3 2; 3 7; 3 8; 3 11; 3 12; 3 14; 4 3; 4 5; 4 8; 4 10; 4 13; 4 14; 5 4; 5 12; 6 9; 6 10; 6 14; 7 4; 7 6; 7 9; 7 10; 7 12; 8 13; 8 14; 8 15; 9 10; 9 11; 10 5; 10 7; 10 8; 10 12; 10 14; 11 3; 11 4; 11 7; 11 13; 11 14; 12 3; 12 4; 12 5; 12 7; 12 8; 12 9; 12 10; 12 13; 12 15; 13 5; 13 9; 13 14; 14 4; 14 8; 14 10; 14 13; 14 15]
cL_orig = [27.0, 10.0, 263.0, 410.0, 270.0, 239.0, 170.0, 8.0, 64.0, 66.0, 58.0, 174.0, 456.0, 33.0, 34.0, 166.0, 209.0, 114.0, 17.0, 20.0, 98.0, 52.0, 82.0, 213.0, 58.0, 2.0, 25.0, 88.0, 86.0, 157.0, 247.0, 176.0, 7.0, 22.0, 48.0, 100.0, 41.0, 11.0, 1.0, 116.0, 221.0, 70.0, 26.0, 144.0, 20.0, 314.0, 12.0, 57.0, 145.0, 32.0, 13.0, 6.0, 43.0, 238.0, 52.0, 17.0, 21.0, 193.0, 53.0, 13.0, 37.0]
cU_orig = [27.0, 10.0, 263.0, 410.0, 270.0, 239.0, 170.0, 8.0, 64.0, 66.0, 94.0, 174.0, 456.0, 33.0, 34.0, 166.0, 209.0, 114.0, 55.0, 40.0, 376.0, 52.0, 126.0, 213.0, 58.0, 16.0, 25.0, 88.0, 86.0, 157.0, 247.0, 176.0, 9.0, 146.0, 282.0, 196.0, 77.0, 11.0, 1.0, 118.0, 221.0, 70.0, 136.0, 144.0, 80.0, 314.0, 18.0, 57.0, 145.0, 32.0, 13.0, 14.0, 99.0, 238.0, 52.0, 51.0, 347.0, 193.0, 53.0, 13.0, 37.0]
d = [43.0, 26.0, 21.0, 34.0, 46.0, 13.0, 14.0, 42.0, 23.0, 12.0, 29.0, 48.0, 24.0, 44.0, 32.0, 10.0, 47.0, 40.0, 13.0, 2.0, 2.0, 35.0, 31.0, 42.0, 46.0, 5.0, 6.0, 17.0, 14.0, 26.0, 8.0, 13.0, 22.0, 48.0, 22.0, 23.0, 19.0, 23.0, 32.0, 24.0, 39.0, 9.0, 6.0, 2.0, 15.0, 30.0, 25.0, 4.0, 7.0, 16.0, 43.0, 3.0, 3.0, 13.0, 13.0, 24.0, 18.0, 24.0, 46.0, 23.0, 21.0]
Len = length(d)

yy = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
