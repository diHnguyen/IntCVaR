edge = [1 4; 1 5; 1 6; 1 7; 1 9; 1 12; 2 5; 2 8; 2 9; 2 13; 3 10; 3 11; 4 2; 4 3; 4 7; 5 7; 5 10; 5 11; 5 14; 6 4; 6 5; 6 7; 6 9; 7 8; 7 11; 7 13; 7 14; 7 15; 8 4; 8 6; 8 7; 8 10; 8 13; 8 14; 9 2; 9 3; 9 4; 9 5; 9 6; 9 8; 9 11; 9 15; 10 2; 10 3; 10 7; 10 11; 10 14; 11 6; 11 8; 11 15; 12 3; 12 6; 12 11; 12 15; 13 4; 13 10; 14 4; 14 5; 14 9; 14 11; 14 12]
cL_orig = [110.0, 110.0, 118.0, 161.0, 33.0, 38.0, 113.0, 24.0, 214.0, 517.0, 149.0, 200.0, 55.0, 34.0, 28.0, 0.0, 74.0, 121.0, 96.0, 26.0, 31.0, 12.0, 118.0, 5.0, 26.0, 75.0, 142.0, 349.0, 67.0, 47.0, 6.0, 6.0, 228.0, 9.0, 76.0, 273.0, 17.0, 161.0, 147.0, 45.0, 27.0, 200.0, 219.0, 305.0, 0.0, 20.0, 122.0, 103.0, 80.0, 60.0, 270.0, 213.0, 50.0, 117.0, 66.0, 130.0, 489.0, 298.0, 89.0, 35.0, 74.0]
cU_orig = [110.0, 110.0, 118.0, 161.0, 231.0, 58.0, 113.0, 24.0, 402.0, 517.0, 149.0, 200.0, 55.0, 34.0, 28.0, 6.0, 74.0, 121.0, 96.0, 26.0, 31.0, 20.0, 118.0, 13.0, 76.0, 75.0, 142.0, 349.0, 67.0, 47.0, 6.0, 6.0, 228.0, 565.0, 328.0, 273.0, 433.0, 161.0, 147.0, 45.0, 27.0, 200.0, 369.0, 305.0, 242.0, 20.0, 122.0, 103.0, 80.0, 86.0, 462.0, 213.0, 50.0, 117.0, 66.0, 130.0, 489.0, 298.0, 89.0, 35.0, 74.0]
d = [35.0, 24.0, 42.0, 40.0, 21.0, 24.0, 37.0, 34.0, 6.0, 31.0, 7.0, 42.0, 50.0, 1.0, 46.0, 5.0, 27.0, 50.0, 48.0, 25.0, 36.0, 49.0, 20.0, 17.0, 19.0, 40.0, 18.0, 36.0, 20.0, 34.0, 5.0, 6.0, 19.0, 7.0, 3.0, 13.0, 3.0, 5.0, 1.0, 30.0, 44.0, 19.0, 42.0, 45.0, 49.0, 16.0, 43.0, 26.0, 19.0, 24.0, 29.0, 2.0, 36.0, 34.0, 38.0, 25.0, 23.0, 47.0, 32.0, 14.0, 32.0]
Len = length(d)

yy = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
