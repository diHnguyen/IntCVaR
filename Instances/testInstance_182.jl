edge = [1 4; 1 5; 1 9; 1 11; 1 12; 1 14; 2 10; 2 12; 3 2; 3 4; 3 10; 3 12; 4 3; 4 5; 4 10; 4 13; 5 3; 5 4; 5 6; 5 8; 5 10; 6 4; 6 7; 6 10; 6 13; 6 15; 7 5; 7 6; 7 8; 7 9; 7 13; 7 14; 8 5; 8 6; 8 14; 9 3; 9 4; 9 5; 9 7; 9 10; 9 11; 9 12; 9 13; 10 2; 10 7; 10 14; 11 3; 11 4; 11 5; 11 7; 11 13; 11 15; 12 8; 12 9; 13 3; 13 4; 13 5; 13 6; 13 12; 14 2; 14 4; 14 5; 14 11; 14 13]
cL_orig = [111.0, 48.0, 117.0, 485.0, 131.0, 409.0, 94.0, 126.0, 8.0, 2.0, 117.0, 28.0, 3.0, 20.0, 295.0, 241.0, 13.0, 34.0, 26.0, 3.0, 48.0, 54.0, 13.0, 153.0, 47.0, 336.0, 3.0, 48.0, 11.0, 51.0, 67.0, 78.0, 98.0, 18.0, 93.0, 21.0, 113.0, 66.0, 6.0, 19.0, 17.0, 39.0, 144.0, 361.0, 134.0, 45.0, 252.0, 309.0, 0.0, 7.0, 3.0, 88.0, 10.0, 1.0, 326.0, 83.0, 34.0, 57.0, 30.0, 531.0, 266.0, 51.0, 3.0, 28.0]
cU_orig = [111.0, 48.0, 117.0, 485.0, 131.0, 409.0, 128.0, 126.0, 38.0, 2.0, 117.0, 28.0, 9.0, 20.0, 295.0, 241.0, 13.0, 34.0, 26.0, 3.0, 214.0, 54.0, 13.0, 153.0, 111.0, 336.0, 3.0, 48.0, 11.0, 51.0, 205.0, 78.0, 136.0, 160.0, 93.0, 21.0, 113.0, 66.0, 122.0, 35.0, 59.0, 39.0, 144.0, 361.0, 134.0, 197.0, 252.0, 309.0, 46.0, 91.0, 13.0, 88.0, 56.0, 1.0, 326.0, 83.0, 432.0, 85.0, 30.0, 531.0, 266.0, 51.0, 3.0, 28.0]
d = [22.0, 4.0, 11.0, 14.0, 20.0, 9.0, 25.0, 3.0, 17.0, 9.0, 22.0, 16.0, 21.0, 41.0, 46.0, 44.0, 3.0, 20.0, 46.0, 5.0, 28.0, 46.0, 48.0, 12.0, 9.0, 22.0, 16.0, 38.0, 28.0, 26.0, 31.0, 24.0, 21.0, 30.0, 39.0, 47.0, 26.0, 14.0, 21.0, 50.0, 27.0, 9.0, 18.0, 46.0, 25.0, 30.0, 21.0, 37.0, 36.0, 27.0, 50.0, 38.0, 26.0, 25.0, 6.0, 42.0, 33.0, 30.0, 44.0, 25.0, 47.0, 3.0, 6.0, 25.0]
Len = length(d)

yy = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
