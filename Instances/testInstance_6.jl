edge = [1 3; 1 5; 1 6; 1 11; 1 13; 1 14; 2 4; 2 10; 2 14; 3 4; 3 5; 3 9; 3 11; 3 12; 3 14; 4 7; 4 13; 5 7; 5 10; 5 13; 5 14; 6 4; 6 5; 6 12; 6 14; 6 15; 7 5; 7 6; 7 10; 7 15; 8 2; 8 3; 8 11; 8 15; 9 2; 9 3; 9 4; 9 7; 9 8; 9 12; 9 13; 10 3; 10 6; 10 14; 11 3; 11 5; 11 7; 11 9; 12 7; 12 9; 12 13; 13 2; 13 4; 13 8; 13 9; 13 11; 13 14; 14 2; 14 4; 14 5; 14 6; 14 7; 14 12]
cL_orig = [54.0, 33.0, 104.0, 297.0, 328.0, 325.0, 72.0, 260.0, 122.0, 15.0, 75.0, 64.0, 38.0, 55.0, 341.0, 104.0, 44.0, 53.0, 77.0, 400.0, 143.0, 64.0, 12.0, 153.0, 196.0, 305.0, 80.0, 46.0, 4.0, 394.0, 145.0, 188.0, 70.0, 153.0, 190.0, 9.0, 105.0, 26.0, 25.0, 51.0, 13.0, 33.0, 1.0, 112.0, 212.0, 149.0, 97.0, 8.0, 189.0, 68.0, 5.0, 422.0, 209.0, 121.0, 154.0, 11.0, 34.0, 280.0, 174.0, 130.0, 324.0, 280.0, 74.0]
cU_orig = [70.0, 33.0, 104.0, 297.0, 328.0, 325.0, 72.0, 458.0, 122.0, 15.0, 75.0, 100.0, 38.0, 55.0, 341.0, 104.0, 44.0, 53.0, 255.0, 400.0, 143.0, 64.0, 12.0, 153.0, 196.0, 393.0, 80.0, 46.0, 16.0, 394.0, 145.0, 188.0, 70.0, 153.0, 190.0, 357.0, 355.0, 26.0, 25.0, 69.0, 103.0, 57.0, 1.0, 112.0, 582.0, 273.0, 97.0, 30.0, 189.0, 68.0, 5.0, 422.0, 209.0, 121.0, 184.0, 11.0, 34.0, 528.0, 656.0, 130.0, 324.0, 280.0, 74.0]
d = [24.0, 9.0, 31.0, 48.0, 23.0, 38.0, 33.0, 38.0, 6.0, 32.0, 10.0, 31.0, 24.0, 31.0, 47.0, 37.0, 20.0, 15.0, 14.0, 44.0, 47.0, 12.0, 38.0, 9.0, 41.0, 18.0, 45.0, 5.0, 27.0, 45.0, 5.0, 36.0, 15.0, 4.0, 15.0, 6.0, 19.0, 7.0, 5.0, 43.0, 13.0, 33.0, 13.0, 25.0, 5.0, 10.0, 15.0, 24.0, 10.0, 45.0, 49.0, 13.0, 44.0, 12.0, 7.0, 36.0, 14.0, 9.0, 23.0, 22.0, 6.0, 4.0, 22.0]
Len = length(d)

yy = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
