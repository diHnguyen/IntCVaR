edge = [1 6; 1 10; 1 12; 1 13; 1 14; 2 3; 2 5; 2 7; 2 9; 2 13; 3 4; 3 8; 3 13; 3 14; 4 5; 4 8; 4 13; 5 3; 5 4; 5 9; 5 10; 6 2; 6 4; 6 5; 6 7; 6 8; 6 14; 7 3; 7 4; 7 12; 7 13; 7 14; 7 15; 8 2; 8 6; 8 7; 8 10; 8 12; 8 13; 9 12; 9 13; 9 15; 10 4; 10 6; 10 7; 10 9; 10 11; 10 12; 10 13; 10 15; 11 5; 11 10; 12 4; 12 6; 12 7; 12 10; 12 11; 12 15; 13 3; 13 11; 14 11]
cL_orig = [105.0, 371.0, 309.0, 20.0, 3.0, 21.0, 11.0, 65.0, 342.0, 46.0, 28.0, 138.0, 69.0, 478.0, 23.0, 36.0, 113.0, 8.0, 9.0, 76.0, 27.0, 112.0, 33.0, 45.0, 13.0, 44.0, 326.0, 199.0, 124.0, 29.0, 95.0, 44.0, 384.0, 272.0, 58.0, 10.0, 91.0, 17.0, 238.0, 109.0, 130.0, 290.0, 102.0, 20.0, 51.0, 3.0, 50.0, 30.0, 64.0, 96.0, 200.0, 38.0, 50.0, 280.0, 23.0, 63.0, 0.0, 125.0, 125.0, 86.0, 35.0]
cU_orig = [187.0, 371.0, 409.0, 20.0, 87.0, 21.0, 11.0, 65.0, 342.0, 46.0, 28.0, 138.0, 249.0, 478.0, 23.0, 206.0, 113.0, 132.0, 9.0, 76.0, 369.0, 112.0, 33.0, 45.0, 13.0, 44.0, 326.0, 199.0, 162.0, 29.0, 95.0, 566.0, 384.0, 294.0, 58.0, 10.0, 91.0, 79.0, 238.0, 109.0, 130.0, 290.0, 102.0, 66.0, 51.0, 3.0, 50.0, 30.0, 64.0, 96.0, 200.0, 38.0, 352.0, 280.0, 23.0, 63.0, 78.0, 125.0, 125.0, 86.0, 35.0]
d = [19.0, 44.0, 41.0, 20.0, 5.0, 46.0, 19.0, 6.0, 13.0, 24.0, 48.0, 50.0, 41.0, 30.0, 10.0, 30.0, 46.0, 25.0, 1.0, 30.0, 28.0, 4.0, 40.0, 37.0, 17.0, 40.0, 7.0, 31.0, 33.0, 23.0, 1.0, 50.0, 1.0, 12.0, 16.0, 31.0, 30.0, 2.0, 10.0, 15.0, 8.0, 10.0, 2.0, 11.0, 50.0, 19.0, 45.0, 37.0, 44.0, 33.0, 43.0, 15.0, 26.0, 12.0, 36.0, 22.0, 6.0, 6.0, 29.0, 40.0, 11.0]
Len = length(d)

yy = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
