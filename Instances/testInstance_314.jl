edge = [1 2; 1 5; 1 8; 1 10; 1 13; 2 8; 3 7; 3 10; 3 11; 3 12; 3 15; 4 2; 4 7; 4 15; 5 3; 5 8; 5 12; 5 13; 5 15; 6 5; 6 7; 6 8; 6 11; 6 13; 7 2; 7 4; 7 8; 7 9; 8 6; 8 7; 8 9; 8 14; 8 15; 9 2; 9 4; 9 5; 9 8; 9 14; 9 15; 10 4; 10 5; 10 6; 10 7; 10 8; 10 9; 10 15; 11 10; 11 12; 11 13; 11 15; 12 2; 12 7; 12 11; 12 13; 13 3; 13 11; 14 4; 14 5; 14 6; 14 7; 14 8; 14 11]
cL_orig = [13.0, 117.0, 108.0, 15.0, 461.0, 184.0, 87.0, 255.0, 131.0, 104.0, 180.0, 39.0, 78.0, 134.0, 58.0, 7.0, 71.0, 387.0, 273.0, 4.0, 14.0, 35.0, 154.0, 306.0, 6.0, 11.0, 37.0, 2.0, 41.0, 38.0, 5.0, 109.0, 312.0, 68.0, 77.0, 169.0, 31.0, 10.0, 41.0, 108.0, 156.0, 15.0, 22.0, 62.0, 40.0, 39.0, 36.0, 38.0, 79.0, 191.0, 294.0, 104.0, 15.0, 3.0, 401.0, 35.0, 218.0, 383.0, 133.0, 123.0, 5.0, 15.0]
cU_orig = [13.0, 129.0, 108.0, 15.0, 461.0, 236.0, 87.0, 255.0, 441.0, 782.0, 476.0, 39.0, 78.0, 134.0, 58.0, 7.0, 71.0, 387.0, 273.0, 22.0, 14.0, 45.0, 154.0, 338.0, 6.0, 11.0, 37.0, 2.0, 41.0, 38.0, 5.0, 109.0, 312.0, 68.0, 391.0, 169.0, 31.0, 10.0, 261.0, 108.0, 156.0, 15.0, 22.0, 62.0, 40.0, 207.0, 36.0, 38.0, 79.0, 191.0, 294.0, 270.0, 15.0, 3.0, 401.0, 115.0, 296.0, 383.0, 133.0, 179.0, 5.0, 15.0]
d = [36.0, 10.0, 41.0, 13.0, 47.0, 5.0, 3.0, 2.0, 31.0, 26.0, 13.0, 28.0, 8.0, 43.0, 33.0, 1.0, 18.0, 11.0, 25.0, 23.0, 26.0, 36.0, 46.0, 40.0, 44.0, 10.0, 13.0, 1.0, 29.0, 34.0, 10.0, 30.0, 36.0, 48.0, 31.0, 50.0, 5.0, 13.0, 19.0, 34.0, 8.0, 6.0, 30.0, 4.0, 39.0, 17.0, 23.0, 21.0, 13.0, 11.0, 49.0, 22.0, 34.0, 3.0, 47.0, 8.0, 38.0, 42.0, 16.0, 38.0, 8.0, 28.0]
Len = length(d)

yy = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
