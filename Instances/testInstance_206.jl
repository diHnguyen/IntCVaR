edge = [1 2; 1 6; 1 12; 1 13; 1 15; 2 3; 2 5; 2 6; 2 10; 2 11; 2 12; 2 15; 3 6; 3 13; 4 2; 4 7; 4 10; 4 11; 4 14; 5 4; 5 7; 5 8; 6 3; 6 4; 6 5; 6 7; 6 9; 6 11; 6 15; 7 4; 7 5; 7 10; 7 15; 8 2; 8 4; 8 7; 8 9; 8 11; 8 13; 8 14; 9 11; 9 14; 10 4; 10 5; 10 6; 10 8; 11 8; 11 12; 11 14; 11 15; 12 2; 12 3; 12 4; 12 5; 12 7; 13 6; 13 8; 13 10; 13 12; 14 2; 14 5; 14 6; 14 10; 14 12]
cL_orig = [49.0, 250.0, 136.0, 554.0, 493.0, 27.0, 52.0, 49.0, 206.0, 3.0, 466.0, 9.0, 9.0, 5.0, 69.0, 0.0, 20.0, 117.0, 62.0, 36.0, 18.0, 41.0, 52.0, 41.0, 25.0, 28.0, 58.0, 239.0, 233.0, 101.0, 50.0, 25.0, 325.0, 12.0, 150.0, 25.0, 6.0, 52.0, 52.0, 33.0, 50.0, 44.0, 229.0, 1.0, 100.0, 92.0, 1.0, 49.0, 105.0, 100.0, 212.0, 146.0, 95.0, 201.0, 226.0, 206.0, 249.0, 84.0, 0.0, 246.0, 353.0, 229.0, 150.0, 61.0]
cU_orig = [49.0, 250.0, 136.0, 554.0, 493.0, 27.0, 116.0, 351.0, 206.0, 119.0, 466.0, 9.0, 9.0, 5.0, 69.0, 8.0, 376.0, 145.0, 62.0, 58.0, 62.0, 41.0, 132.0, 41.0, 25.0, 28.0, 58.0, 257.0, 233.0, 101.0, 88.0, 161.0, 325.0, 12.0, 150.0, 25.0, 28.0, 58.0, 280.0, 33.0, 50.0, 44.0, 229.0, 67.0, 100.0, 92.0, 175.0, 49.0, 105.0, 100.0, 212.0, 146.0, 95.0, 201.0, 226.0, 428.0, 249.0, 84.0, 12.0, 700.0, 353.0, 229.0, 150.0, 61.0]
d = [37.0, 8.0, 28.0, 28.0, 5.0, 36.0, 5.0, 24.0, 32.0, 9.0, 28.0, 12.0, 50.0, 18.0, 20.0, 14.0, 37.0, 31.0, 35.0, 3.0, 26.0, 37.0, 41.0, 9.0, 19.0, 3.0, 9.0, 18.0, 47.0, 48.0, 7.0, 47.0, 26.0, 44.0, 46.0, 6.0, 6.0, 2.0, 26.0, 44.0, 20.0, 21.0, 15.0, 35.0, 16.0, 11.0, 47.0, 40.0, 14.0, 34.0, 8.0, 35.0, 33.0, 14.0, 24.0, 12.0, 16.0, 29.0, 3.0, 15.0, 44.0, 1.0, 14.0, 44.0]
Len = length(d)

yy = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
