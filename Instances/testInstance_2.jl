edge = [1 4; 1 5; 1 9; 2 6; 2 10; 2 15; 3 4; 3 7; 4 2; 4 5; 4 6; 4 8; 4 9; 4 10; 4 12; 4 13; 5 2; 5 3; 5 4; 5 7; 5 8; 5 14; 6 3; 6 5; 6 8; 6 10; 6 14; 7 3; 7 5; 7 12; 7 14; 8 2; 8 3; 8 4; 8 7; 8 9; 8 12; 8 14; 9 3; 9 4; 9 10; 9 12; 9 15; 10 2; 10 3; 10 5; 10 9; 10 12; 11 2; 11 7; 11 14; 12 4; 12 6; 12 7; 13 5; 13 12; 14 7; 14 8; 14 11; 14 12; 14 15]
cL_orig = [54.0, 23.0, 21.0, 0.0, 386.0, 210.0, 26.0, 91.0, 13.0, 5.0, 21.0, 84.0, 1.0, 160.0, 5.0, 291.0, 135.0, 65.0, 45.0, 10.0, 115.0, 83.0, 44.0, 26.0, 44.0, 118.0, 5.0, 76.0, 43.0, 84.0, 34.0, 123.0, 110.0, 199.0, 45.0, 12.0, 150.0, 108.0, 93.0, 43.0, 31.0, 53.0, 290.0, 74.0, 275.0, 161.0, 4.0, 92.0, 435.0, 86.0, 145.0, 146.0, 296.0, 93.0, 66.0, 24.0, 193.0, 239.0, 102.0, 94.0, 30.0]
cU_orig = [54.0, 23.0, 21.0, 66.0, 386.0, 430.0, 62.0, 91.0, 13.0, 5.0, 117.0, 88.0, 13.0, 160.0, 5.0, 291.0, 135.0, 111.0, 45.0, 10.0, 115.0, 83.0, 44.0, 26.0, 118.0, 118.0, 5.0, 76.0, 43.0, 84.0, 64.0, 123.0, 110.0, 199.0, 45.0, 70.0, 150.0, 108.0, 93.0, 175.0, 51.0, 53.0, 290.0, 74.0, 275.0, 161.0, 4.0, 92.0, 435.0, 110.0, 145.0, 146.0, 296.0, 93.0, 66.0, 24.0, 193.0, 239.0, 102.0, 94.0, 30.0]
d = [25.0, 39.0, 2.0, 48.0, 21.0, 8.0, 18.0, 45.0, 20.0, 21.0, 13.0, 35.0, 6.0, 38.0, 23.0, 42.0, 15.0, 14.0, 17.0, 28.0, 12.0, 31.0, 6.0, 49.0, 4.0, 28.0, 50.0, 30.0, 40.0, 48.0, 37.0, 37.0, 49.0, 4.0, 34.0, 5.0, 17.0, 47.0, 47.0, 20.0, 26.0, 31.0, 25.0, 15.0, 14.0, 26.0, 10.0, 49.0, 30.0, 35.0, 4.0, 43.0, 48.0, 9.0, 16.0, 48.0, 9.0, 38.0, 6.0, 21.0, 10.0]
Len = length(d)

yy = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
