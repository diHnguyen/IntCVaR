edge = [1 4; 1 5; 1 6; 1 7; 1 8; 1 11; 1 12; 1 15; 2 3; 2 4; 2 6; 2 10; 2 11; 2 13; 3 6; 3 7; 3 8; 3 12; 4 2; 4 6; 4 7; 4 11; 4 12; 5 2; 5 11; 5 12; 5 13; 5 15; 6 5; 6 11; 7 2; 7 4; 7 14; 7 15; 8 2; 8 9; 8 11; 9 5; 9 6; 9 8; 9 10; 9 14; 10 2; 10 11; 10 14; 10 15; 11 3; 11 7; 11 13; 11 14; 12 3; 12 4; 12 6; 12 7; 12 9; 12 11; 12 14; 13 2; 13 11; 13 14; 13 15; 14 6; 14 8; 14 9]
cL_orig = [104.0, 97.0, 144.0, 230.0, 16.0, 312.0, 127.0, 139.0, 19.0, 7.0, 46.0, 124.0, 26.0, 107.0, 40.0, 23.0, 141.0, 346.0, 3.0, 73.0, 91.0, 87.0, 360.0, 114.0, 155.0, 136.0, 200.0, 151.0, 12.0, 42.0, 40.0, 2.0, 184.0, 7.0, 221.0, 6.0, 49.0, 33.0, 57.0, 11.0, 4.0, 216.0, 237.0, 1.0, 56.0, 94.0, 353.0, 119.0, 25.0, 104.0, 15.0, 391.0, 19.0, 112.0, 6.0, 28.0, 40.0, 474.0, 12.0, 30.0, 42.0, 191.0, 61.0, 16.0]
cU_orig = [104.0, 235.0, 144.0, 230.0, 344.0, 312.0, 127.0, 295.0, 19.0, 9.0, 104.0, 396.0, 26.0, 911.0, 40.0, 23.0, 141.0, 346.0, 33.0, 73.0, 91.0, 87.0, 360.0, 124.0, 445.0, 136.0, 200.0, 151.0, 20.0, 42.0, 40.0, 2.0, 184.0, 141.0, 221.0, 6.0, 49.0, 33.0, 57.0, 11.0, 4.0, 216.0, 237.0, 1.0, 56.0, 142.0, 353.0, 119.0, 25.0, 104.0, 35.0, 391.0, 453.0, 256.0, 6.0, 36.0, 40.0, 474.0, 14.0, 30.0, 42.0, 291.0, 61.0, 16.0]
d = [39.0, 15.0, 7.0, 25.0, 15.0, 10.0, 2.0, 40.0, 30.0, 16.0, 22.0, 43.0, 49.0, 38.0, 34.0, 32.0, 24.0, 31.0, 24.0, 2.0, 17.0, 25.0, 21.0, 26.0, 21.0, 39.0, 3.0, 23.0, 17.0, 14.0, 24.0, 37.0, 7.0, 26.0, 16.0, 12.0, 50.0, 25.0, 24.0, 28.0, 1.0, 32.0, 31.0, 30.0, 29.0, 41.0, 9.0, 41.0, 40.0, 30.0, 46.0, 26.0, 12.0, 43.0, 12.0, 2.0, 37.0, 41.0, 2.0, 46.0, 35.0, 4.0, 14.0, 41.0]
Len = length(d)

yy = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
