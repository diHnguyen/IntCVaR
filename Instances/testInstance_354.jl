edge = [1 3; 1 6; 1 10; 1 12; 1 14; 2 4; 2 6; 2 7; 2 8; 2 10; 2 13; 2 14; 3 2; 3 4; 3 6; 3 9; 3 13; 3 14; 3 15; 4 5; 4 9; 4 14; 5 2; 5 7; 6 2; 6 3; 6 5; 6 10; 6 14; 7 3; 7 4; 7 10; 7 11; 7 14; 8 2; 8 10; 9 5; 9 13; 9 15; 10 5; 10 7; 10 8; 10 11; 10 12; 11 2; 11 6; 11 7; 11 9; 11 12; 12 3; 12 5; 12 6; 12 9; 12 11; 12 14; 13 4; 13 6; 13 14; 14 6; 14 9; 14 11; 14 13]
cL_orig = [14.0, 156.0, 166.0, 521.0, 577.0, 95.0, 162.0, 220.0, 6.0, 97.0, 70.0, 541.0, 31.0, 37.0, 10.0, 214.0, 487.0, 106.0, 391.0, 7.0, 144.0, 396.0, 53.0, 77.0, 94.0, 57.0, 15.0, 114.0, 140.0, 149.0, 60.0, 20.0, 34.0, 213.0, 156.0, 72.0, 187.0, 92.0, 181.0, 199.0, 138.0, 52.0, 4.0, 87.0, 172.0, 154.0, 106.0, 42.0, 38.0, 5.0, 266.0, 263.0, 88.0, 21.0, 62.0, 71.0, 6.0, 7.0, 185.0, 163.0, 41.0, 43.0]
cU_orig = [14.0, 156.0, 166.0, 521.0, 577.0, 95.0, 162.0, 220.0, 6.0, 97.0, 490.0, 541.0, 31.0, 37.0, 10.0, 214.0, 487.0, 106.0, 513.0, 7.0, 294.0, 396.0, 53.0, 77.0, 94.0, 97.0, 15.0, 126.0, 140.0, 149.0, 60.0, 20.0, 34.0, 449.0, 288.0, 72.0, 187.0, 92.0, 181.0, 297.0, 138.0, 52.0, 4.0, 87.0, 172.0, 154.0, 106.0, 42.0, 38.0, 5.0, 266.0, 263.0, 88.0, 51.0, 62.0, 311.0, 634.0, 7.0, 185.0, 163.0, 41.0, 43.0]
d = [5.0, 12.0, 22.0, 1.0, 48.0, 19.0, 17.0, 27.0, 30.0, 17.0, 18.0, 4.0, 43.0, 40.0, 41.0, 22.0, 13.0, 14.0, 7.0, 1.0, 2.0, 17.0, 2.0, 26.0, 33.0, 25.0, 33.0, 37.0, 15.0, 6.0, 44.0, 42.0, 2.0, 42.0, 45.0, 12.0, 21.0, 6.0, 10.0, 27.0, 38.0, 26.0, 49.0, 24.0, 25.0, 21.0, 30.0, 6.0, 1.0, 35.0, 37.0, 25.0, 15.0, 47.0, 17.0, 31.0, 50.0, 31.0, 1.0, 38.0, 46.0, 37.0]
Len = length(d)

yy = [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
