edge = [1 3; 1 4; 1 11; 1 15; 2 3; 2 4; 2 6; 2 7; 2 10; 2 11; 3 4; 3 14; 4 5; 4 6; 4 7; 4 14; 4 15; 5 3; 5 4; 5 7; 5 9; 5 12; 6 2; 6 8; 6 9; 6 13; 6 15; 7 4; 7 5; 7 12; 8 7; 8 10; 8 14; 8 15; 9 10; 9 14; 10 2; 10 3; 10 8; 10 9; 10 11; 10 14; 10 15; 11 12; 11 15; 12 2; 12 7; 12 8; 12 10; 12 11; 12 13; 12 15; 13 3; 13 5; 13 6; 13 7; 13 12; 14 2; 14 11; 14 12; 14 15]
cL_orig = [0.0, 40.0, 119.0, 14.0, 30.0, 2.0, 2.0, 136.0, 227.0, 229.0, 25.0, 417.0, 22.0, 18.0, 48.0, 34.0, 289.0, 40.0, 15.0, 76.0, 106.0, 195.0, 123.0, 42.0, 131.0, 78.0, 133.0, 14.0, 45.0, 27.0, 15.0, 27.0, 52.0, 98.0, 2.0, 99.0, 314.0, 206.0, 36.0, 8.0, 48.0, 110.0, 242.0, 19.0, 70.0, 424.0, 109.0, 110.0, 4.0, 7.0, 40.0, 96.0, 0.0, 76.0, 164.0, 29.0, 5.0, 171.0, 108.0, 78.0, 29.0]
cU_orig = [20.0, 40.0, 119.0, 14.0, 30.0, 2.0, 24.0, 326.0, 227.0, 295.0, 25.0, 417.0, 22.0, 28.0, 48.0, 34.0, 289.0, 40.0, 15.0, 76.0, 106.0, 195.0, 123.0, 42.0, 131.0, 112.0, 133.0, 14.0, 45.0, 27.0, 15.0, 49.0, 98.0, 98.0, 14.0, 99.0, 314.0, 206.0, 142.0, 8.0, 48.0, 110.0, 242.0, 39.0, 70.0, 424.0, 109.0, 110.0, 4.0, 7.0, 40.0, 96.0, 20.0, 642.0, 164.0, 281.0, 5.0, 171.0, 108.0, 78.0, 29.0]
d = [1.0, 29.0, 20.0, 45.0, 15.0, 38.0, 50.0, 21.0, 5.0, 24.0, 36.0, 37.0, 14.0, 22.0, 20.0, 50.0, 27.0, 49.0, 2.0, 31.0, 13.0, 27.0, 32.0, 41.0, 10.0, 25.0, 28.0, 41.0, 49.0, 8.0, 50.0, 46.0, 7.0, 15.0, 31.0, 22.0, 43.0, 1.0, 9.0, 33.0, 11.0, 30.0, 33.0, 30.0, 7.0, 14.0, 13.0, 14.0, 27.0, 40.0, 42.0, 36.0, 35.0, 27.0, 19.0, 21.0, 32.0, 21.0, 48.0, 12.0, 26.0]
Len = length(d)

yy = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
