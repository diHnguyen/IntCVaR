edge = [1 7; 1 8; 1 11; 2 3; 2 7; 2 13; 3 7; 3 8; 3 12; 3 13; 3 14; 3 15; 4 10; 4 13; 4 15; 5 4; 5 8; 5 12; 5 13; 5 14; 6 3; 6 4; 6 12; 6 13; 7 3; 7 5; 7 12; 7 14; 8 3; 8 5; 8 10; 8 12; 8 13; 9 4; 9 10; 9 12; 9 13; 10 11; 10 12; 10 13; 11 4; 11 5; 11 8; 11 13; 11 15; 12 2; 12 4; 12 6; 12 7; 12 9; 12 10; 12 14; 12 15; 13 3; 13 4; 13 6; 13 7; 13 9; 13 10; 13 11; 14 3; 14 5; 14 9]
cL_orig = [14.0, 308.0, 177.0, 49.0, 113.0, 536.0, 57.0, 123.0, 332.0, 459.0, 268.0, 176.0, 104.0, 57.0, 18.0, 16.0, 80.0, 346.0, 52.0, 48.0, 11.0, 58.0, 85.0, 319.0, 174.0, 52.0, 12.0, 49.0, 152.0, 146.0, 48.0, 161.0, 174.0, 97.0, 23.0, 69.0, 19.0, 23.0, 0.0, 23.0, 92.0, 286.0, 18.0, 11.0, 169.0, 143.0, 385.0, 247.0, 177.0, 43.0, 2.0, 91.0, 92.0, 192.0, 139.0, 85.0, 185.0, 140.0, 9.0, 24.0, 5.0, 272.0, 234.0]
cU_orig = [200.0, 308.0, 177.0, 49.0, 113.0, 536.0, 57.0, 123.0, 332.0, 459.0, 268.0, 190.0, 104.0, 57.0, 40.0, 52.0, 80.0, 346.0, 52.0, 98.0, 69.0, 58.0, 89.0, 319.0, 174.0, 90.0, 112.0, 113.0, 174.0, 146.0, 48.0, 161.0, 174.0, 97.0, 23.0, 69.0, 215.0, 23.0, 10.0, 23.0, 204.0, 286.0, 18.0, 39.0, 169.0, 649.0, 385.0, 321.0, 177.0, 43.0, 4.0, 91.0, 124.0, 192.0, 625.0, 85.0, 185.0, 140.0, 75.0, 24.0, 587.0, 272.0, 234.0]
d = [29.0, 13.0, 1.0, 42.0, 2.0, 34.0, 43.0, 30.0, 25.0, 46.0, 47.0, 18.0, 29.0, 23.0, 37.0, 50.0, 34.0, 5.0, 48.0, 49.0, 7.0, 50.0, 43.0, 5.0, 29.0, 50.0, 49.0, 2.0, 37.0, 10.0, 7.0, 1.0, 12.0, 48.0, 8.0, 11.0, 12.0, 49.0, 17.0, 14.0, 16.0, 4.0, 11.0, 30.0, 10.0, 15.0, 38.0, 50.0, 3.0, 34.0, 4.0, 36.0, 37.0, 36.0, 37.0, 1.0, 44.0, 29.0, 30.0, 33.0, 37.0, 14.0, 48.0]
Len = length(d)

yy = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
