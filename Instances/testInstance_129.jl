edge = [1 4; 1 5; 1 12; 1 14; 1 15; 2 7; 2 8; 2 9; 2 13; 2 15; 3 5; 3 7; 3 8; 3 14; 4 2; 4 5; 4 8; 4 15; 5 2; 5 9; 5 10; 5 11; 5 13; 6 2; 6 5; 6 9; 6 14; 7 10; 7 11; 7 15; 8 5; 8 6; 8 10; 8 13; 8 14; 9 4; 9 8; 9 10; 9 11; 9 14; 10 3; 10 4; 10 5; 10 6; 10 7; 10 13; 10 14; 11 4; 11 13; 11 15; 12 5; 12 6; 12 8; 12 9; 12 14; 13 4; 13 6; 13 7; 14 2; 14 6; 14 9]
cL_orig = [16.0, 85.0, 293.0, 58.0, 213.0, 156.0, 95.0, 274.0, 339.0, 177.0, 23.0, 27.0, 174.0, 407.0, 74.0, 6.0, 33.0, 395.0, 28.0, 96.0, 19.0, 273.0, 126.0, 11.0, 10.0, 58.0, 330.0, 36.0, 192.0, 25.0, 70.0, 55.0, 29.0, 222.0, 56.0, 70.0, 42.0, 21.0, 8.0, 55.0, 8.0, 22.0, 8.0, 172.0, 143.0, 2.0, 127.0, 169.0, 9.0, 151.0, 9.0, 250.0, 48.0, 89.0, 7.0, 95.0, 134.0, 214.0, 91.0, 322.0, 212.0]
cU_orig = [218.0, 85.0, 293.0, 202.0, 213.0, 156.0, 95.0, 274.0, 339.0, 923.0, 23.0, 27.0, 174.0, 407.0, 74.0, 20.0, 57.0, 395.0, 28.0, 96.0, 19.0, 273.0, 126.0, 165.0, 10.0, 226.0, 330.0, 36.0, 192.0, 25.0, 70.0, 55.0, 29.0, 222.0, 56.0, 70.0, 42.0, 21.0, 8.0, 55.0, 16.0, 22.0, 34.0, 172.0, 143.0, 116.0, 127.0, 299.0, 9.0, 151.0, 75.0, 250.0, 48.0, 89.0, 7.0, 95.0, 312.0, 214.0, 91.0, 322.0, 212.0]
d = [14.0, 9.0, 12.0, 43.0, 43.0, 27.0, 37.0, 23.0, 39.0, 32.0, 43.0, 45.0, 20.0, 20.0, 33.0, 26.0, 11.0, 10.0, 32.0, 27.0, 31.0, 43.0, 9.0, 49.0, 37.0, 50.0, 33.0, 42.0, 43.0, 7.0, 45.0, 37.0, 48.0, 34.0, 40.0, 11.0, 7.0, 38.0, 49.0, 41.0, 17.0, 8.0, 28.0, 30.0, 21.0, 34.0, 18.0, 27.0, 7.0, 33.0, 22.0, 44.0, 32.0, 37.0, 49.0, 9.0, 10.0, 47.0, 47.0, 7.0, 29.0]
Len = length(d)

yy = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
