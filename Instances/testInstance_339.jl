edge = [1 7; 1 13; 2 5; 2 7; 3 2; 3 5; 3 12; 4 5; 4 8; 4 10; 4 11; 4 12; 5 2; 5 3; 5 4; 5 7; 5 8; 5 11; 5 13; 5 15; 6 2; 6 4; 6 5; 6 7; 6 9; 6 10; 6 12; 6 13; 6 14; 7 4; 7 5; 7 9; 7 10; 7 11; 7 14; 8 2; 8 3; 8 4; 8 10; 8 12; 9 12; 9 15; 10 2; 10 5; 10 7; 10 12; 10 13; 11 4; 11 7; 11 10; 11 15; 12 6; 12 11; 12 14; 13 2; 13 8; 13 10; 13 11; 13 14; 14 2; 14 9; 14 12]
cL_orig = [107.0, 529.0, 115.0, 40.0, 49.0, 48.0, 145.0, 14.0, 166.0, 105.0, 82.0, 287.0, 52.0, 72.0, 5.0, 21.0, 60.0, 89.0, 270.0, 325.0, 87.0, 28.0, 8.0, 28.0, 54.0, 3.0, 30.0, 214.0, 105.0, 105.0, 8.0, 19.0, 107.0, 33.0, 92.0, 291.0, 94.0, 159.0, 77.0, 80.0, 80.0, 96.0, 320.0, 12.0, 38.0, 66.0, 84.0, 51.0, 52.0, 40.0, 40.0, 194.0, 28.0, 19.0, 335.0, 89.0, 97.0, 68.0, 29.0, 305.0, 223.0, 7.0]
cU_orig = [107.0, 647.0, 115.0, 436.0, 49.0, 48.0, 619.0, 14.0, 166.0, 105.0, 82.0, 287.0, 178.0, 72.0, 5.0, 21.0, 60.0, 127.0, 342.0, 325.0, 87.0, 28.0, 8.0, 28.0, 54.0, 3.0, 30.0, 214.0, 495.0, 105.0, 8.0, 119.0, 107.0, 33.0, 108.0, 291.0, 94.0, 159.0, 77.0, 82.0, 80.0, 96.0, 320.0, 256.0, 76.0, 66.0, 158.0, 51.0, 152.0, 40.0, 40.0, 252.0, 32.0, 19.0, 335.0, 169.0, 97.0, 68.0, 29.0, 305.0, 223.0, 7.0]
d = [1.0, 10.0, 50.0, 43.0, 9.0, 1.0, 49.0, 3.0, 21.0, 17.0, 18.0, 43.0, 45.0, 44.0, 25.0, 46.0, 38.0, 23.0, 36.0, 42.0, 27.0, 44.0, 29.0, 31.0, 27.0, 37.0, 11.0, 45.0, 29.0, 8.0, 2.0, 44.0, 26.0, 31.0, 42.0, 24.0, 39.0, 34.0, 19.0, 33.0, 26.0, 32.0, 45.0, 37.0, 17.0, 40.0, 26.0, 22.0, 18.0, 40.0, 39.0, 7.0, 30.0, 44.0, 12.0, 10.0, 30.0, 5.0, 18.0, 49.0, 6.0, 18.0]
Len = length(d)

yy = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
