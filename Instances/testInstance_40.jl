edge = [1 2; 1 3; 1 4; 1 10; 1 12; 1 15; 2 4; 2 5; 2 6; 2 7; 2 9; 2 10; 2 14; 3 12; 3 14; 3 15; 4 2; 4 12; 4 13; 4 15; 5 7; 5 10; 5 11; 5 15; 6 4; 6 7; 6 8; 6 11; 6 15; 7 4; 7 8; 7 10; 8 5; 9 3; 9 5; 9 7; 9 8; 10 3; 10 4; 10 5; 10 8; 10 11; 10 12; 10 13; 10 14; 11 3; 11 4; 11 7; 11 10; 11 14; 12 2; 12 7; 12 11; 12 13; 13 2; 13 5; 13 10; 13 11; 13 12; 14 3; 14 4; 14 11]
cL_orig = [11.0, 48.0, 84.0, 10.0, 435.0, 303.0, 1.0, 24.0, 174.0, 185.0, 52.0, 131.0, 369.0, 36.0, 376.0, 209.0, 52.0, 246.0, 315.0, 399.0, 29.0, 34.0, 28.0, 414.0, 5.0, 40.0, 41.0, 40.0, 432.0, 96.0, 40.0, 27.0, 66.0, 203.0, 181.0, 44.0, 50.0, 314.0, 206.0, 63.0, 14.0, 37.0, 67.0, 35.0, 179.0, 73.0, 101.0, 68.0, 36.0, 16.0, 74.0, 227.0, 32.0, 10.0, 23.0, 160.0, 14.0, 52.0, 31.0, 342.0, 471.0, 67.0]
cU_orig = [11.0, 48.0, 84.0, 10.0, 435.0, 303.0, 11.0, 24.0, 174.0, 185.0, 250.0, 613.0, 369.0, 36.0, 376.0, 209.0, 52.0, 536.0, 315.0, 399.0, 67.0, 426.0, 28.0, 414.0, 139.0, 40.0, 41.0, 40.0, 432.0, 96.0, 40.0, 121.0, 66.0, 203.0, 181.0, 44.0, 50.0, 314.0, 206.0, 429.0, 14.0, 37.0, 67.0, 35.0, 179.0, 73.0, 101.0, 68.0, 36.0, 120.0, 74.0, 227.0, 32.0, 10.0, 23.0, 160.0, 74.0, 52.0, 31.0, 342.0, 471.0, 67.0]
d = [21.0, 10.0, 32.0, 14.0, 22.0, 14.0, 28.0, 36.0, 39.0, 28.0, 8.0, 2.0, 46.0, 37.0, 47.0, 9.0, 22.0, 46.0, 4.0, 24.0, 20.0, 14.0, 2.0, 39.0, 46.0, 44.0, 16.0, 18.0, 5.0, 12.0, 16.0, 18.0, 3.0, 26.0, 12.0, 9.0, 30.0, 45.0, 23.0, 25.0, 39.0, 15.0, 10.0, 6.0, 2.0, 9.0, 15.0, 37.0, 3.0, 17.0, 14.0, 24.0, 36.0, 16.0, 13.0, 9.0, 44.0, 31.0, 19.0, 36.0, 35.0, 40.0]
Len = length(d)

yy = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
