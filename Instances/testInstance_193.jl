edge = [1 2; 1 5; 1 6; 1 11; 1 15; 2 5; 2 7; 2 9; 2 12; 2 13; 3 2; 3 5; 3 13; 4 2; 4 5; 4 9; 4 10; 4 11; 4 14; 5 3; 5 6; 5 8; 5 10; 5 11; 5 12; 5 15; 6 2; 6 7; 6 9; 6 11; 6 12; 6 15; 7 2; 7 11; 7 15; 8 13; 8 14; 9 6; 9 11; 10 4; 10 5; 10 7; 10 8; 10 11; 11 3; 11 8; 11 9; 11 14; 11 15; 12 3; 12 8; 12 9; 12 13; 12 15; 13 2; 13 3; 13 4; 13 6; 13 9; 13 10; 13 15; 14 8; 14 10; 14 11]
cL_orig = [26.0, 68.0, 139.0, 326.0, 87.0, 12.0, 29.0, 149.0, 445.0, 162.0, 20.0, 51.0, 23.0, 18.0, 5.0, 16.0, 174.0, 324.0, 172.0, 15.0, 47.0, 89.0, 201.0, 253.0, 28.0, 291.0, 78.0, 24.0, 7.0, 231.0, 47.0, 127.0, 46.0, 34.0, 126.0, 200.0, 202.0, 54.0, 88.0, 66.0, 53.0, 29.0, 26.0, 3.0, 169.0, 3.0, 16.0, 58.0, 50.0, 401.0, 13.0, 128.0, 11.0, 64.0, 404.0, 249.0, 34.0, 318.0, 104.0, 11.0, 33.0, 143.0, 174.0, 36.0]
cU_orig = [64.0, 68.0, 139.0, 326.0, 875.0, 12.0, 29.0, 149.0, 445.0, 162.0, 22.0, 51.0, 137.0, 18.0, 15.0, 16.0, 174.0, 324.0, 220.0, 65.0, 47.0, 89.0, 201.0, 253.0, 28.0, 307.0, 78.0, 24.0, 7.0, 231.0, 47.0, 127.0, 272.0, 34.0, 354.0, 200.0, 236.0, 54.0, 88.0, 66.0, 53.0, 29.0, 26.0, 71.0, 169.0, 3.0, 16.0, 58.0, 50.0, 401.0, 63.0, 128.0, 83.0, 84.0, 404.0, 249.0, 34.0, 318.0, 104.0, 61.0, 33.0, 143.0, 174.0, 36.0]
d = [30.0, 10.0, 50.0, 35.0, 46.0, 44.0, 20.0, 32.0, 25.0, 6.0, 30.0, 26.0, 6.0, 42.0, 16.0, 25.0, 44.0, 24.0, 17.0, 10.0, 42.0, 29.0, 22.0, 3.0, 7.0, 48.0, 40.0, 29.0, 14.0, 29.0, 8.0, 24.0, 6.0, 16.0, 10.0, 26.0, 31.0, 23.0, 35.0, 18.0, 49.0, 3.0, 37.0, 10.0, 25.0, 15.0, 31.0, 27.0, 26.0, 45.0, 1.0, 49.0, 44.0, 35.0, 11.0, 13.0, 18.0, 37.0, 35.0, 41.0, 31.0, 11.0, 25.0, 28.0]
Len = length(d)

yy = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
