edge = [1 9; 1 11; 2 3; 2 5; 2 8; 2 13; 3 8; 3 13; 3 15; 4 2; 4 8; 4 13; 4 14; 5 4; 5 6; 5 9; 5 11; 6 2; 6 3; 6 9; 6 13; 6 14; 7 3; 7 4; 7 9; 7 11; 7 15; 8 3; 8 11; 8 13; 8 15; 9 4; 9 7; 9 10; 9 11; 9 12; 10 3; 10 7; 11 3; 11 8; 11 9; 11 12; 11 13; 11 15; 12 3; 12 5; 12 6; 12 7; 12 13; 12 14; 13 2; 13 3; 13 6; 13 9; 13 10; 13 14; 14 2; 14 4; 14 7; 14 8; 14 11; 14 13]
cL_orig = [47.0, 396.0, 38.0, 95.0, 251.0, 217.0, 185.0, 2.0, 572.0, 55.0, 22.0, 62.0, 233.0, 2.0, 44.0, 36.0, 75.0, 151.0, 40.0, 87.0, 107.0, 205.0, 167.0, 1.0, 11.0, 167.0, 182.0, 129.0, 64.0, 104.0, 199.0, 73.0, 0.0, 3.0, 12.0, 103.0, 284.0, 78.0, 132.0, 13.0, 7.0, 7.0, 15.0, 88.0, 42.0, 60.0, 41.0, 69.0, 27.0, 94.0, 236.0, 21.0, 336.0, 119.0, 91.0, 0.0, 99.0, 198.0, 331.0, 25.0, 106.0, 3.0]
cU_orig = [47.0, 396.0, 38.0, 95.0, 251.0, 217.0, 185.0, 2.0, 572.0, 55.0, 62.0, 62.0, 233.0, 16.0, 44.0, 272.0, 75.0, 243.0, 40.0, 87.0, 107.0, 205.0, 167.0, 1.0, 11.0, 167.0, 182.0, 129.0, 64.0, 104.0, 199.0, 73.0, 124.0, 3.0, 44.0, 103.0, 284.0, 94.0, 132.0, 165.0, 151.0, 27.0, 31.0, 88.0, 432.0, 166.0, 241.0, 69.0, 41.0, 94.0, 236.0, 165.0, 336.0, 119.0, 91.0, 2.0, 99.0, 198.0, 331.0, 25.0, 106.0, 3.0]
d = [7.0, 22.0, 2.0, 29.0, 3.0, 37.0, 50.0, 10.0, 36.0, 44.0, 22.0, 14.0, 7.0, 28.0, 10.0, 1.0, 29.0, 49.0, 31.0, 46.0, 44.0, 21.0, 40.0, 4.0, 9.0, 33.0, 45.0, 33.0, 42.0, 19.0, 24.0, 23.0, 42.0, 46.0, 30.0, 11.0, 9.0, 38.0, 8.0, 11.0, 17.0, 42.0, 33.0, 43.0, 48.0, 14.0, 37.0, 40.0, 1.0, 6.0, 36.0, 6.0, 47.0, 40.0, 38.0, 12.0, 35.0, 9.0, 2.0, 17.0, 16.0, 45.0]
Len = length(d)

yy = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
