edge = [1 4; 1 5; 1 7; 2 5; 2 7; 2 10; 2 11; 2 12; 2 13; 3 4; 3 5; 3 11; 3 14; 3 15; 4 6; 4 8; 4 9; 4 13; 5 2; 5 4; 5 7; 6 3; 6 4; 6 5; 6 7; 6 15; 7 3; 7 4; 8 2; 8 3; 8 11; 8 15; 9 4; 9 8; 9 10; 9 11; 9 13; 9 14; 10 4; 10 8; 10 9; 10 12; 10 13; 11 2; 11 7; 11 8; 11 12; 11 14; 12 2; 12 3; 12 5; 12 8; 12 10; 13 4; 13 8; 13 9; 14 2; 14 4; 14 6; 14 9; 14 13]
cL_orig = [29.0, 177.0, 191.0, 29.0, 113.0, 100.0, 6.0, 214.0, 341.0, 5.0, 40.0, 42.0, 227.0, 259.0, 83.0, 159.0, 98.0, 323.0, 40.0, 0.0, 41.0, 109.0, 86.0, 44.0, 6.0, 393.0, 66.0, 29.0, 3.0, 64.0, 17.0, 244.0, 162.0, 44.0, 45.0, 19.0, 131.0, 141.0, 20.0, 34.0, 5.0, 18.0, 100.0, 215.0, 171.0, 37.0, 14.0, 102.0, 205.0, 77.0, 184.0, 11.0, 42.0, 331.0, 196.0, 60.0, 318.0, 45.0, 1.0, 46.0, 30.0]
cU_orig = [29.0, 177.0, 205.0, 29.0, 269.0, 100.0, 6.0, 214.0, 361.0, 5.0, 40.0, 42.0, 227.0, 259.0, 83.0, 159.0, 98.0, 323.0, 40.0, 44.0, 41.0, 109.0, 86.0, 44.0, 6.0, 393.0, 66.0, 29.0, 505.0, 172.0, 17.0, 244.0, 162.0, 44.0, 45.0, 19.0, 131.0, 141.0, 20.0, 34.0, 33.0, 42.0, 160.0, 215.0, 171.0, 37.0, 14.0, 196.0, 205.0, 77.0, 184.0, 11.0, 78.0, 331.0, 196.0, 60.0, 318.0, 45.0, 5.0, 46.0, 30.0]
d = [43.0, 47.0, 18.0, 29.0, 44.0, 40.0, 17.0, 8.0, 12.0, 7.0, 9.0, 27.0, 47.0, 29.0, 35.0, 14.0, 50.0, 39.0, 49.0, 27.0, 15.0, 7.0, 46.0, 12.0, 35.0, 39.0, 34.0, 46.0, 25.0, 23.0, 26.0, 35.0, 17.0, 21.0, 11.0, 16.0, 50.0, 35.0, 25.0, 22.0, 15.0, 48.0, 22.0, 11.0, 39.0, 12.0, 8.0, 28.0, 32.0, 26.0, 27.0, 48.0, 27.0, 49.0, 12.0, 22.0, 32.0, 25.0, 21.0, 25.0, 18.0]
Len = length(d)

yy = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
