edge = [1 2; 1 7; 1 9; 1 11; 2 9; 2 14; 2 15; 3 4; 3 5; 4 2; 4 5; 4 7; 4 9; 4 10; 4 11; 4 12; 4 13; 4 15; 5 3; 5 4; 5 6; 5 10; 5 11; 5 15; 6 3; 6 8; 7 2; 7 9; 7 12; 7 15; 8 3; 8 5; 8 6; 8 9; 8 12; 8 13; 9 6; 9 11; 10 7; 10 8; 10 9; 10 11; 11 3; 11 8; 11 9; 11 14; 12 2; 12 5; 12 7; 12 8; 12 9; 12 11; 13 2; 13 9; 13 11; 13 15; 14 2; 14 4; 14 8; 14 9; 14 10; 14 12]
cL_orig = [12.0, 8.0, 152.0, 150.0, 22.0, 91.0, 567.0, 5.0, 8.0, 15.0, 19.0, 26.0, 57.0, 147.0, 86.0, 215.0, 83.0, 152.0, 91.0, 3.0, 15.0, 27.0, 156.0, 186.0, 0.0, 23.0, 20.0, 2.0, 250.0, 26.0, 44.0, 123.0, 61.0, 22.0, 164.0, 6.0, 58.0, 42.0, 20.0, 54.0, 5.0, 1.0, 354.0, 2.0, 12.0, 115.0, 27.0, 14.0, 59.0, 4.0, 1.0, 2.0, 337.0, 173.0, 10.0, 68.0, 106.0, 201.0, 216.0, 162.0, 139.0, 92.0]
cU_orig = [30.0, 8.0, 152.0, 150.0, 22.0, 91.0, 567.0, 39.0, 178.0, 15.0, 19.0, 26.0, 57.0, 147.0, 86.0, 215.0, 435.0, 152.0, 91.0, 3.0, 15.0, 27.0, 156.0, 234.0, 2.0, 101.0, 20.0, 2.0, 250.0, 100.0, 230.0, 123.0, 125.0, 22.0, 164.0, 10.0, 58.0, 42.0, 20.0, 80.0, 5.0, 1.0, 354.0, 32.0, 12.0, 115.0, 85.0, 120.0, 59.0, 30.0, 171.0, 24.0, 337.0, 173.0, 10.0, 68.0, 106.0, 201.0, 216.0, 162.0, 139.0, 92.0]
d = [10.0, 3.0, 31.0, 1.0, 27.0, 12.0, 43.0, 22.0, 7.0, 38.0, 50.0, 37.0, 31.0, 33.0, 29.0, 9.0, 6.0, 26.0, 39.0, 50.0, 46.0, 33.0, 27.0, 50.0, 49.0, 18.0, 1.0, 34.0, 24.0, 34.0, 34.0, 44.0, 9.0, 41.0, 41.0, 27.0, 17.0, 43.0, 46.0, 48.0, 16.0, 37.0, 39.0, 43.0, 49.0, 9.0, 19.0, 17.0, 30.0, 23.0, 49.0, 5.0, 40.0, 31.0, 30.0, 32.0, 30.0, 5.0, 43.0, 9.0, 21.0, 19.0]
Len = length(d)

yy = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
