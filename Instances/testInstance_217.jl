edge = [1 2; 1 4; 1 9; 1 11; 2 3; 2 5; 2 7; 2 12; 2 13; 2 14; 3 4; 3 6; 3 8; 4 5; 4 8; 4 10; 4 14; 5 3; 5 4; 5 10; 5 15; 6 2; 6 13; 7 3; 7 4; 7 8; 7 12; 8 4; 8 6; 8 7; 8 11; 8 15; 9 3; 9 8; 9 12; 9 15; 10 3; 10 4; 10 9; 10 13; 11 4; 11 5; 11 7; 11 8; 11 13; 12 3; 12 6; 12 7; 13 7; 13 8; 13 9; 13 10; 13 11; 13 15; 14 2; 14 3; 14 8; 14 9; 14 10; 14 11; 14 13]
cL_orig = [6.0, 11.0, 113.0, 343.0, 36.0, 99.0, 57.0, 178.0, 331.0, 4.0, 40.0, 67.0, 146.0, 6.0, 146.0, 140.0, 45.0, 0.0, 29.0, 22.0, 7.0, 81.0, 247.0, 134.0, 83.0, 30.0, 1.0, 33.0, 26.0, 20.0, 5.0, 51.0, 208.0, 27.0, 28.0, 192.0, 179.0, 112.0, 25.0, 85.0, 155.0, 71.0, 165.0, 2.0, 53.0, 247.0, 229.0, 207.0, 265.0, 53.0, 12.0, 15.0, 92.0, 91.0, 1.0, 249.0, 95.0, 111.0, 46.0, 95.0, 33.0]
cU_orig = [52.0, 21.0, 113.0, 343.0, 36.0, 99.0, 57.0, 460.0, 331.0, 6.0, 40.0, 67.0, 146.0, 6.0, 146.0, 140.0, 45.0, 146.0, 29.0, 22.0, 7.0, 81.0, 247.0, 134.0, 183.0, 30.0, 1.0, 33.0, 26.0, 20.0, 9.0, 51.0, 208.0, 27.0, 28.0, 246.0, 179.0, 112.0, 25.0, 85.0, 303.0, 161.0, 165.0, 6.0, 55.0, 247.0, 229.0, 207.0, 265.0, 53.0, 116.0, 15.0, 92.0, 91.0, 1.0, 249.0, 95.0, 111.0, 46.0, 95.0, 33.0]
d = [4.0, 31.0, 21.0, 25.0, 15.0, 11.0, 44.0, 43.0, 15.0, 31.0, 23.0, 5.0, 48.0, 29.0, 47.0, 22.0, 44.0, 30.0, 8.0, 38.0, 35.0, 15.0, 44.0, 9.0, 49.0, 14.0, 11.0, 15.0, 47.0, 3.0, 5.0, 26.0, 16.0, 42.0, 21.0, 46.0, 28.0, 47.0, 14.0, 3.0, 44.0, 46.0, 10.0, 2.0, 10.0, 49.0, 32.0, 37.0, 23.0, 19.0, 38.0, 19.0, 38.0, 14.0, 35.0, 5.0, 43.0, 9.0, 13.0, 33.0, 21.0]
Len = length(d)

yy = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
