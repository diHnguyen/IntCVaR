edge = [1 11; 1 12; 2 5; 2 11; 2 13; 3 2; 3 5; 3 9; 3 11; 3 14; 4 3; 4 5; 4 8; 4 10; 5 2; 5 14; 6 8; 6 10; 6 14; 7 4; 7 5; 7 10; 7 15; 8 2; 8 3; 8 5; 8 6; 8 7; 8 12; 8 15; 9 4; 9 7; 9 10; 9 14; 9 15; 10 7; 10 9; 10 12; 11 2; 11 3; 11 7; 11 10; 11 12; 11 13; 12 8; 12 9; 12 11; 12 14; 12 15; 13 2; 13 3; 13 4; 13 5; 13 9; 13 14; 14 2; 14 5; 14 6; 14 8; 14 10; 14 13; 14 15]
cL_orig = [7.0, 512.0, 86.0, 360.0, 19.0, 8.0, 58.0, 230.0, 30.0, 36.0, 23.0, 4.0, 128.0, 143.0, 132.0, 339.0, 32.0, 133.0, 82.0, 84.0, 78.0, 18.0, 43.0, 165.0, 198.0, 51.0, 92.0, 35.0, 75.0, 225.0, 1.0, 94.0, 23.0, 137.0, 160.0, 5.0, 10.0, 19.0, 380.0, 339.0, 0.0, 31.0, 11.0, 24.0, 140.0, 119.0, 45.0, 35.0, 14.0, 271.0, 101.0, 212.0, 144.0, 198.0, 35.0, 296.0, 307.0, 209.0, 170.0, 150.0, 22.0, 43.0]
cU_orig = [61.0, 512.0, 86.0, 360.0, 125.0, 8.0, 58.0, 230.0, 30.0, 708.0, 23.0, 20.0, 128.0, 143.0, 132.0, 339.0, 32.0, 133.0, 82.0, 84.0, 78.0, 36.0, 43.0, 165.0, 198.0, 51.0, 92.0, 35.0, 75.0, 441.0, 339.0, 94.0, 23.0, 137.0, 160.0, 71.0, 10.0, 165.0, 380.0, 339.0, 18.0, 31.0, 11.0, 24.0, 218.0, 119.0, 45.0, 35.0, 160.0, 399.0, 101.0, 212.0, 144.0, 198.0, 35.0, 296.0, 307.0, 209.0, 170.0, 150.0, 22.0, 43.0]
d = [46.0, 27.0, 10.0, 25.0, 28.0, 22.0, 30.0, 31.0, 16.0, 11.0, 45.0, 25.0, 49.0, 17.0, 50.0, 20.0, 1.0, 34.0, 42.0, 33.0, 14.0, 14.0, 7.0, 12.0, 31.0, 6.0, 35.0, 45.0, 1.0, 24.0, 35.0, 49.0, 38.0, 10.0, 7.0, 38.0, 28.0, 42.0, 17.0, 29.0, 23.0, 9.0, 43.0, 17.0, 48.0, 13.0, 44.0, 35.0, 7.0, 25.0, 6.0, 7.0, 48.0, 15.0, 48.0, 17.0, 10.0, 37.0, 7.0, 14.0, 22.0, 1.0]
Len = length(d)

yy = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
