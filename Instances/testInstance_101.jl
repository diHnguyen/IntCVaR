edge = [1 6; 1 9; 2 13; 2 14; 3 9; 3 10; 3 12; 3 13; 4 6; 4 7; 4 11; 4 15; 5 6; 5 8; 5 10; 5 13; 6 2; 6 5; 6 7; 6 11; 6 14; 7 2; 7 3; 7 11; 7 12; 8 3; 8 10; 8 11; 8 13; 8 14; 9 3; 9 4; 9 5; 9 11; 10 6; 10 8; 10 11; 10 12; 10 13; 11 2; 11 7; 11 8; 11 9; 11 12; 11 13; 12 2; 12 4; 12 5; 12 7; 12 8; 12 14; 13 4; 13 5; 13 6; 13 7; 13 11; 14 2; 14 3; 14 4; 14 5; 14 7; 14 8; 14 15]
cL_orig = [149.0, 17.0, 397.0, 184.0, 278.0, 85.0, 233.0, 253.0, 24.0, 80.0, 147.0, 22.0, 4.0, 58.0, 162.0, 240.0, 90.0, 1.0, 18.0, 127.0, 194.0, 57.0, 8.0, 100.0, 71.0, 241.0, 21.0, 125.0, 49.0, 44.0, 31.0, 46.0, 174.0, 14.0, 78.0, 26.0, 15.0, 35.0, 112.0, 22.0, 125.0, 146.0, 92.0, 38.0, 27.0, 387.0, 69.0, 13.0, 179.0, 48.0, 50.0, 255.0, 59.0, 288.0, 150.0, 96.0, 296.0, 464.0, 209.0, 121.0, 27.0, 189.0, 20.0]
cU_orig = [149.0, 399.0, 397.0, 184.0, 278.0, 85.0, 271.0, 253.0, 24.0, 80.0, 173.0, 22.0, 4.0, 58.0, 162.0, 240.0, 90.0, 21.0, 18.0, 129.0, 194.0, 57.0, 26.0, 100.0, 71.0, 241.0, 21.0, 125.0, 189.0, 44.0, 31.0, 46.0, 174.0, 14.0, 142.0, 94.0, 15.0, 35.0, 112.0, 22.0, 125.0, 146.0, 92.0, 62.0, 27.0, 387.0, 69.0, 13.0, 191.0, 48.0, 136.0, 255.0, 59.0, 288.0, 150.0, 96.0, 334.0, 464.0, 209.0, 121.0, 91.0, 189.0, 20.0]
d = [17.0, 17.0, 21.0, 22.0, 1.0, 32.0, 35.0, 31.0, 50.0, 2.0, 21.0, 28.0, 7.0, 16.0, 37.0, 43.0, 8.0, 5.0, 36.0, 40.0, 12.0, 24.0, 22.0, 47.0, 29.0, 43.0, 37.0, 8.0, 17.0, 50.0, 27.0, 43.0, 5.0, 46.0, 13.0, 1.0, 6.0, 6.0, 39.0, 44.0, 40.0, 41.0, 14.0, 43.0, 9.0, 7.0, 46.0, 29.0, 48.0, 6.0, 43.0, 10.0, 12.0, 6.0, 14.0, 47.0, 4.0, 32.0, 21.0, 3.0, 21.0, 20.0, 19.0]
Len = length(d)

yy = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
