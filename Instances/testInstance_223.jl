edge = [1 3; 1 6; 1 13; 2 4; 2 6; 2 9; 2 13; 2 14; 3 5; 3 13; 4 3; 4 5; 4 9; 4 11; 4 15; 5 4; 5 6; 5 7; 5 9; 6 4; 6 5; 6 7; 6 8; 6 11; 6 12; 6 15; 7 6; 7 9; 7 10; 7 15; 8 2; 8 13; 8 14; 9 2; 9 3; 9 5; 9 11; 9 12; 9 14; 10 4; 10 8; 10 12; 10 13; 10 14; 11 5; 11 6; 11 12; 12 2; 12 3; 12 4; 12 5; 12 6; 12 10; 12 15; 13 3; 13 5; 13 6; 13 7; 13 11; 13 12; 13 15; 14 2; 14 4; 14 11]
cL_orig = [69.0, 15.0, 186.0, 49.0, 150.0, 333.0, 192.0, 433.0, 49.0, 253.0, 17.0, 9.0, 51.0, 239.0, 447.0, 44.0, 43.0, 4.0, 21.0, 59.0, 27.0, 2.0, 82.0, 164.0, 92.0, 215.0, 46.0, 17.0, 95.0, 306.0, 219.0, 172.0, 73.0, 33.0, 237.0, 10.0, 1.0, 103.0, 193.0, 130.0, 56.0, 18.0, 129.0, 102.0, 175.0, 47.0, 14.0, 114.0, 99.0, 299.0, 193.0, 16.0, 67.0, 45.0, 225.0, 218.0, 133.0, 125.0, 5.0, 30.0, 38.0, 49.0, 447.0, 89.0]
cU_orig = [69.0, 15.0, 452.0, 49.0, 150.0, 333.0, 290.0, 433.0, 101.0, 253.0, 17.0, 13.0, 297.0, 239.0, 447.0, 44.0, 43.0, 4.0, 21.0, 59.0, 47.0, 10.0, 82.0, 164.0, 92.0, 215.0, 46.0, 17.0, 95.0, 306.0, 219.0, 292.0, 73.0, 33.0, 237.0, 10.0, 49.0, 103.0, 193.0, 130.0, 56.0, 18.0, 129.0, 186.0, 175.0, 117.0, 14.0, 114.0, 99.0, 299.0, 193.0, 16.0, 67.0, 45.0, 225.0, 218.0, 133.0, 125.0, 7.0, 30.0, 38.0, 49.0, 447.0, 193.0]
d = [49.0, 48.0, 46.0, 49.0, 43.0, 33.0, 33.0, 23.0, 8.0, 3.0, 18.0, 14.0, 25.0, 41.0, 22.0, 20.0, 46.0, 29.0, 18.0, 41.0, 47.0, 49.0, 50.0, 2.0, 9.0, 45.0, 29.0, 20.0, 12.0, 35.0, 50.0, 32.0, 26.0, 49.0, 15.0, 23.0, 30.0, 30.0, 7.0, 37.0, 32.0, 4.0, 33.0, 3.0, 10.0, 44.0, 20.0, 25.0, 29.0, 19.0, 36.0, 45.0, 26.0, 47.0, 36.0, 48.0, 9.0, 16.0, 1.0, 2.0, 49.0, 13.0, 9.0, 18.0]
Len = length(d)

yy = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
