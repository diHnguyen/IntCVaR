edge = [1 9; 1 11; 1 12; 1 13; 1 14; 2 9; 2 11; 3 2; 3 5; 3 7; 3 8; 3 15; 4 5; 4 8; 4 10; 4 13; 4 14; 5 3; 5 6; 5 8; 5 10; 5 11; 5 13; 5 15; 6 4; 6 5; 6 11; 6 12; 6 13; 7 5; 7 8; 7 12; 7 13; 8 2; 8 9; 8 13; 9 4; 9 6; 9 8; 9 10; 10 2; 10 5; 10 7; 10 8; 10 11; 10 12; 10 15; 11 3; 11 6; 11 14; 12 3; 12 7; 12 11; 12 15; 13 8; 13 9; 13 10; 13 12; 14 2; 14 5; 14 8; 14 12; 14 13; 14 15]
cL_orig = [111.0, 243.0, 50.0, 170.0, 551.0, 28.0, 292.0, 35.0, 66.0, 72.0, 139.0, 246.0, 48.0, 115.0, 55.0, 445.0, 79.0, 36.0, 11.0, 105.0, 207.0, 300.0, 375.0, 470.0, 38.0, 18.0, 123.0, 117.0, 124.0, 41.0, 28.0, 34.0, 168.0, 155.0, 12.0, 1.0, 222.0, 58.0, 34.0, 21.0, 368.0, 7.0, 8.0, 40.0, 2.0, 74.0, 217.0, 229.0, 1.0, 23.0, 133.0, 123.0, 20.0, 94.0, 16.0, 72.0, 13.0, 43.0, 186.0, 99.0, 217.0, 14.0, 10.0, 26.0]
cU_orig = [111.0, 243.0, 50.0, 170.0, 551.0, 28.0, 292.0, 35.0, 106.0, 72.0, 343.0, 352.0, 48.0, 223.0, 55.0, 445.0, 95.0, 36.0, 11.0, 105.0, 207.0, 300.0, 375.0, 470.0, 74.0, 18.0, 123.0, 117.0, 124.0, 129.0, 28.0, 60.0, 168.0, 155.0, 40.0, 1.0, 222.0, 58.0, 34.0, 21.0, 368.0, 7.0, 54.0, 150.0, 2.0, 74.0, 217.0, 229.0, 15.0, 23.0, 133.0, 123.0, 20.0, 94.0, 64.0, 72.0, 159.0, 43.0, 186.0, 675.0, 217.0, 14.0, 10.0, 26.0]
d = [37.0, 33.0, 7.0, 41.0, 5.0, 15.0, 35.0, 34.0, 42.0, 42.0, 23.0, 19.0, 7.0, 5.0, 30.0, 9.0, 38.0, 26.0, 5.0, 1.0, 2.0, 14.0, 41.0, 16.0, 34.0, 48.0, 22.0, 25.0, 19.0, 21.0, 46.0, 49.0, 14.0, 27.0, 21.0, 37.0, 46.0, 24.0, 46.0, 9.0, 4.0, 31.0, 9.0, 22.0, 33.0, 6.0, 39.0, 45.0, 31.0, 44.0, 45.0, 19.0, 11.0, 34.0, 4.0, 43.0, 3.0, 38.0, 46.0, 41.0, 26.0, 34.0, 26.0, 3.0]
Len = length(d)

yy = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
