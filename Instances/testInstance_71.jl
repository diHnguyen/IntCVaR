edge = [1 4; 1 6; 1 9; 1 13; 2 3; 2 11; 3 2; 3 7; 3 11; 3 13; 3 14; 4 2; 4 5; 4 9; 4 13; 4 15; 5 2; 5 6; 5 8; 5 9; 5 12; 6 2; 6 7; 6 8; 6 10; 6 11; 6 15; 7 4; 7 5; 7 8; 7 11; 7 13; 8 6; 8 9; 8 11; 8 15; 9 2; 9 6; 9 8; 9 12; 10 8; 10 11; 10 12; 10 13; 10 14; 10 15; 11 3; 11 4; 11 5; 11 9; 11 14; 12 14; 13 4; 13 5; 13 6; 13 10; 13 12; 14 3; 14 5; 14 6; 14 9; 14 15]
cL_orig = [85.0, 20.0, 335.0, 481.0, 1.0, 301.0, 33.0, 85.0, 41.0, 36.0, 324.0, 7.0, 41.0, 11.0, 119.0, 377.0, 94.0, 30.0, 114.0, 162.0, 277.0, 153.0, 4.0, 45.0, 46.0, 148.0, 168.0, 110.0, 25.0, 0.0, 86.0, 42.0, 25.0, 30.0, 26.0, 141.0, 293.0, 105.0, 44.0, 65.0, 65.0, 3.0, 48.0, 74.0, 25.0, 30.0, 339.0, 285.0, 66.0, 74.0, 125.0, 48.0, 161.0, 133.0, 43.0, 119.0, 17.0, 420.0, 251.0, 385.0, 87.0, 28.0]
cU_orig = [85.0, 138.0, 335.0, 481.0, 1.0, 301.0, 33.0, 85.0, 41.0, 316.0, 324.0, 27.0, 41.0, 59.0, 637.0, 377.0, 94.0, 30.0, 114.0, 162.0, 277.0, 153.0, 90.0, 45.0, 46.0, 148.0, 168.0, 110.0, 25.0, 18.0, 86.0, 42.0, 25.0, 32.0, 26.0, 141.0, 293.0, 105.0, 48.0, 65.0, 83.0, 3.0, 48.0, 128.0, 299.0, 84.0, 339.0, 285.0, 66.0, 74.0, 125.0, 118.0, 161.0, 133.0, 43.0, 119.0, 17.0, 420.0, 251.0, 385.0, 87.0, 70.0]
d = [30.0, 17.0, 45.0, 25.0, 36.0, 48.0, 7.0, 48.0, 2.0, 31.0, 28.0, 11.0, 16.0, 19.0, 41.0, 1.0, 1.0, 3.0, 14.0, 42.0, 27.0, 6.0, 19.0, 6.0, 6.0, 29.0, 1.0, 23.0, 3.0, 18.0, 46.0, 41.0, 40.0, 41.0, 25.0, 33.0, 7.0, 21.0, 1.0, 20.0, 6.0, 31.0, 8.0, 37.0, 4.0, 39.0, 30.0, 35.0, 31.0, 50.0, 45.0, 46.0, 23.0, 18.0, 29.0, 6.0, 28.0, 41.0, 19.0, 4.0, 30.0, 16.0]
Len = length(d)

yy = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
