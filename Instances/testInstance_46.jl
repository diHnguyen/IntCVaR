edge = [1 2; 1 3; 1 5; 1 6; 1 11; 1 15; 2 4; 2 12; 3 4; 3 5; 3 9; 3 10; 4 2; 4 7; 4 11; 5 2; 5 3; 5 4; 5 7; 5 11; 5 13; 5 14; 6 10; 6 11; 6 13; 6 14; 7 3; 7 13; 8 2; 8 5; 8 6; 8 7; 8 13; 9 4; 9 13; 9 15; 10 3; 10 8; 10 9; 10 12; 10 14; 10 15; 11 3; 11 5; 11 7; 11 8; 11 12; 11 13; 12 2; 12 4; 12 5; 12 6; 12 8; 13 8; 13 9; 13 11; 14 7; 14 9; 14 10; 14 12; 14 13]
cL_orig = [31.0, 7.0, 56.0, 79.0, 261.0, 453.0, 27.0, 433.0, 48.0, 22.0, 206.0, 108.0, 38.0, 28.0, 65.0, 5.0, 35.0, 0.0, 49.0, 83.0, 52.0, 348.0, 97.0, 103.0, 331.0, 235.0, 29.0, 92.0, 114.0, 81.0, 94.0, 12.0, 77.0, 105.0, 170.0, 95.0, 322.0, 21.0, 38.0, 81.0, 28.0, 21.0, 57.0, 130.0, 168.0, 66.0, 13.0, 60.0, 371.0, 213.0, 21.0, 19.0, 88.0, 43.0, 156.0, 23.0, 266.0, 132.0, 104.0, 4.0, 45.0]
cU_orig = [31.0, 7.0, 56.0, 79.0, 261.0, 453.0, 27.0, 433.0, 48.0, 22.0, 352.0, 224.0, 100.0, 28.0, 65.0, 5.0, 91.0, 50.0, 83.0, 83.0, 678.0, 460.0, 103.0, 103.0, 331.0, 525.0, 29.0, 92.0, 114.0, 81.0, 94.0, 12.0, 77.0, 105.0, 170.0, 95.0, 322.0, 21.0, 38.0, 81.0, 28.0, 21.0, 57.0, 130.0, 168.0, 66.0, 13.0, 60.0, 371.0, 213.0, 21.0, 19.0, 88.0, 89.0, 156.0, 23.0, 266.0, 182.0, 104.0, 48.0, 45.0]
d = [26.0, 29.0, 44.0, 29.0, 33.0, 28.0, 8.0, 36.0, 21.0, 50.0, 37.0, 29.0, 49.0, 18.0, 4.0, 8.0, 31.0, 31.0, 50.0, 36.0, 49.0, 41.0, 24.0, 37.0, 13.0, 30.0, 18.0, 17.0, 32.0, 25.0, 17.0, 1.0, 15.0, 12.0, 25.0, 35.0, 21.0, 11.0, 17.0, 26.0, 44.0, 31.0, 50.0, 28.0, 4.0, 41.0, 8.0, 42.0, 12.0, 25.0, 7.0, 13.0, 4.0, 1.0, 20.0, 32.0, 23.0, 14.0, 36.0, 22.0, 48.0]
Len = length(d)

yy = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
