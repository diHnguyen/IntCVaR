edge = [1 2; 1 3; 1 8; 1 14; 2 3; 2 4; 2 6; 2 8; 2 11; 2 14; 3 4; 3 10; 3 11; 3 12; 3 14; 4 2; 4 5; 4 6; 4 8; 4 10; 4 13; 4 15; 5 2; 5 8; 5 9; 5 10; 5 11; 5 14; 5 15; 6 5; 6 7; 6 8; 6 9; 6 13; 7 11; 7 14; 7 15; 8 4; 8 5; 8 13; 8 14; 9 12; 9 14; 10 2; 10 6; 10 7; 10 12; 10 13; 10 15; 11 12; 11 13; 12 3; 12 4; 12 5; 12 14; 13 3; 13 5; 13 6; 13 7; 13 10; 14 4; 14 7; 14 10]
cL_orig = [2.0, 74.0, 260.0, 142.0, 7.0, 29.0, 114.0, 47.0, 381.0, 465.0, 14.0, 242.0, 2.0, 10.0, 436.0, 0.0, 0.0, 69.0, 89.0, 156.0, 371.0, 382.0, 103.0, 24.0, 8.0, 216.0, 40.0, 291.0, 262.0, 2.0, 28.0, 50.0, 13.0, 199.0, 15.0, 73.0, 53.0, 18.0, 106.0, 99.0, 18.0, 133.0, 26.0, 67.0, 36.0, 108.0, 32.0, 24.0, 115.0, 14.0, 44.0, 441.0, 53.0, 8.0, 43.0, 336.0, 396.0, 33.0, 32.0, 0.0, 245.0, 252.0, 115.0]
cU_orig = [32.0, 112.0, 260.0, 180.0, 7.0, 67.0, 114.0, 47.0, 389.0, 465.0, 14.0, 242.0, 144.0, 10.0, 436.0, 26.0, 10.0, 69.0, 89.0, 156.0, 371.0, 382.0, 103.0, 24.0, 216.0, 216.0, 40.0, 291.0, 262.0, 8.0, 28.0, 50.0, 159.0, 199.0, 15.0, 73.0, 53.0, 276.0, 106.0, 99.0, 18.0, 133.0, 246.0, 67.0, 152.0, 108.0, 46.0, 24.0, 115.0, 14.0, 44.0, 441.0, 165.0, 58.0, 135.0, 336.0, 396.0, 181.0, 180.0, 230.0, 511.0, 252.0, 115.0]
d = [21.0, 16.0, 46.0, 39.0, 7.0, 37.0, 42.0, 29.0, 4.0, 24.0, 18.0, 24.0, 44.0, 28.0, 4.0, 44.0, 12.0, 36.0, 37.0, 21.0, 50.0, 33.0, 37.0, 31.0, 40.0, 39.0, 2.0, 7.0, 49.0, 10.0, 38.0, 47.0, 5.0, 46.0, 12.0, 19.0, 33.0, 45.0, 24.0, 47.0, 34.0, 41.0, 35.0, 42.0, 46.0, 16.0, 40.0, 26.0, 26.0, 20.0, 43.0, 47.0, 44.0, 24.0, 50.0, 49.0, 33.0, 27.0, 45.0, 7.0, 18.0, 44.0, 9.0]
Len = length(d)

yy = [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
