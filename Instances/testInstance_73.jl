edge = [1 2; 1 3; 1 5; 1 10; 1 12; 2 3; 2 5; 2 7; 2 8; 2 13; 3 2; 3 4; 3 5; 3 7; 3 10; 3 11; 3 14; 4 7; 4 15; 5 3; 5 8; 5 10; 5 14; 6 2; 6 7; 6 10; 6 13; 6 15; 7 9; 7 10; 7 11; 7 12; 7 14; 8 6; 8 11; 8 13; 8 14; 9 3; 9 4; 9 5; 9 6; 9 10; 9 12; 10 4; 10 6; 10 12; 11 2; 11 5; 11 6; 11 9; 11 10; 11 13; 12 2; 12 3; 12 4; 12 7; 12 13; 13 4; 13 5; 13 14; 13 15; 14 4; 14 8]
cL_orig = [30.0, 77.0, 85.0, 369.0, 487.0, 2.0, 25.0, 91.0, 172.0, 495.0, 47.0, 14.0, 89.0, 83.0, 331.0, 81.0, 143.0, 10.0, 251.0, 23.0, 22.0, 4.0, 176.0, 79.0, 16.0, 59.0, 131.0, 140.0, 63.0, 97.0, 21.0, 70.0, 316.0, 26.0, 51.0, 101.0, 138.0, 113.0, 33.0, 71.0, 2.0, 17.0, 8.0, 111.0, 145.0, 1.0, 222.0, 31.0, 229.0, 61.0, 2.0, 12.0, 383.0, 115.0, 229.0, 81.0, 7.0, 9.0, 266.0, 26.0, 92.0, 199.0, 33.0]
cU_orig = [30.0, 77.0, 85.0, 369.0, 487.0, 84.0, 25.0, 91.0, 172.0, 495.0, 47.0, 50.0, 89.0, 83.0, 331.0, 81.0, 717.0, 36.0, 251.0, 23.0, 22.0, 4.0, 176.0, 79.0, 16.0, 59.0, 131.0, 140.0, 63.0, 97.0, 21.0, 70.0, 316.0, 126.0, 191.0, 279.0, 436.0, 113.0, 249.0, 71.0, 2.0, 17.0, 8.0, 111.0, 145.0, 1.0, 222.0, 31.0, 229.0, 61.0, 2.0, 80.0, 383.0, 115.0, 249.0, 81.0, 7.0, 255.0, 266.0, 26.0, 92.0, 311.0, 33.0]
d = [26.0, 43.0, 44.0, 2.0, 38.0, 11.0, 17.0, 21.0, 50.0, 47.0, 13.0, 28.0, 6.0, 4.0, 1.0, 8.0, 37.0, 16.0, 38.0, 42.0, 49.0, 29.0, 3.0, 17.0, 15.0, 31.0, 17.0, 6.0, 50.0, 1.0, 46.0, 34.0, 36.0, 26.0, 41.0, 22.0, 31.0, 19.0, 46.0, 22.0, 26.0, 20.0, 39.0, 44.0, 39.0, 14.0, 40.0, 16.0, 7.0, 5.0, 21.0, 3.0, 10.0, 32.0, 10.0, 34.0, 2.0, 27.0, 35.0, 46.0, 6.0, 39.0, 43.0]
Len = length(d)

yy = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
