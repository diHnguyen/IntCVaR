edge = [1 2; 1 3; 1 11; 1 12; 1 13; 2 4; 2 6; 2 9; 3 2; 3 4; 3 6; 3 8; 3 11; 3 15; 4 2; 4 9; 4 10; 4 13; 4 15; 5 2; 5 6; 5 7; 5 8; 5 11; 5 12; 6 2; 6 7; 6 8; 6 10; 6 11; 6 12; 6 15; 7 4; 7 11; 7 12; 8 9; 8 11; 8 13; 8 15; 9 5; 9 6; 9 8; 9 15; 10 5; 10 6; 10 12; 10 15; 11 7; 11 10; 11 13; 12 3; 12 4; 12 5; 12 6; 12 10; 12 13; 12 15; 13 4; 13 5; 13 6; 13 8; 13 11; 13 15; 14 7; 14 11]
cL_orig = [33.0, 12.0, 183.0, 200.0, 6.0, 6.0, 190.0, 100.0, 26.0, 22.0, 95.0, 170.0, 384.0, 482.0, 78.0, 219.0, 220.0, 320.0, 171.0, 25.0, 4.0, 86.0, 90.0, 200.0, 30.0, 37.0, 23.0, 70.0, 1.0, 235.0, 165.0, 13.0, 139.0, 12.0, 2.0, 25.0, 77.0, 199.0, 171.0, 62.0, 26.0, 1.0, 75.0, 55.0, 147.0, 31.0, 44.0, 103.0, 16.0, 26.0, 212.0, 175.0, 230.0, 52.0, 73.0, 1.0, 55.0, 210.0, 54.0, 338.0, 54.0, 56.0, 32.0, 14.0, 149.0]
cU_orig = [33.0, 12.0, 183.0, 266.0, 6.0, 6.0, 190.0, 100.0, 66.0, 26.0, 95.0, 170.0, 384.0, 482.0, 86.0, 219.0, 220.0, 320.0, 171.0, 25.0, 4.0, 86.0, 90.0, 200.0, 30.0, 259.0, 23.0, 70.0, 75.0, 235.0, 165.0, 77.0, 139.0, 222.0, 266.0, 25.0, 169.0, 199.0, 171.0, 62.0, 26.0, 7.0, 75.0, 55.0, 147.0, 31.0, 50.0, 103.0, 54.0, 26.0, 454.0, 175.0, 230.0, 508.0, 83.0, 1.0, 55.0, 626.0, 54.0, 338.0, 148.0, 56.0, 32.0, 14.0, 149.0]
d = [36.0, 20.0, 34.0, 27.0, 29.0, 21.0, 3.0, 44.0, 28.0, 34.0, 9.0, 47.0, 24.0, 30.0, 22.0, 2.0, 22.0, 32.0, 46.0, 8.0, 45.0, 3.0, 15.0, 17.0, 44.0, 9.0, 21.0, 43.0, 34.0, 34.0, 42.0, 7.0, 1.0, 10.0, 26.0, 32.0, 31.0, 17.0, 4.0, 50.0, 22.0, 27.0, 3.0, 23.0, 37.0, 23.0, 32.0, 49.0, 23.0, 10.0, 17.0, 9.0, 43.0, 24.0, 5.0, 42.0, 3.0, 34.0, 45.0, 3.0, 39.0, 19.0, 15.0, 8.0, 5.0]
Len = length(d)

yy = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
