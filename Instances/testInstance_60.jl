edge = [1 2; 1 4; 1 5; 1 6; 1 9; 2 9; 2 12; 2 14; 3 7; 4 2; 4 3; 4 15; 5 8; 5 9; 5 11; 5 13; 6 2; 6 3; 6 4; 6 8; 6 10; 6 11; 7 2; 7 3; 7 4; 7 9; 7 13; 8 5; 8 6; 8 9; 8 11; 8 12; 9 2; 9 7; 9 10; 9 11; 10 3; 10 7; 10 8; 10 12; 10 14; 10 15; 11 2; 11 3; 11 5; 11 7; 11 10; 11 12; 11 13; 11 15; 12 2; 12 5; 12 10; 13 6; 13 7; 13 9; 14 5; 14 6; 14 10; 14 11; 14 13; 14 15]
cL_orig = [21.0, 108.0, 53.0, 93.0, 260.0, 41.0, 37.0, 227.0, 39.0, 32.0, 30.0, 298.0, 13.0, 95.0, 252.0, 300.0, 142.0, 87.0, 0.0, 13.0, 54.0, 91.0, 10.0, 129.0, 100.0, 97.0, 131.0, 100.0, 6.0, 8.0, 79.0, 111.0, 189.0, 42.0, 17.0, 83.0, 39.0, 107.0, 81.0, 89.0, 19.0, 67.0, 372.0, 33.0, 202.0, 75.0, 46.0, 30.0, 52.0, 190.0, 3.0, 286.0, 87.0, 36.0, 242.0, 157.0, 164.0, 218.0, 139.0, 106.0, 49.0, 27.0]
cU_orig = [21.0, 108.0, 339.0, 93.0, 260.0, 405.0, 175.0, 227.0, 39.0, 32.0, 30.0, 298.0, 13.0, 141.0, 252.0, 300.0, 142.0, 87.0, 140.0, 13.0, 54.0, 173.0, 48.0, 129.0, 100.0, 97.0, 131.0, 100.0, 6.0, 8.0, 79.0, 111.0, 319.0, 42.0, 17.0, 83.0, 389.0, 107.0, 81.0, 89.0, 19.0, 67.0, 372.0, 33.0, 202.0, 75.0, 46.0, 30.0, 52.0, 190.0, 3.0, 286.0, 87.0, 36.0, 242.0, 157.0, 164.0, 218.0, 139.0, 106.0, 49.0, 27.0]
d = [32.0, 37.0, 21.0, 42.0, 29.0, 23.0, 2.0, 27.0, 1.0, 2.0, 1.0, 28.0, 38.0, 15.0, 35.0, 44.0, 32.0, 48.0, 38.0, 9.0, 18.0, 48.0, 34.0, 1.0, 37.0, 34.0, 13.0, 48.0, 27.0, 12.0, 13.0, 8.0, 21.0, 48.0, 16.0, 49.0, 41.0, 40.0, 19.0, 38.0, 45.0, 3.0, 8.0, 26.0, 42.0, 22.0, 23.0, 43.0, 7.0, 35.0, 44.0, 33.0, 38.0, 6.0, 20.0, 32.0, 27.0, 29.0, 35.0, 36.0, 13.0, 31.0]
Len = length(d)

yy = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
