edge = [1 7; 1 8; 1 10; 2 7; 2 12; 2 14; 3 9; 3 10; 3 11; 3 15; 4 2; 4 5; 4 6; 4 7; 4 12; 4 15; 5 12; 5 15; 6 3; 6 7; 6 9; 6 10; 6 13; 7 4; 7 6; 7 10; 7 11; 7 12; 7 13; 7 14; 8 4; 8 6; 8 10; 8 15; 9 4; 9 10; 9 12; 9 14; 10 3; 10 6; 10 7; 10 13; 10 14; 11 4; 11 5; 11 7; 11 13; 11 15; 12 2; 12 3; 12 8; 12 13; 12 14; 13 2; 13 7; 13 12; 13 14; 14 3; 14 8; 14 10; 14 12; 14 13]
cL_orig = [107.0, 126.0, 288.0, 83.0, 2.0, 302.0, 81.0, 23.0, 145.0, 549.0, 74.0, 36.0, 77.0, 76.0, 83.0, 271.0, 247.0, 423.0, 53.0, 25.0, 45.0, 94.0, 172.0, 43.0, 12.0, 58.0, 75.0, 3.0, 195.0, 90.0, 23.0, 7.0, 67.0, 8.0, 0.0, 34.0, 16.0, 1.0, 52.0, 6.0, 35.0, 5.0, 58.0, 127.0, 3.0, 61.0, 29.0, 130.0, 3.0, 329.0, 164.0, 22.0, 61.0, 246.0, 20.0, 18.0, 40.0, 86.0, 265.0, 1.0, 35.0, 2.0]
cU_orig = [107.0, 126.0, 288.0, 249.0, 232.0, 302.0, 183.0, 23.0, 263.0, 549.0, 74.0, 36.0, 77.0, 212.0, 291.0, 271.0, 247.0, 423.0, 53.0, 25.0, 103.0, 94.0, 172.0, 43.0, 12.0, 58.0, 75.0, 11.0, 195.0, 90.0, 23.0, 7.0, 67.0, 8.0, 2.0, 38.0, 46.0, 1.0, 268.0, 6.0, 35.0, 115.0, 58.0, 127.0, 151.0, 61.0, 141.0, 130.0, 41.0, 329.0, 164.0, 22.0, 61.0, 246.0, 26.0, 18.0, 40.0, 86.0, 265.0, 105.0, 35.0, 94.0]
d = [25.0, 5.0, 4.0, 13.0, 15.0, 45.0, 36.0, 26.0, 20.0, 17.0, 3.0, 37.0, 40.0, 39.0, 2.0, 43.0, 16.0, 10.0, 37.0, 21.0, 25.0, 2.0, 2.0, 37.0, 25.0, 26.0, 7.0, 41.0, 34.0, 2.0, 22.0, 26.0, 24.0, 39.0, 30.0, 26.0, 6.0, 31.0, 33.0, 18.0, 15.0, 41.0, 50.0, 26.0, 18.0, 24.0, 48.0, 36.0, 21.0, 39.0, 35.0, 18.0, 38.0, 38.0, 20.0, 7.0, 15.0, 3.0, 42.0, 19.0, 33.0, 29.0]
Len = length(d)

yy = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
