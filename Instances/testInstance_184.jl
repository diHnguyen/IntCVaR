edge = [1 3; 1 4; 1 5; 1 6; 1 7; 1 8; 1 9; 1 11; 1 12; 1 13; 1 15; 2 3; 2 10; 3 4; 3 7; 3 9; 3 10; 3 13; 3 14; 3 15; 4 3; 4 5; 5 2; 5 4; 5 7; 5 10; 5 14; 5 15; 6 2; 6 4; 6 7; 7 3; 7 9; 7 11; 7 14; 8 6; 8 12; 8 14; 9 2; 9 3; 9 10; 9 11; 9 13; 9 14; 10 3; 10 7; 10 13; 11 6; 11 8; 11 10; 11 14; 12 3; 12 8; 12 9; 12 11; 12 14; 12 15; 13 3; 13 7; 13 9; 14 2; 14 7; 14 13; 14 15]
cL_orig = [11.0, 117.0, 67.0, 25.0, 84.0, 190.0, 147.0, 411.0, 193.0, 485.0, 551.0, 36.0, 4.0, 38.0, 14.0, 47.0, 45.0, 187.0, 16.0, 95.0, 7.0, 0.0, 23.0, 25.0, 17.0, 2.0, 106.0, 384.0, 103.0, 50.0, 20.0, 181.0, 4.0, 186.0, 134.0, 64.0, 33.0, 62.0, 49.0, 94.0, 7.0, 25.0, 15.0, 174.0, 175.0, 79.0, 57.0, 47.0, 35.0, 35.0, 9.0, 3.0, 8.0, 124.0, 13.0, 7.0, 15.0, 486.0, 63.0, 23.0, 509.0, 53.0, 32.0, 35.0]
cU_orig = [93.0, 117.0, 67.0, 25.0, 156.0, 190.0, 147.0, 411.0, 193.0, 485.0, 551.0, 36.0, 4.0, 42.0, 64.0, 47.0, 493.0, 187.0, 16.0, 95.0, 13.0, 8.0, 249.0, 25.0, 17.0, 2.0, 106.0, 384.0, 103.0, 50.0, 22.0, 181.0, 24.0, 186.0, 134.0, 136.0, 307.0, 100.0, 49.0, 94.0, 7.0, 55.0, 15.0, 274.0, 175.0, 79.0, 57.0, 47.0, 35.0, 35.0, 9.0, 3.0, 8.0, 124.0, 13.0, 27.0, 15.0, 486.0, 253.0, 45.0, 509.0, 55.0, 32.0, 35.0]
d = [41.0, 13.0, 37.0, 30.0, 9.0, 47.0, 31.0, 40.0, 24.0, 14.0, 35.0, 37.0, 36.0, 10.0, 29.0, 37.0, 15.0, 4.0, 48.0, 50.0, 45.0, 32.0, 22.0, 31.0, 31.0, 23.0, 39.0, 27.0, 25.0, 41.0, 50.0, 31.0, 5.0, 22.0, 20.0, 33.0, 11.0, 38.0, 42.0, 19.0, 29.0, 14.0, 48.0, 47.0, 33.0, 16.0, 16.0, 13.0, 35.0, 25.0, 25.0, 19.0, 4.0, 41.0, 28.0, 14.0, 46.0, 19.0, 3.0, 42.0, 40.0, 40.0, 22.0, 45.0]
Len = length(d)

yy = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]

c_orig = 0.5*(cL_orig+cU_orig)

SP_init = sum(yy[i]*c_orig[i] for i = 1:Len)


p = [1.0]

g = [SP_init]

h = [0.0]


origin = 1

destination =15

last_node = maximum(edge)
all_nodes = collect(1:last_node)

M_orig = zeros(Len)

for i = 1:Len
    M_orig[i] = cU_orig[i] - cL_orig[i]
end

case = 0
delta1 = 1e-6
delta2 = 5
last_node = maximum(edge)
